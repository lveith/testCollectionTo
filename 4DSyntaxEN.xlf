<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xliff PUBLIC "-//XLIFF//DTD XLIFF//EN"
"http://www.oasis-open.org/committees/xliff/documents/xliff.dtd">
<!--
   Translation file for 4D products.
   Copyright (C) 2008-2019 4D SAS.
   This file is distributed under the same license as the 4D product package.
-->
<xliff version="1.0">
   <file datatype="x-STR#" original="undefined" source-language="en" target-language="en" product-version="v18 R3">
      <header>
         <note>file generated using 4D Doc Center. Please do not modify.</note>
      </header>
      <body>
        <group resname="4D syntax">
            <trans-unit resname="cmd1" id="1">
                <source></source>
                <target>Sum ( series {; attributePath} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc1" id="1">
                <source></source>
                <target>returns the sum (total of all values) for series.</target>
            </trans-unit>
            <trans-unit resname="cmd2" id="2">
                <source></source>
                <target>Average ( series {; attributePath} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc2" id="2">
                <source></source>
                <target>returns the arithmetic mean (average) of series.</target>
            </trans-unit>
            <trans-unit resname="cmd3" id="3">
                <source></source>
                <target>Max ( series {; attributePath} ) -&gt; Number, Date</target>
            </trans-unit>
            <trans-unit resname="desc3" id="3">
                <source></source>
                <target>returns the maximum value in series.</target>
            </trans-unit>
            <trans-unit resname="cmd4" id="4">
                <source></source>
                <target>Min ( series {; attributePath} ) -&gt; Number, Date</target>
            </trans-unit>
            <trans-unit resname="desc4" id="4">
                <source></source>
                <target>returns the minimum value in series.</target>
            </trans-unit>
            <trans-unit resname="cmd5" id="5">
                <source></source>
                <target>Print form ( {aTable ;} form {; areaStart {; areaEnd}} )  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc5" id="5">
                <source></source>
                <target>prints form with the current values of fields and variables of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd6" id="6">
                <source></source>
                <target>PAGE BREAK {( * | &gt; )}</target>
            </trans-unit>
            <trans-unit resname="desc6" id="6">
                <source></source>
                <target>triggers the printing of the data that has been sent to the printer and ejects the page.</target>
            </trans-unit>
            <trans-unit resname="cmd7" id="7">
                <source></source>
                <target>_o_Records in subselection ( subtable ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc7" id="7">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd8" id="8">
                <source></source>
                <target>Int ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc8" id="8">
                <source></source>
                <target>returns the integer portion of number.</target>
            </trans-unit>
            <trans-unit resname="cmd9" id="9">
                <source></source>
                <target>Dec ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc9" id="9">
                <source></source>
                <target>returns the decimal (fractional) portion of number.</target>
            </trans-unit>
            <trans-unit resname="cmd10" id="10">
                <source></source>
                <target>String ( expression {; format {; addTime}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc10" id="10">
                <source></source>
                <target>returns the string form of the numeric, Date, Time, string or Boolean expression you pass in expression.</target>
            </trans-unit>
            <trans-unit resname="cmd11" id="11">
                <source></source>
                <target>Num ( expression {; separator} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc11" id="11">
                <source></source>
                <target>returns the numeric form of the String, Boolean or numeric expression you pass in expression.</target>
            </trans-unit>
            <trans-unit resname="cmd12" id="12">
                <source></source>
                <target>Substring ( source ; firstChar {; numChars} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc12" id="12">
                <source></source>
                <target>returns the portion of source defined by firstChar and numChars.</target>
            </trans-unit>
            <trans-unit resname="cmd13" id="13">
                <source></source>
                <target>Uppercase ( aString {; *} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc13" id="13">
                <source></source>
                <target>takes aString and returns the string with all alphabetic characters in uppercase.</target>
            </trans-unit>
            <trans-unit resname="cmd14" id="14">
                <source></source>
                <target>Lowercase ( aString {; *} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc14" id="14">
                <source></source>
                <target>takes aString and returns the string with all alphabetic characters in lowercase.</target>
            </trans-unit>
            <trans-unit resname="cmd15" id="15">
                <source></source>
                <target>Position ( find ; aString {; start {; lengthFound}}{; *} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc15" id="15">
                <source></source>
                <target>returns the position of the first occurrence of find in aString.</target>
            </trans-unit>
            <trans-unit resname="cmd16" id="16">
                <source></source>
                <target>Length ( string ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc16" id="16">
                <source></source>
                <target>returns the number of characters that are in aString.</target>
            </trans-unit>
            <trans-unit resname="cmd17" id="17">
                <source></source>
                <target>Sin ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc17" id="17">
                <source></source>
                <target>returns the sine of number, where number is expressed in radians.</target>
            </trans-unit>
            <trans-unit resname="cmd18" id="18">
                <source></source>
                <target>Cos ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc18" id="18">
                <source></source>
                <target>returns the cosine of number, where number is expressed in radians.</target>
            </trans-unit>
            <trans-unit resname="cmd19" id="19">
                <source></source>
                <target>Tan ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc19" id="19">
                <source></source>
                <target>returns the tangent of number, where number is expressed in radians.</target>
            </trans-unit>
            <trans-unit resname="cmd20" id="20">
                <source></source>
                <target>Arctan ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc20" id="20">
                <source></source>
                <target>returns the angle, expressed in radians, of the tangent number.</target>
            </trans-unit>
            <trans-unit resname="cmd21" id="21">
                <source></source>
                <target>Exp ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc21" id="21">
                <source></source>
                <target>raises the natural log base (e &#61; 2.71828...) by the power of number.</target>
            </trans-unit>
            <trans-unit resname="cmd22" id="22">
                <source></source>
                <target>Log ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc22" id="22">
                <source></source>
                <target>returns the natural (Napierian) log of number.</target>
            </trans-unit>
            <trans-unit resname="cmd23" id="23">
                <source></source>
                <target>Day of ( date ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc23" id="23">
                <source></source>
                <target>returns the day of the month of aDate.</target>
            </trans-unit>
            <trans-unit resname="cmd24" id="24">
                <source></source>
                <target>Month of ( aDate ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc24" id="24">
                <source></source>
                <target>returns the month of aDate.</target>
            </trans-unit>
            <trans-unit resname="cmd25" id="25">
                <source></source>
                <target>Year of ( date ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc25" id="25">
                <source></source>
                <target>returns the year of aDate.</target>
            </trans-unit>
            <trans-unit resname="cmd26" id="26">
                <source></source>
                <target>Std deviation ( series ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc26" id="26">
                <source></source>
                <target>returns the standard deviation of series.</target>
            </trans-unit>
            <trans-unit resname="cmd27" id="27">
                <source></source>
                <target>Variance ( series ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc27" id="27">
                <source></source>
                <target>returns the variance for series.</target>
            </trans-unit>
            <trans-unit resname="cmd28" id="28">
                <source></source>
                <target>Sum squares ( series ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc28" id="28">
                <source></source>
                <target>returns the sum of the squares of series.</target>
            </trans-unit>
            <trans-unit resname="cmd29" id="29">
                <source></source>
                <target>Before  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc29" id="29">
                <source></source>
                <target>returns True for the Before execution cycle</target>
            </trans-unit>
            <trans-unit resname="cmd30" id="30">
                <source></source>
                <target>_o_During  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc30" id="30">
                <source></source>
                <target>(obsolete) returns True for the In break execution cycle</target>
            </trans-unit>
            <trans-unit resname="cmd31" id="31">
                <source></source>
                <target>After  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc31" id="31">
                <source></source>
                <target>returns True for the After execution cycle</target>
            </trans-unit>
            <trans-unit resname="cmd32" id="32">
                <source></source>
                <target>Modified ( aField ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc32" id="32">
                <source></source>
                <target> returns True if field has been programmatically assigned a value or has been edited during data entry.</target>
            </trans-unit>
            <trans-unit resname="cmd33" id="33">
                <source></source>
                <target>Current date {( * )} -&gt; Date</target>
            </trans-unit>
            <trans-unit resname="desc33" id="33">
                <source></source>
                <target>returns the current date as kept by the system clock.</target>
            </trans-unit>
            <trans-unit resname="cmd34" id="34">
                <source></source>
                <target>Not ( boolean ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc34" id="34">
                <source></source>
                <target>returns the negation of boolean, changing True to False or False to True.</target>
            </trans-unit>
            <trans-unit resname="cmd35" id="35">
                <source></source>
                <target>Old ( aField ) -&gt; Expression</target>
            </trans-unit>
            <trans-unit resname="desc35" id="35">
                <source></source>
                <target>returns the value held in aField before the field was programmatically assigned a value or modified in data entry.</target>
            </trans-unit>
            <trans-unit resname="cmd36" id="36">
                <source></source>
                <target>End selection {( aTable )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc36" id="36">
                <source></source>
                <target>returns TRUE when the current record pointer is beyond the last record of the current selection of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd37" id="37">
                <source></source>
                <target>_o_End subselection ( subtable ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc37" id="37">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd38" id="38">
                <source></source>
                <target>REJECT {( aField )}</target>
            </trans-unit>
            <trans-unit resname="desc38" id="38">
                <source></source>
                <target>rejects the entire data entry and forces the user to stay in the form or rejects only the modification of the aField field.</target>
            </trans-unit>
            <trans-unit resname="cmd39" id="39">
                <source></source>
                <target>PRINT LABEL ( {aTable }{;}{ document {; * | &gt;}} )</target>
            </trans-unit>
            <trans-unit resname="desc39" id="39">
                <source></source>
                <target>enables you to print labels with the data from the selection of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd40" id="40">
                <source></source>
                <target>DIALOG ( {aTable ;} form {; formData}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc40" id="40">
                <source></source>
                <target>presents the form to the user, along with formData  parameter(s) (optional)</target>
            </trans-unit>
            <trans-unit resname="cmd41" id="41">
                <source></source>
                <target>ALERT ( message {; okButtonTitle} )</target>
            </trans-unit>
            <trans-unit resname="desc41" id="41">
                <source></source>
                <target>displays an alert dialog box composed of a note icon, a message, and an OK button. </target>
            </trans-unit>
            <trans-unit resname="cmd42" id="42">
                <source></source>
                <target>RELATE ONE ( manyTable | Field {; choiceField} )</target>
            </trans-unit>
            <trans-unit resname="desc42" id="42">
                <source></source>
                <target>establishes all automatic Many-to-One relations for manyTable in the current process or looks for the record related to manyField.</target>
            </trans-unit>
            <trans-unit resname="cmd43" id="43">
                <source></source>
                <target>SAVE RELATED ONE ( aField )</target>
            </trans-unit>
            <trans-unit resname="desc43" id="43">
                <source></source>
                <target>saves the record related to aField.</target>
            </trans-unit>
            <trans-unit resname="cmd44" id="44">
                <source></source>
                <target>OLD RELATED ONE ( aField )</target>
            </trans-unit>
            <trans-unit resname="desc44" id="44">
                <source></source>
                <target>uses the old value of aField to establish  the relation</target>
            </trans-unit>
            <trans-unit resname="cmd46" id="46">
                <source></source>
                <target>DEFAULT TABLE ( aTable )</target>
            </trans-unit>
            <trans-unit resname="desc46" id="46">
                <source></source>
                <target>sets aTable as the default table for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd47" id="47">
                <source></source>
                <target>ALL RECORDS {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc47" id="47">
                <source></source>
                <target>selects all the records of aTable for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd48" id="48">
                <source></source>
                <target>QUERY BY FORMULA ( aTable {; queryFormula} )</target>
            </trans-unit>
            <trans-unit resname="desc48" id="48">
                <source></source>
                <target>looks for records in aTable by applying queryFormula to each record in the table .</target>
            </trans-unit>
            <trans-unit resname="cmd49" id="49">
                <source></source>
                <target>ORDER BY ( {aTable ;}{ aField }{; &gt; or &lt; }{; aField2 ; &gt; or &lt;2 ; ... ; aFieldN ; &gt; or &lt;N}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc49" id="49">
                <source></source>
                <target>sorts (reorders) the records of the current selection of aTable for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd50" id="50">
                <source></source>
                <target>FIRST RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc50" id="50">
                <source></source>
                <target>makes the first record of the current selection of aTable the current record, and loads the record from disk.</target>
            </trans-unit>
            <trans-unit resname="cmd51" id="51">
                <source></source>
                <target>NEXT RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc51" id="51">
                <source></source>
                <target>moves the current record pointer to the next record in the current selection of aTable for the current process. </target>
            </trans-unit>
            <trans-unit resname="cmd52" id="52">
                <source></source>
                <target>LOAD RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc52" id="52">
                <source></source>
                <target>loads the current record of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd53" id="53">
                <source></source>
                <target>SAVE RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc53" id="53">
                <source></source>
                <target>saves the current record of aTable in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd54" id="54">
                <source></source>
                <target>FORM SET OUTPUT ( {aTable ;} form {; userForm} )</target>
            </trans-unit>
            <trans-unit resname="desc54" id="54">
                <source></source>
                <target>sets the current output form for table to form, or userForm. </target>
            </trans-unit>
            <trans-unit resname="cmd55" id="55">
                <source></source>
                <target>FORM SET INPUT ( {aTable ;} form {; userForm {; *}} ) </target>
            </trans-unit>
            <trans-unit resname="desc55" id="55">
                <source></source>
                <target>sets the current input form for aTable to form, or userForm. The form must belong to aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd56" id="56">
                <source></source>
                <target>ADD RECORD ( {aTable}{;}{*} )</target>
            </trans-unit>
            <trans-unit resname="desc56" id="56">
                <source></source>
                <target>lets the user add a new record to the database for the table aTable or for the default table, if you omit the aTable parameter. </target>
            </trans-unit>
            <trans-unit resname="cmd57" id="57">
                <source></source>
                <target>MODIFY RECORD ( {aTable}{;}{*} )</target>
            </trans-unit>
            <trans-unit resname="desc57" id="57">
                <source></source>
                <target>modifies the current record for the table aTable or for the default table if you omit the aTable parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd58" id="58">
                <source></source>
                <target>DELETE RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc58" id="58">
                <source></source>
                <target>deletes the current record of aTable in the process.</target>
            </trans-unit>
            <trans-unit resname="cmd59" id="59">
                <source></source>
                <target>DISPLAY SELECTION ( {aTable}{; selectMode}{; enterList}{; *}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc59" id="59">
                <source></source>
                <target>displays the selection of aTable, using the output form.</target>
            </trans-unit>
            <trans-unit resname="cmd60" id="60">
                <source></source>
                <target>PRINT SELECTION ( {aTable}{;}{* | &gt;} )</target>
            </trans-unit>
            <trans-unit resname="desc60" id="60">
                <source></source>
                <target>prints the current selection of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd61" id="61">
                <source></source>
                <target>_o_FIRST SUBRECORD ( subtable )</target>
            </trans-unit>
            <trans-unit resname="desc61" id="61">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd62" id="62">
                <source></source>
                <target>_o_NEXT SUBRECORD ( subtable )</target>
            </trans-unit>
            <trans-unit resname="desc62" id="62">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd63" id="63">
                <source></source>
                <target>EXECUTE FORMULA ( statement )</target>
            </trans-unit>
            <trans-unit resname="desc63" id="63">
                <source></source>
                <target>executes statement as a line of code.</target>
            </trans-unit>
            <trans-unit resname="cmd65" id="65">
                <source></source>
                <target>CREATE RELATED ONE ( aField )</target>
            </trans-unit>
            <trans-unit resname="desc65" id="65">
                <source></source>
                <target>creates or loads the record related to aField into memory</target>
            </trans-unit>
            <trans-unit resname="cmd66" id="66">
                <source></source>
                <target>DELETE SELECTION {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc66" id="66">
                <source></source>
                <target>deletes the current selection of records from aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd67" id="67">
                <source></source>
                <target>SET MENU BAR ( menuBar {; process}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc67" id="67">
                <source></source>
                <target>replaces the current menu bar with the one specified by menuBar for the current process only.</target>
            </trans-unit>
            <trans-unit resname="cmd68" id="68">
                <source></source>
                <target>CREATE RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc68" id="68">
                <source></source>
                <target>creates a new empty record for aTable, but does not display the new record.</target>
            </trans-unit>
            <trans-unit resname="cmd70" id="70">
                <source></source>
                <target>APPLY TO SELECTION ( aTable ; statement )</target>
            </trans-unit>
            <trans-unit resname="desc70" id="70">
                <source></source>
                <target>applies statement to each record in the current selection of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd71" id="71">
                <source></source>
                <target>PRINT RECORD ( {aTable}{;}{* | &gt;} )</target>
            </trans-unit>
            <trans-unit resname="desc71" id="71">
                <source></source>
                <target>prints the current record of aTable, without modifying the current selection.</target>
            </trans-unit>
            <trans-unit resname="cmd72" id="72">
                <source></source>
                <target>_o_CREATE SUBRECORD ( subtable )</target>
            </trans-unit>
            <trans-unit resname="desc72" id="72">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd73" id="73">
                <source></source>
                <target>_o_APPLY TO SUBSELECTION ( subtable ; statement )</target>
            </trans-unit>
            <trans-unit resname="desc73" id="73">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd74" id="74">
                <source></source>
                <target>LOAD VARIABLES ( document ; variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc74" id="74">
                <source></source>
                <target>loads one or more variables from the document specified by document</target>
            </trans-unit>
            <trans-unit resname="cmd75" id="75">
                <source></source>
                <target>SAVE VARIABLES ( document ; variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc75" id="75">
                <source></source>
                <target>saves one or more variables in the document whose name you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd76" id="76">
                <source></source>
                <target>Records in selection {( aTable )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc76" id="76">
                <source></source>
                <target>returns the number of records in the current selection of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd77" id="77">
                <source></source>
                <target>SET CHANNEL ( port ; settings )</target>
            </trans-unit>
            <trans-unit resname="desc77" id="77">
                <source></source>
                <target>opens a serial port or a document.</target>
            </trans-unit>
            <trans-unit resname="cmd78" id="78">
                <source></source>
                <target>SEND RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc78" id="78">
                <source></source>
                <target>sends the current record of aTable to the serial port or document opened by the SET CHANNEL command.</target>
            </trans-unit>
            <trans-unit resname="cmd79" id="79">
                <source></source>
                <target>RECEIVE RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc79" id="79">
                <source></source>
                <target>receives a record into table from the serial port or document opened by the SET CHANNEL command.</target>
            </trans-unit>
            <trans-unit resname="cmd80" id="80">
                <source></source>
                <target>SEND VARIABLE ( variable )</target>
            </trans-unit>
            <trans-unit resname="desc80" id="80">
                <source></source>
                <target>sends variable to the document or serial port previously opened by SET CHANNEL.</target>
            </trans-unit>
            <trans-unit resname="cmd81" id="81">
                <source></source>
                <target>RECEIVE VARIABLE ( variable )</target>
            </trans-unit>
            <trans-unit resname="desc81" id="81">
                <source></source>
                <target>receives variable, which was previously sent by SEND VARIABLE from the document or serial port previously opened by SET CHANNEL.</target>
            </trans-unit>
            <trans-unit resname="cmd82" id="82">
                <source></source>
                <target>Undefined ( expression ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc82" id="82">
                <source></source>
                <target>returns True if the result of the evaluation of expression is not a defined value, and False otherwise</target>
            </trans-unit>
            <trans-unit resname="cmd83" id="83">
                <source></source>
                <target>Records in table {( aTable )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc83" id="83">
                <source></source>
                <target>returns the total number of records in aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd84" id="84">
                <source></source>
                <target>EXPORT DIF ( {aTable ;} document )</target>
            </trans-unit>
            <trans-unit resname="desc84" id="84">
                <source></source>
                <target>writes data from the records of the current selection of aTable in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd85" id="85">
                <source></source>
                <target>EXPORT SYLK ( {aTable ;} document )</target>
            </trans-unit>
            <trans-unit resname="desc85" id="85">
                <source></source>
                <target>writes data from the records of the current selection of aTable in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd86" id="86">
                <source></source>
                <target>IMPORT DIF ( {aTable ;} document )</target>
            </trans-unit>
            <trans-unit resname="desc86" id="86">
                <source></source>
                <target>reads data from document, a Windows or Macintosh DIF document, into the table aTable by creating new records for that table.</target>
            </trans-unit>
            <trans-unit resname="cmd87" id="87">
                <source></source>
                <target>IMPORT SYLK ( {aTable ;} document )</target>
            </trans-unit>
            <trans-unit resname="desc87" id="87">
                <source></source>
                <target>reads data from document, a Windows or Macintosh SYLK document, into the table aTable by creating new records for that table.</target>
            </trans-unit>
            <trans-unit resname="cmd88" id="88">
                <source></source>
                <target>MESSAGE ( message )</target>
            </trans-unit>
            <trans-unit resname="desc88" id="88">
                <source></source>
                <target>displays message on the screen in a special message window that opens and closes each time you call [#current_title]</target>
            </trans-unit>
            <trans-unit resname="cmd89" id="89">
                <source></source>
                <target>CLEAR VARIABLE ( variable )</target>
            </trans-unit>
            <trans-unit resname="desc89" id="89">
                <source></source>
                <target>resets variable to its default type value (&lt;em&gt;i.e.&lt;/em&gt;, empty string for Text variables, 0 for numeric variables, no elements for arrays, etc.)</target>
            </trans-unit>
            <trans-unit resname="cmd90" id="90">
                <source></source>
                <target>Char ( charCode ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc90" id="90">
                <source></source>
                <target>returns the character whose code is charCode.</target>
            </trans-unit>
            <trans-unit resname="cmd91" id="91">
                <source></source>
                <target>Character code ( character ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc91" id="91">
                <source></source>
                <target>returns the Unicode UTF-16 code (included between 1 and 65535) of character.</target>
            </trans-unit>
            <trans-unit resname="cmd94" id="94">
                <source></source>
                <target>Round ( round ; places ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc94" id="94">
                <source></source>
                <target>returns number rounded to the number of decimal places specified by places.</target>
            </trans-unit>
            <trans-unit resname="cmd95" id="95">
                <source></source>
                <target>Trunc ( number ; places ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc95" id="95">
                <source></source>
                <target>returns number with its decimal part truncated to the number of decimal places specified by places.</target>
            </trans-unit>
            <trans-unit resname="cmd96" id="96">
                <source></source>
                <target>_o_DELETE SUBRECORD ( subtable )</target>
            </trans-unit>
            <trans-unit resname="desc96" id="96">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd97" id="97">
                <source></source>
                <target>Subtotal ( data {; pageBreak} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc97" id="97">
                <source></source>
                <target>returns the subtotal for data for the current or last break level.</target>
            </trans-unit>
            <trans-unit resname="cmd98" id="98">
                <source></source>
                <target>Mod ( number1 ; number2 ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc98" id="98">
                <source></source>
                <target>returns the remainder of the Integer division of number1 by number2.</target>
            </trans-unit>
            <trans-unit resname="cmd99" id="99">
                <source></source>
                <target>Abs ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc99" id="99">
                <source></source>
                <target>returns the absolute (unsigned, positive) value of number.</target>
            </trans-unit>
            <trans-unit resname="cmd100" id="100">
                <source></source>
                <target>Random  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc100" id="100">
                <source></source>
                <target>returns a random integer value between 0 and 32,767 (inclusive).</target>
            </trans-unit>
            <trans-unit resname="cmd101" id="101">
                <source></source>
                <target>Level  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc101" id="101">
                <source></source>
                <target>used to determine the current header or break level.</target>
            </trans-unit>
            <trans-unit resname="cmd102" id="102">
                <source></source>
                <target>Date ( expression ) -&gt; Date</target>
            </trans-unit>
            <trans-unit resname="desc102" id="102">
                <source></source>
                <target>evaluates expression and returns a date.</target>
            </trans-unit>
            <trans-unit resname="cmd103" id="103">
                <source></source>
                <target>SEND PACKET ( {docRef ;} packet )</target>
            </trans-unit>
            <trans-unit resname="desc103" id="103">
                <source></source>
                <target>sends a packet to a serial port or to a document.</target>
            </trans-unit>
            <trans-unit resname="cmd104" id="104">
                <source></source>
                <target>RECEIVE PACKET ( {docRef ;} receiveVar ; stopChar | numBytes )</target>
            </trans-unit>
            <trans-unit resname="desc104" id="104">
                <source></source>
                <target>reads characters from a serial port or from a document.</target>
            </trans-unit>
            <trans-unit resname="cmd105" id="105">
                <source></source>
                <target>DISPLAY RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc105" id="105">
                <source></source>
                <target>displays the current record of aTable, using the current input form.</target>
            </trans-unit>
            <trans-unit resname="cmd106" id="106">
                <source></source>
                <target>PRINT SETTINGS {( dialType )}</target>
            </trans-unit>
            <trans-unit resname="desc106" id="106">
                <source></source>
                <target>displays a printing dialog box.</target>
            </trans-unit>
            <trans-unit resname="cmd107" id="107">
                <source></source>
                <target>_o_ORDER SUBRECORDS BY ( subtable ; subfield {; &gt; or &lt;}{; subfield2 ; &gt; or &lt;2 ; ... ; subfieldN ; &gt; or &lt;N} )</target>
            </trans-unit>
            <trans-unit resname="desc107" id="107">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd108" id="108">
                <source></source>
                <target>_o_QUERY SUBRECORDS ( subtable ; queryFormula )</target>
            </trans-unit>
            <trans-unit resname="desc108" id="108">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd109" id="109">
                <source></source>
                <target>_o_ALL SUBRECORDS ( subtable )</target>
            </trans-unit>
            <trans-unit resname="desc109" id="109">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd110" id="110">
                <source></source>
                <target>PREVIOUS RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc110" id="110">
                <source></source>
                <target>moves the current record pointer to the previous record in the current selection of aTable for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd111" id="111">
                <source></source>
                <target>_o_PREVIOUS SUBRECORD ( subtable )</target>
            </trans-unit>
            <trans-unit resname="desc111" id="111">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd112" id="112">
                <source></source>
                <target>In header  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc112" id="112">
                <source></source>
                <target>returns True for the In header execution cycle</target>
            </trans-unit>
            <trans-unit resname="cmd113" id="113">
                <source></source>
                <target>In break  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc113" id="113">
                <source></source>
                <target>returns True for the In break execution cycle</target>
            </trans-unit>
            <trans-unit resname="cmd114" id="114">
                <source></source>
                <target>Day number ( aDate ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc114" id="114">
                <source></source>
                <target>returns a number representing the weekday on which aDate falls.</target>
            </trans-unit>
            <trans-unit resname="cmd116" id="116">
                <source></source>
                <target>CREATE SET ( {aTable ;} set )</target>
            </trans-unit>
            <trans-unit resname="desc116" id="116">
                <source></source>
                <target>creates a new set, set, for aTable, and places the current selection in set.</target>
            </trans-unit>
            <trans-unit resname="cmd117" id="117">
                <source></source>
                <target>CLEAR SET ( set )</target>
            </trans-unit>
            <trans-unit resname="desc117" id="117">
                <source></source>
                <target>clears set from memory and frees the memory used by set.</target>
            </trans-unit>
            <trans-unit resname="cmd118" id="118">
                <source></source>
                <target>USE SET ( set )</target>
            </trans-unit>
            <trans-unit resname="desc118" id="118">
                <source></source>
                <target>makes the records in set the current selection for the table to which the set belongs.</target>
            </trans-unit>
            <trans-unit resname="cmd119" id="119">
                <source></source>
                <target>ADD TO SET ( {aTable ;} set )</target>
            </trans-unit>
            <trans-unit resname="desc119" id="119">
                <source></source>
                <target>adds the current record of aTable to set.</target>
            </trans-unit>
            <trans-unit resname="cmd120" id="120">
                <source></source>
                <target>UNION ( set1 ; set2 ; resultSet )</target>
            </trans-unit>
            <trans-unit resname="desc120" id="120">
                <source></source>
                <target>creates a set that contains all records from set1 and set2.</target>
            </trans-unit>
            <trans-unit resname="cmd121" id="121">
                <source></source>
                <target>INTERSECTION ( set1 ; set2 ; resultSet )</target>
            </trans-unit>
            <trans-unit resname="desc121" id="121">
                <source></source>
                <target>compares set1 and set2 and selects only the records that are in both.</target>
            </trans-unit>
            <trans-unit resname="cmd122" id="122">
                <source></source>
                <target>DIFFERENCE ( set1 ; set2 ; resultSet )</target>
            </trans-unit>
            <trans-unit resname="desc122" id="122">
                <source></source>
                <target>compares set1 and set2 and excludes all records that are in set2 from the resultSet.</target>
            </trans-unit>
            <trans-unit resname="cmd140" id="140">
                <source></source>
                <target>CREATE EMPTY SET ( {aTable ;} set )</target>
            </trans-unit>
            <trans-unit resname="desc140" id="140">
                <source></source>
                <target>creates a new empty set, set, for aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd143" id="143">
                <source></source>
                <target>Semaphore ( semaphore {; tickCount} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc143" id="143">
                <source></source>
                <target>returns TRUE and does nothing if semaphore already exists or returns False and creates the semaphore if it does not already exist.</target>
            </trans-unit>
            <trans-unit resname="cmd144" id="144">
                <source></source>
                <target>CLEAR SEMAPHORE ( semaphore )</target>
            </trans-unit>
            <trans-unit resname="desc144" id="144">
                <source></source>
                <target>erases semaphore previously set by the Semaphore function.</target>
            </trans-unit>
            <trans-unit resname="cmd145" id="145">
                <source></source>
                <target>READ ONLY {( aTable | * )}</target>
            </trans-unit>
            <trans-unit resname="desc145" id="145">
                <source></source>
                <target>changes the state of aTable to read-only for the process in which it is called</target>
            </trans-unit>
            <trans-unit resname="cmd146" id="146">
                <source></source>
                <target>READ WRITE {( aTable | * )}</target>
            </trans-unit>
            <trans-unit resname="desc146" id="146">
                <source></source>
                <target>changes the state of aTable to read/write for the process in which it is called.</target>
            </trans-unit>
            <trans-unit resname="cmd147" id="147">
                <source></source>
                <target>Locked {( aTable )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc147" id="147">
                <source></source>
                <target>tests whether or not the current record of aTable is locked.</target>
            </trans-unit>
            <trans-unit resname="cmd149" id="149">
                <source></source>
                <target>ENABLE MENU ITEM ( menu ; menuItem {; process} )</target>
            </trans-unit>
            <trans-unit resname="desc149" id="149">
                <source></source>
                <target>enables the menu item whose menu number or reference is passed in menu and whose item number is passed in menuItem.</target>
            </trans-unit>
            <trans-unit resname="cmd150" id="150">
                <source></source>
                <target>DISABLE MENU ITEM ( menu ; menuItem {; process} )</target>
            </trans-unit>
            <trans-unit resname="desc150" id="150">
                <source></source>
                <target>disables the menu item whose menu number or reference is passed in menu and whose item number is passed in menuItem.</target>
            </trans-unit>
            <trans-unit resname="cmd151" id="151">
                <source></source>
                <target>BEEP </target>
            </trans-unit>
            <trans-unit resname="desc151" id="151">
                <source></source>
                <target>causes the PC or Macintosh to generate a beep.</target>
            </trans-unit>
            <trans-unit resname="cmd152" id="152">
                <source></source>
                <target>Menu selected {( subMenu )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc152" id="152">
                <source></source>
                <target>detects which menu command has been chosen from a menu and, in the case of a hierarchical submenu, returns the reference of the submenu.</target>
            </trans-unit>
            <trans-unit resname="cmd153" id="153">
                <source></source>
                <target>Open window ( left ; top ; right ; bottom {; type {; title {; controlMenuBox}}} ) -&gt; WinRef</target>
            </trans-unit>
            <trans-unit resname="desc153" id="153">
                <source></source>
                <target>opens a new window with the dimensions given by the first four parameters and with the characteristics set using the three following parameters</target>
            </trans-unit>
            <trans-unit resname="cmd154" id="154">
                <source></source>
                <target>CLOSE WINDOW {( window )}</target>
            </trans-unit>
            <trans-unit resname="desc154" id="154">
                <source></source>
                <target>closes the active window opened by the Open window or Open form window command in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd155" id="155">
                <source></source>
                <target>ON ERR CALL ( errorMethod )</target>
            </trans-unit>
            <trans-unit resname="desc155" id="155">
                <source></source>
                <target>installs the project method, whose name you pass in errorMethod, as the method for catching (trapping) errors.</target>
            </trans-unit>
            <trans-unit resname="cmd156" id="156">
                <source></source>
                <target>ABORT </target>
            </trans-unit>
            <trans-unit resname="desc156" id="156">
                <source></source>
                <target>used from within an error-handling project method installed using the command ON ERR CALL.</target>
            </trans-unit>
            <trans-unit resname="cmd157" id="157">
                <source></source>
                <target>TRACE </target>
            </trans-unit>
            <trans-unit resname="desc157" id="157">
                <source></source>
                <target>turns on the 4D debugger for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd159" id="159">
                <source></source>
                <target>DELETE DOCUMENT ( document )</target>
            </trans-unit>
            <trans-unit resname="desc159" id="159">
                <source></source>
                <target>deletes the document whose name you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd160" id="160">
                <source></source>
                <target>ERASE WINDOW {( window )}</target>
            </trans-unit>
            <trans-unit resname="desc160" id="160">
                <source></source>
                <target>clears the contents of the window whose reference number is passed in window. </target>
            </trans-unit>
            <trans-unit resname="cmd161" id="161">
                <source></source>
                <target>GOTO XY ( x ; y )</target>
            </trans-unit>
            <trans-unit resname="desc161" id="161">
                <source></source>
                <target>positions the character cursor (an invisible cursor) when you display messages with the MESSAGE command in a window opened using Open window.</target>
            </trans-unit>
            <trans-unit resname="cmd162" id="162">
                <source></source>
                <target>CONFIRM ( message {; okButtonTitle {; cancelButtonTitle}} )</target>
            </trans-unit>
            <trans-unit resname="desc162" id="162">
                <source></source>
                <target>displays a confirm dialog box composed of a note icon, a message, an OK button, and a Cancel Button.</target>
            </trans-unit>
            <trans-unit resname="cmd163" id="163">
                <source></source>
                <target>Request ( message {; defaultResponse {; OKButtonTitle {; CancelButtonTitle}}} )  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc163" id="163">
                <source></source>
                <target>displays a request dialog box composed of a message, a text input area, an OK button, and a Cancel Button.</target>
            </trans-unit>
            <trans-unit resname="cmd164" id="164">
                <source></source>
                <target>OBJECT SET FONT ( {* ;} object ; font )</target>
            </trans-unit>
            <trans-unit resname="desc164" id="164">
                <source></source>
                <target>displays the object using the font specified in the font parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd165" id="165">
                <source></source>
                <target>OBJECT SET FONT SIZE ( {* ;} object ; size )</target>
            </trans-unit>
            <trans-unit resname="desc165" id="165">
                <source></source>
                <target>sets the form objects specified by object to be displayed using the font size you pass in size.</target>
            </trans-unit>
            <trans-unit resname="cmd166" id="166">
                <source></source>
                <target>OBJECT SET FONT STYLE ( {* ;} object ; styles )</target>
            </trans-unit>
            <trans-unit resname="desc166" id="166">
                <source></source>
                <target>sets the form objects specified by object to be displayed using the font style you pass in styles.</target>
            </trans-unit>
            <trans-unit resname="cmd167" id="167">
                <source></source>
                <target>EXPORT TEXT ( {aTable ;} document )</target>
            </trans-unit>
            <trans-unit resname="desc167" id="167">
                <source></source>
                <target>writes data from the records of the current selection of aTable in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd168" id="168">
                <source></source>
                <target>IMPORT TEXT ( {aTable ;} document )</target>
            </trans-unit>
            <trans-unit resname="desc168" id="168">
                <source></source>
                <target>reads data from document, a Windows or Macintosh text document, into the table aTable by creating new records for that table.</target>
            </trans-unit>
            <trans-unit resname="cmd169" id="169">
                <source></source>
                <target>GRAPH ( graphPicture ; graphNumber | graphSettings ; xLabels {; yElements} {; yElements2 ; ... ; yElementsN} )</target>
            </trans-unit>
            <trans-unit resname="desc169" id="169">
                <source></source>
                <target>draws a graph for a picture variable on the basis of values coming from arrays.</target>
            </trans-unit>
            <trans-unit resname="cmd172" id="172">
                <source></source>
                <target>RECEIVE BUFFER ( receiveVar )</target>
            </trans-unit>
            <trans-unit resname="desc172" id="172">
                <source></source>
                <target>reads the serial port that was previously opened with SET CHANNEL.</target>
            </trans-unit>
            <trans-unit resname="cmd174" id="174">
                <source></source>
                <target>REDRAW ( object )</target>
            </trans-unit>
            <trans-unit resname="desc174" id="174">
                <source></source>
                <target>causes the refreshing of a Web form, subform, field, list box or variable</target>
            </trans-unit>
            <trans-unit resname="cmd175" id="175">
                <source></source>
                <target>MESSAGES OFF </target>
            </trans-unit>
            <trans-unit resname="desc175" id="175">
                <source></source>
                <target>turns off the progress meters displayed by 4D while executing time-consuming operations.</target>
            </trans-unit>
            <trans-unit resname="cmd176" id="176">
                <source></source>
                <target>PUSH RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc176" id="176">
                <source></source>
                <target>pushes the current record of aTable (and its subrecords, if any) onto the table’s record stack</target>
            </trans-unit>
            <trans-unit resname="cmd177" id="177">
                <source></source>
                <target>POP RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc177" id="177">
                <source></source>
                <target>pops a record belonging to aTable from the table’s record stack, and makes the record the current record.</target>
            </trans-unit>
            <trans-unit resname="cmd178" id="178">
                <source></source>
                <target>Current time {( * )} -&gt; Time</target>
            </trans-unit>
            <trans-unit resname="desc178" id="178">
                <source></source>
                <target>returns the current time from the system clock. </target>
            </trans-unit>
            <trans-unit resname="cmd179" id="179">
                <source></source>
                <target>Time ( timeValue ) -&gt; Time</target>
            </trans-unit>
            <trans-unit resname="desc179" id="179">
                <source></source>
                <target>returns a time expression equivalent to the time specified in the timeValue parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd180" id="180">
                <source></source>
                <target>Time string ( seconds ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc180" id="180">
                <source></source>
                <target>returns the string form of the time expression you pass in seconds. </target>
            </trans-unit>
            <trans-unit resname="cmd181" id="181">
                <source></source>
                <target>MESSAGES ON </target>
            </trans-unit>
            <trans-unit resname="desc181" id="181">
                <source></source>
                <target>turns on the progress meters displayed by 4D while executing time-consuming operations.</target>
            </trans-unit>
            <trans-unit resname="cmd182" id="182">
                <source></source>
                <target>Current user {( user )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc182" id="182">
                <source></source>
                <target>returns the alias or account name of the current user.</target>
            </trans-unit>
            <trans-unit resname="cmd184" id="184">
                <source></source>
                <target>SAVE SET ( set ; document )</target>
            </trans-unit>
            <trans-unit resname="desc184" id="184">
                <source></source>
                <target>saves set to document, a document on disk.</target>
            </trans-unit>
            <trans-unit resname="cmd185" id="185">
                <source></source>
                <target>LOAD SET ( {aTable ;} set ; document )</target>
            </trans-unit>
            <trans-unit resname="desc185" id="185">
                <source></source>
                <target>loads a set from document that was saved with the SAVE SET command.</target>
            </trans-unit>
            <trans-unit resname="cmd186" id="186">
                <source></source>
                <target>CHANGE PASSWORD ( password )</target>
            </trans-unit>
            <trans-unit resname="desc186" id="186">
                <source></source>
                <target>changes the password of the current user</target>
            </trans-unit>
            <trans-unit resname="cmd187" id="187">
                <source></source>
                <target>Screen width {( * )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc187" id="187">
                <source></source>
                <target>returns the width of 4D application window (Windows) or the width of the main screen (Mac OS)</target>
            </trans-unit>
            <trans-unit resname="cmd188" id="188">
                <source></source>
                <target>Screen height {( * )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc188" id="188">
                <source></source>
                <target>returns the height of 4D application (Windows) or the height of the main screen(Mac OS)</target>
            </trans-unit>
            <trans-unit resname="cmd189" id="189">
                <source></source>
                <target>ONE RECORD SELECT {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc189" id="189">
                <source></source>
                <target>reduces the current selection of aTable to the current record</target>
            </trans-unit>
            <trans-unit resname="cmd190" id="190">
                <source></source>
                <target>ON EVENT CALL ( eventMethod {; processName} )</target>
            </trans-unit>
            <trans-unit resname="desc190" id="190">
                <source></source>
                <target>installs the method, whose name you pass in eventMethod, as the method for catching (trapping) events.</target>
            </trans-unit>
            <trans-unit resname="cmd191" id="191">
                <source></source>
                <target>In footer  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc191" id="191">
                <source></source>
                <target>returns True for the In footer execution cycle</target>
            </trans-unit>
            <trans-unit resname="cmd194" id="194">
                <source></source>
                <target>OBJECT SET TITLE ( {* ;} object ; title )</target>
            </trans-unit>
            <trans-unit resname="desc194" id="194">
                <source></source>
                <target>changes the title of the object(s) specified by object to the value you pass in title.</target>
            </trans-unit>
            <trans-unit resname="cmd195" id="195">
                <source></source>
                <target>Records in set ( set ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc195" id="195">
                <source></source>
                <target>returns the number of records in set.</target>
            </trans-unit>
            <trans-unit resname="cmd197" id="197">
                <source></source>
                <target>QR REPORT ( {aTable ;} document {; methodName}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc197" id="197">
                <source></source>
                <target>prints a report for aTable, created with the Quick Report editor</target>
            </trans-unit>
            <trans-unit resname="cmd198" id="198">
                <source></source>
                <target>Before selection {( aTable )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc198" id="198">
                <source></source>
                <target>returns TRUE when the current record pointer is before the first record of the current selection of table.</target>
            </trans-unit>
            <trans-unit resname="cmd199" id="199">
                <source></source>
                <target>_o_Before subselection ( subtable ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc199" id="199">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd200" id="200">
                <source></source>
                <target>LAST RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc200" id="200">
                <source></source>
                <target>makes the last record of the current selection of aTable the current record and loads the record from disk</target>
            </trans-unit>
            <trans-unit resname="cmd201" id="201">
                <source></source>
                <target>_o_LAST SUBRECORD ( subtable )</target>
            </trans-unit>
            <trans-unit resname="desc201" id="201">
                <source></source>
                <target>Obsolete, do not use</target>
            </trans-unit>
            <trans-unit resname="cmd202" id="202">
                <source></source>
                <target>_o_ADD SUBRECORD ( subtable ; form {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc202" id="202">
                <source></source>
                <target>(obsolete) lets the user add a new subrecord to subtable, using the form form</target>
            </trans-unit>
            <trans-unit resname="cmd203" id="203">
                <source></source>
                <target>_o_MODIFY SUBRECORD ( subtable ; form {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc203" id="203">
                <source></source>
                <target>(obsolete) displays the current subrecord of subtable for modification using the form form.</target>
            </trans-unit>
            <trans-unit resname="cmd204" id="204">
                <source></source>
                <target>MODIFY SELECTION ( {aTable}{; selectMode}{; enterList}{; *}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc204" id="204">
                <source></source>
                <target>displays the records of the current selection of aTable in the current output form or in the input form when you double-click on a record. You can modify the fields of the record in the input form or in “Enter in List” mode (if it is authorized).</target>
            </trans-unit>
            <trans-unit resname="cmd205" id="205">
                <source></source>
                <target>USE CHARACTER SET ( map {; mapInOut} )</target>
            </trans-unit>
            <trans-unit resname="desc205" id="205">
                <source></source>
                <target>modifies the character set used by 4D during data transfer between the database and a document or a serial port for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd206" id="206">
                <source></source>
                <target>GOTO OBJECT ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc206" id="206">
                <source></source>
                <target>used to select the data entry object object as the active area of the form. It is equivalent to the user’s clicking on or tabbing into the field or variable.</target>
            </trans-unit>
            <trans-unit resname="cmd207" id="207">
                <source></source>
                <target>QUERY SELECTION BY FORMULA ( aTable {; queryFormula} )</target>
            </trans-unit>
            <trans-unit resname="desc207" id="207">
                <source></source>
                <target>looks for records in aTable by applying queryFormula to each record of the selection.</target>
            </trans-unit>
            <trans-unit resname="cmd208" id="208">
                <source></source>
                <target>SET MENU ITEM MARK ( menu ; menuItem ; mark {; process} ) </target>
            </trans-unit>
            <trans-unit resname="desc208" id="208">
                <source></source>
                <target>changes the check mark of the menu item whose menu number or reference is passed in menu and whose item number is passed in menuItem to the first character of the string passed in mark. </target>
            </trans-unit>
            <trans-unit resname="cmd209" id="209">
                <source></source>
                <target>GET HIGHLIGHT ( {* ;} object ; startSel ; endSel )</target>
            </trans-unit>
            <trans-unit resname="desc209" id="209">
                <source></source>
                <target>used to determine what text is currently highlighted in object. </target>
            </trans-unit>
            <trans-unit resname="cmd210" id="210">
                <source></source>
                <target>HIGHLIGHT TEXT ( {* ;} object ; startSel ; endSel )</target>
            </trans-unit>
            <trans-unit resname="desc210" id="210">
                <source></source>
                <target>highlights a section of the text in object.</target>
            </trans-unit>
            <trans-unit resname="cmd212" id="212">
                <source></source>
                <target>UNLOAD RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc212" id="212">
                <source></source>
                <target>unloads the current record of table.</target>
            </trans-unit>
            <trans-unit resname="cmd213" id="213">
                <source></source>
                <target>SET WINDOW TITLE ( title {; window} )</target>
            </trans-unit>
            <trans-unit resname="desc213" id="213">
                <source></source>
                <target>changes the title of the window whose reference number is passed in window to the text passed in title (max. length 80 characters).</target>
            </trans-unit>
            <trans-unit resname="cmd214" id="214">
                <source></source>
                <target>True  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc214" id="214">
                <source></source>
                <target>returns the Boolean value True.</target>
            </trans-unit>
            <trans-unit resname="cmd215" id="215">
                <source></source>
                <target>False  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc215" id="215">
                <source></source>
                <target>returns the Boolean value False.</target>
            </trans-unit>
            <trans-unit resname="cmd218" id="218">
                <source></source>
                <target>_o_ARRAY STRING ( strLen ; arrayName ; size {; size2} ) </target>
            </trans-unit>
            <trans-unit resname="desc218" id="218">
                <source></source>
                <target>(obsolete) creates and/or resizes an array of String elements in memory.</target>
            </trans-unit>
            <trans-unit resname="cmd219" id="219">
                <source></source>
                <target>ARRAY REAL ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc219" id="219">
                <source></source>
                <target>creates and/or resizes an array of Real elements in memory. </target>
            </trans-unit>
            <trans-unit resname="cmd220" id="220">
                <source></source>
                <target>ARRAY INTEGER ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc220" id="220">
                <source></source>
                <target>creates and/or resizes an array of 2-byte Integer elements in memory.</target>
            </trans-unit>
            <trans-unit resname="cmd221" id="221">
                <source></source>
                <target>ARRAY LONGINT ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc221" id="221">
                <source></source>
                <target>creates and/or resizes an array of 4-byte Longint elements in memory.</target>
            </trans-unit>
            <trans-unit resname="cmd222" id="222">
                <source></source>
                <target>ARRAY TEXT ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc222" id="222">
                <source></source>
                <target>creates and/or resizes an array of Text elements in memory. </target>
            </trans-unit>
            <trans-unit resname="cmd223" id="223">
                <source></source>
                <target>ARRAY BOOLEAN ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc223" id="223">
                <source></source>
                <target>creates and/or resizes an array of Boolean elements in memory.</target>
            </trans-unit>
            <trans-unit resname="cmd224" id="224">
                <source></source>
                <target>ARRAY DATE ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc224" id="224">
                <source></source>
                <target>creates and/or resizes an array of Date elements in memory. </target>
            </trans-unit>
            <trans-unit resname="cmd225" id="225">
                <source></source>
                <target>DUPLICATE RECORD {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc225" id="225">
                <source></source>
                <target>creates a new record for aTable that is a duplicate of the current record.</target>
            </trans-unit>
            <trans-unit resname="cmd226" id="226">
                <source></source>
                <target>COPY ARRAY ( source ; destination )</target>
            </trans-unit>
            <trans-unit resname="desc226" id="226">
                <source></source>
                <target>creates or overwrites the destination array destination with the exact contents, size, and type of the source array source.</target>
            </trans-unit>
            <trans-unit resname="cmd227" id="227">
                <source></source>
                <target>INSERT IN ARRAY ( array ; where {; howMany} )</target>
            </trans-unit>
            <trans-unit resname="desc227" id="227">
                <source></source>
                <target>inserts one or more elements into the array array.</target>
            </trans-unit>
            <trans-unit resname="cmd228" id="228">
                <source></source>
                <target>DELETE FROM ARRAY ( array ; where {; howMany} )</target>
            </trans-unit>
            <trans-unit resname="desc228" id="228">
                <source></source>
                <target>deletes one or more elements from array.</target>
            </trans-unit>
            <trans-unit resname="cmd229" id="229">
                <source></source>
                <target>SORT ARRAY ( array {; array2 ; ... ; arrayN}{; &gt; or &lt;} )</target>
            </trans-unit>
            <trans-unit resname="desc229" id="229">
                <source></source>
                <target>sorts one or more arrays into ascending or descending order. </target>
            </trans-unit>
            <trans-unit resname="cmd230" id="230">
                <source></source>
                <target>Find in array ( array ; value {; start} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc230" id="230">
                <source></source>
                <target>returns the number of the first element in array that matches value. </target>
            </trans-unit>
            <trans-unit resname="cmd231" id="231">
                <source></source>
                <target>Insert string ( source ; what ; where ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc231" id="231">
                <source></source>
                <target>inserts a string into source and returns the resulting string.</target>
            </trans-unit>
            <trans-unit resname="cmd232" id="232">
                <source></source>
                <target>Delete string ( source ; where ; numChars ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc232" id="232">
                <source></source>
                <target>deletes numChars from source, starting at where, and returns the resulting string.</target>
            </trans-unit>
            <trans-unit resname="cmd233" id="233">
                <source></source>
                <target>Replace string ( source ; oldString ; newString {; howMany}{; *} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc233" id="233">
                <source></source>
                <target>replaces howMany occurrences of oldString in source with newString.</target>
            </trans-unit>
            <trans-unit resname="cmd234" id="234">
                <source></source>
                <target>Change string ( source ; newChars ; where ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc234" id="234">
                <source></source>
                <target>changes a group of characters in source, to the characters passed in newChars, starting at the character described by where, and returns the resulting string</target>
            </trans-unit>
            <trans-unit resname="cmd235" id="235">
                <source></source>
                <target>OBJECT SET FILTER ( {* ;} object ; entryFilter )</target>
            </trans-unit>
            <trans-unit resname="desc235" id="235">
                <source></source>
                <target>sets the entry filter for the objects specified by object to the filter you pass in entryFilter.</target>
            </trans-unit>
            <trans-unit resname="cmd236" id="236">
                <source></source>
                <target>OBJECT SET FORMAT ( {* ;} object ; displayFormat )</target>
            </trans-unit>
            <trans-unit resname="desc236" id="236">
                <source></source>
                <target>sets the display format for the objects specified by object to the format you pass in displayFormat.</target>
            </trans-unit>
            <trans-unit resname="cmd237" id="237">
                <source></source>
                <target>OBJECT SET LIST BY NAME ( {* ;} object {; listType}; list )</target>
            </trans-unit>
            <trans-unit resname="desc237" id="237">
                <source></source>
                <target>sets, replaces or disassociates the list associated with the object or group of objects specified by object.</target>
            </trans-unit>
            <trans-unit resname="cmd238" id="238">
                <source></source>
                <target>OBJECT SET ENTERABLE ( {* ;} object ; enterable )</target>
            </trans-unit>
            <trans-unit resname="desc238" id="238">
                <source></source>
                <target>makes the form objects specified by object either enterable or non-enterable.</target>
            </trans-unit>
            <trans-unit resname="cmd239" id="239">
                <source></source>
                <target>START TRANSACTION </target>
            </trans-unit>
            <trans-unit resname="desc239" id="239">
                <source></source>
                <target>starts a transaction in the current process</target>
            </trans-unit>
            <trans-unit resname="cmd240" id="240">
                <source></source>
                <target>VALIDATE TRANSACTION </target>
            </trans-unit>
            <trans-unit resname="desc240" id="240">
                <source></source>
                <target>accepts the transaction that was started with START TRANSACTION of the corresponding level in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd241" id="241">
                <source></source>
                <target>CANCEL TRANSACTION </target>
            </trans-unit>
            <trans-unit resname="desc241" id="241">
                <source></source>
                <target>cancels the transaction that was started with START TRANSACTION of the corresponding level in the current process. </target>
            </trans-unit>
            <trans-unit resname="cmd242" id="242">
                <source></source>
                <target>GOTO RECORD ( {aTable ;} record )</target>
            </trans-unit>
            <trans-unit resname="desc242" id="242">
                <source></source>
                <target>selects the specified record of aTable as the current record.</target>
            </trans-unit>
            <trans-unit resname="cmd243" id="243">
                <source></source>
                <target>Record number {( aTable )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc243" id="243">
                <source></source>
                <target>returns the physical record number for the current record of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd244" id="244">
                <source></source>
                <target>Sequence number {( aTable )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc244" id="244">
                <source></source>
                <target>returns the next sequence number for aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd245" id="245">
                <source></source>
                <target>GOTO SELECTED RECORD ( {aTable ;} record )</target>
            </trans-unit>
            <trans-unit resname="desc245" id="245">
                <source></source>
                <target>moves to the specified record in the current selection of aTable and makes that record the current record.</target>
            </trans-unit>
            <trans-unit resname="cmd246" id="246">
                <source></source>
                <target>Selected record number {( aTable )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc246" id="246">
                <source></source>
                <target>returns the position of the current record within the current selection of aTable. </target>
            </trans-unit>
            <trans-unit resname="cmd247" id="247">
                <source></source>
                <target>FORM GOTO PAGE ( pageNumber {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc247" id="247">
                <source></source>
                <target>changes the currently displayed form page to the form page specified by pageNumber.</target>
            </trans-unit>
            <trans-unit resname="cmd248" id="248">
                <source></source>
                <target>FORM NEXT PAGE </target>
            </trans-unit>
            <trans-unit resname="desc248" id="248">
                <source></source>
                <target>changes the currently displayed form page to the next form page.</target>
            </trans-unit>
            <trans-unit resname="cmd249" id="249">
                <source></source>
                <target>FORM PREVIOUS PAGE </target>
            </trans-unit>
            <trans-unit resname="desc249" id="249">
                <source></source>
                <target>changes the currently displayed form page to the previous form page.</target>
            </trans-unit>
            <trans-unit resname="cmd250" id="250">
                <source></source>
                <target>FORM FIRST PAGE </target>
            </trans-unit>
            <trans-unit resname="desc250" id="250">
                <source></source>
                <target>changes the currently displayed form page to the first form page.</target>
            </trans-unit>
            <trans-unit resname="cmd251" id="251">
                <source></source>
                <target>FORM LAST PAGE </target>
            </trans-unit>
            <trans-unit resname="desc251" id="251">
                <source></source>
                <target>changes the currently displayed form page to the last form page.</target>
            </trans-unit>
            <trans-unit resname="cmd252" id="252">
                <source></source>
                <target>Table ( tableNum | aPtr ) -&gt; Longint, Pointer</target>
            </trans-unit>
            <trans-unit resname="desc252" id="252">
                <source></source>
                <target>returns a pointer to the table or table number depending on the parameter passed</target>
            </trans-unit>
            <trans-unit resname="cmd253" id="253">
                <source></source>
                <target>Field ( tableNum ; fieldNum ) -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc253" id="253">
                <source></source>
                <target>returns a pointer to the field or a field number according to the parameters passed</target>
            </trans-unit>
            <trans-unit resname="cmd254" id="254">
                <source></source>
                <target>Get last table number  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc254" id="254">
                <source></source>
                <target>returns the highest table number among the tables in the database.</target>
            </trans-unit>
            <trans-unit resname="cmd255" id="255">
                <source></source>
                <target>Get last field number ( tableNum | tablePtr ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc255" id="255">
                <source></source>
                <target>returns the highest field number among the fields in the table whose number or pointer you pass in tableNum or tablePtr.</target>
            </trans-unit>
            <trans-unit resname="cmd256" id="256">
                <source></source>
                <target>Table name ( tableNum | tablePtr ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc256" id="256">
                <source></source>
                <target>returns the name of the table whose number or pointer you pass in tableNum or tablePtr.</target>
            </trans-unit>
            <trans-unit resname="cmd257" id="257">
                <source></source>
                <target>Field name ( fieldPtr | tableNum {; fieldNum} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc257" id="257">
                <source></source>
                <target>returns the name of the field whose pointer you pass in fieldPtr or whose table and field number you pass in tableNum and fieldNum.</target>
            </trans-unit>
            <trans-unit resname="cmd258" id="258">
                <source></source>
                <target>GET FIELD PROPERTIES ( fieldPtr | tableNum {; fieldNum}; fieldType {; fieldLength {; indexed {; unique {; invisible}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc258" id="258">
                <source></source>
                <target>returns information about the field specified by fieldPtr or by tableNum and fieldNum.</target>
            </trans-unit>
            <trans-unit resname="cmd259" id="259">
                <source></source>
                <target>Count parameters  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc259" id="259">
                <source></source>
                <target>returns the number of parameters passed to a project method. </target>
            </trans-unit>
            <trans-unit resname="cmd260" id="260">
                <source></source>
                <target>SELECTION TO ARRAY {( aField | aTable ; array {; aField ; array {; aField2 ; array2 ; ... ; aFieldN ; arrayN}}{; *})}</target>
            </trans-unit>
            <trans-unit resname="desc260" id="260">
                <source></source>
                <target>creates one or more arrays and copies data in the fields or record numbers from the current selection into the arrays.</target>
            </trans-unit>
            <trans-unit resname="cmd261" id="261">
                <source></source>
                <target>ARRAY TO SELECTION {( array ; aField {; array2 ; aField2 ; ... ; arrayN ; aFieldN}{; *} )}</target>
            </trans-unit>
            <trans-unit resname="desc261" id="261">
                <source></source>
                <target>copies one or more arrays into a selection of records.</target>
            </trans-unit>
            <trans-unit resname="cmd262" id="262">
                <source></source>
                <target>RELATE MANY ( oneTable | Field )</target>
            </trans-unit>
            <trans-unit resname="desc262" id="262">
                <source></source>
                <target>establishes all One-to-Many relations for oneTable or establishes the One-to-Many relation for oneField</target>
            </trans-unit>
            <trans-unit resname="cmd263" id="263">
                <source></source>
                <target>OLD RELATED MANY ( aField )</target>
            </trans-unit>
            <trans-unit resname="desc263" id="263">
                <source></source>
                <target>changes the selection of the related table, and selects the first record of the selection as the current record.</target>
            </trans-unit>
            <trans-unit resname="cmd264" id="264">
                <source></source>
                <target>Open document ( document {; fileType}{; mode} ) -&gt; DocRef</target>
            </trans-unit>
            <trans-unit resname="desc264" id="264">
                <source></source>
                <target>opens the document whose name or pathname you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd265" id="265">
                <source></source>
                <target>Append document ( document {; fileType} ) -&gt; DocRef</target>
            </trans-unit>
            <trans-unit resname="desc265" id="265">
                <source></source>
                <target>opens a document on disk.</target>
            </trans-unit>
            <trans-unit resname="cmd266" id="266">
                <source></source>
                <target>Create document ( document {; fileType} ) -&gt; DocRef</target>
            </trans-unit>
            <trans-unit resname="desc266" id="266">
                <source></source>
                <target>creates a new document and returns its document reference number. </target>
            </trans-unit>
            <trans-unit resname="cmd267" id="267">
                <source></source>
                <target>CLOSE DOCUMENT ( docRef )</target>
            </trans-unit>
            <trans-unit resname="desc267" id="267">
                <source></source>
                <target>closes the document specified by docRef.</target>
            </trans-unit>
            <trans-unit resname="cmd268" id="268">
                <source></source>
                <target>SET TIMEOUT ( seconds )</target>
            </trans-unit>
            <trans-unit resname="desc268" id="268">
                <source></source>
                <target>specifies how much time a serial port command has to complete.</target>
            </trans-unit>
            <trans-unit resname="cmd269" id="269">
                <source></source>
                <target>ACCEPT </target>
            </trans-unit>
            <trans-unit resname="desc269" id="269">
                <source></source>
                <target>performs the same action as when the user presses the Enter key.</target>
            </trans-unit>
            <trans-unit resname="cmd270" id="270">
                <source></source>
                <target>CANCEL </target>
            </trans-unit>
            <trans-unit resname="desc270" id="270">
                <source></source>
                <target>In the context of data entry, performs the same action as when the user presses the cancel key (Esc). Can also be placed in the optional close box method of a window created by the Open window command.</target>
            </trans-unit>
            <trans-unit resname="cmd271" id="271">
                <source></source>
                <target>_o_OBJECT SET COLOR ( {* ;} object ; color {; altColor} ) </target>
            </trans-unit>
            <trans-unit resname="desc271" id="271">
                <source></source>
                <target>sets the foreground and background colors of the form objects specified by object.</target>
            </trans-unit>
            <trans-unit resname="cmd273" id="273">
                <source></source>
                <target>Is in set ( set ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc273" id="273">
                <source></source>
                <target>returns TRUE if the current record of the table is in set, and returns FALSE if the current record of the table is not in set.</target>
            </trans-unit>
            <trans-unit resname="cmd274" id="274">
                <source></source>
                <target>Size of array ( array ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc274" id="274">
                <source></source>
                <target>returns the number of elements in array.</target>
            </trans-unit>
            <trans-unit resname="cmd275" id="275">
                <source></source>
                <target>Printing page  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc275" id="275">
                <source></source>
                <target>returns the printing page number.</target>
            </trans-unit>
            <trans-unit resname="cmd276" id="276">
                <source></source>
                <target>FORM Get current page {( * )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc276" id="276">
                <source></source>
                <target>returns the number of the currently displayed form page or of the current form loaded by the OPEN PRINTING FORM command.</target>
            </trans-unit>
            <trans-unit resname="cmd277" id="277">
                <source></source>
                <target>QUERY ( {aTable }{;}{ queryArgument {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc277" id="277">
                <source></source>
                <target>looks for records matching the criteria specified in queryArgument and returns a selection of records for aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd278" id="278">
                <source></source>
                <target>Focus object  -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc278" id="278">
                <source></source>
                <target>returns a pointer to the object having the focus in the current form.</target>
            </trans-unit>
            <trans-unit resname="cmd279" id="279">
                <source></source>
                <target>ARRAY PICTURE ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc279" id="279">
                <source></source>
                <target>creates and/or resizes an array of Picture elements in memory. </target>
            </trans-unit>
            <trans-unit resname="cmd280" id="280">
                <source></source>
                <target>ARRAY POINTER ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc280" id="280">
                <source></source>
                <target>creates or resizes an array of Pointer elements in memory.</target>
            </trans-unit>
            <trans-unit resname="cmd281" id="281">
                <source></source>
                <target>EDIT ACCESS </target>
            </trans-unit>
            <trans-unit resname="desc281" id="281">
                <source></source>
                <target>lets the user edit the password system. </target>
            </trans-unit>
            <trans-unit resname="cmd282" id="282">
                <source></source>
                <target>_o_C_INTEGER ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc282" id="282">
                <source></source>
                <target>casts each specified variable as an Integer variable.</target>
            </trans-unit>
            <trans-unit resname="cmd283" id="283">
                <source></source>
                <target>C_LONGINT ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc283" id="283">
                <source></source>
                <target>casts each specified variable as a Long Integer variable.</target>
            </trans-unit>
            <trans-unit resname="cmd284" id="284">
                <source></source>
                <target>C_TEXT ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc284" id="284">
                <source></source>
                <target>casts each specified variable as a Text variable.</target>
            </trans-unit>
            <trans-unit resname="cmd285" id="285">
                <source></source>
                <target>C_REAL ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc285" id="285">
                <source></source>
                <target>casts each specified variable as a Real variable.</target>
            </trans-unit>
            <trans-unit resname="cmd286" id="286">
                <source></source>
                <target>C_PICTURE ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc286" id="286">
                <source></source>
                <target>casts each specified variable as a Picture variable.</target>
            </trans-unit>
            <trans-unit resname="cmd287" id="287">
                <source></source>
                <target>ARRAY TO LIST ( array ; list {; itemRefs} )</target>
            </trans-unit>
            <trans-unit resname="desc287" id="287">
                <source></source>
                <target>creates or replaces the hierarchical list or the choice list (created in the List editor) that is specified in list using the elements of the array array.</target>
            </trans-unit>
            <trans-unit resname="cmd288" id="288">
                <source></source>
                <target>LIST TO ARRAY ( list ; array {; itemRefs} )</target>
            </trans-unit>
            <trans-unit resname="desc288" id="288">
                <source></source>
                <target>creates or overrides the array array with the first level items of the list or choice list designated by list. </target>
            </trans-unit>
            <trans-unit resname="cmd289" id="289">
                <source></source>
                <target>CHANGE CURRENT USER {( user ; password )}</target>
            </trans-unit>
            <trans-unit resname="desc289" id="289">
                <source></source>
                <target>changes the identity of the current user in the database, without needing to quit. </target>
            </trans-unit>
            <trans-unit resname="cmd290" id="290">
                <source></source>
                <target>PLAY ( objectName {; async} )</target>
            </trans-unit>
            <trans-unit resname="desc290" id="290">
                <source></source>
                <target>plays sound files or, on OS X, a system sound</target>
            </trans-unit>
            <trans-unit resname="cmd291" id="291">
                <source></source>
                <target>QUIT 4D {( time )}</target>
            </trans-unit>
            <trans-unit resname="desc291" id="291">
                <source></source>
                <target>exits the current 4D application and returns to the Desktop.</target>
            </trans-unit>
            <trans-unit resname="cmd292" id="292">
                <source></source>
                <target>QUERY BY EXAMPLE ( {aTable}{;}{*} )</target>
            </trans-unit>
            <trans-unit resname="desc292" id="292">
                <source></source>
                <target>displays the current input form as a query window</target>
            </trans-unit>
            <trans-unit resname="cmd293" id="293">
                <source></source>
                <target>_o_C_STRING ( {method ;} size ; variable {; variable2 ; ... ; variableN} )</target>
            </trans-unit>
            <trans-unit resname="desc293" id="293">
                <source></source>
                <target>casts each specified variable as a String variable.</target>
            </trans-unit>
            <trans-unit resname="cmd294" id="294">
                <source></source>
                <target>Is a variable ( aPointer ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc294" id="294">
                <source></source>
                <target>returns True if the pointer you pass in aPointer references a defined variable.</target>
            </trans-unit>
            <trans-unit resname="cmd295" id="295">
                <source></source>
                <target>Type ( fieldVar ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc295" id="295">
                <source></source>
                <target>returns a numeric value that indicates the type of field or variable you have passed in the fieldVar parameter</target>
            </trans-unit>
            <trans-unit resname="cmd297" id="297">
                <source></source>
                <target>FLUSH CACHE {( size | * )}</target>
            </trans-unit>
            <trans-unit resname="desc297" id="297">
                <source></source>
                <target>immediately saves the data buffers to disk.</target>
            </trans-unit>
            <trans-unit resname="cmd298" id="298">
                <source></source>
                <target>GRAPH SETTINGS ( graphPicture ; xmin ; xmax ; ymin ; ymax ; xprop ; xgrid ; ygrid ; title {; title2 ; ... ; titleN} )</target>
            </trans-unit>
            <trans-unit resname="desc298" id="298">
                <source></source>
                <target>changes the graph settings for graph displayed in a form.</target>
            </trans-unit>
            <trans-unit resname="cmd299" id="299">
                <source></source>
                <target>_o_PAGE SETUP ( {aTable ;} form )</target>
            </trans-unit>
            <trans-unit resname="desc299" id="299">
                <source></source>
                <target>is declared obsolete in 4D beginning with version 18 and is kept only for compatibility reasons</target>
            </trans-unit>
            <trans-unit resname="cmd300" id="300">
                <source></source>
                <target>ORDER BY FORMULA ( aTable ; formula {; &gt; or &lt;}{; formula2 ; &gt; or &lt;2 ; ... ; formulaN ; &gt; or &lt;N} )</target>
            </trans-unit>
            <trans-unit resname="desc300" id="300">
                <source></source>
                <target>sorts (reorders) the records of the current selection of aTable for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd301" id="301">
                <source></source>
                <target>C_POINTER ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc301" id="301">
                <source></source>
                <target>casts each specified variable as a Pointer variable.</target>
            </trans-unit>
            <trans-unit resname="cmd302" id="302">
                <source></source>
                <target>BREAK LEVEL ( level {; pageBreak} )</target>
            </trans-unit>
            <trans-unit resname="desc302" id="302">
                <source></source>
                <target>specifies the number of break levels in a report performed using PRINT SELECTION.</target>
            </trans-unit>
            <trans-unit resname="cmd303" id="303">
                <source></source>
                <target>ACCUMULATE ( data {; data2 ; ... ; dataN} )</target>
            </trans-unit>
            <trans-unit resname="desc303" id="303">
                <source></source>
                <target>specifies the fields or variables to be accumulated during a form report performed using PRINT SELECTION.</target>
            </trans-unit>
            <trans-unit resname="cmd304" id="304">
                <source></source>
                <target>Get pointer ( varName ) -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc304" id="304">
                <source></source>
                <target>returns a pointer to the process or interprocess variable whose name you pass in varName.</target>
            </trans-unit>
            <trans-unit resname="cmd305" id="305">
                <source></source>
                <target>C_BOOLEAN ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc305" id="305">
                <source></source>
                <target>casts each specified variable as a Boolean variable.</target>
            </trans-unit>
            <trans-unit resname="cmd306" id="306">
                <source></source>
                <target>C_TIME ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc306" id="306">
                <source></source>
                <target>casts each specified variable as a Time variable.</target>
            </trans-unit>
            <trans-unit resname="cmd307" id="307">
                <source></source>
                <target>C_DATE ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc307" id="307">
                <source></source>
                <target>casts each specified variable as a Date variable.</target>
            </trans-unit>
            <trans-unit resname="cmd308" id="308">
                <source></source>
                <target>Self  -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc308" id="308">
                <source></source>
                <target>returns a pointer to the object whose object method is currently being executed. </target>
            </trans-unit>
            <trans-unit resname="cmd310" id="310">
                <source></source>
                <target>SET AUTOMATIC RELATIONS ( one {; many} )</target>
            </trans-unit>
            <trans-unit resname="desc310" id="310">
                <source></source>
                <target>temporarily changes all the manual relations into automatic relations for the entire database in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd311" id="311">
                <source></source>
                <target>IDLE </target>
            </trans-unit>
            <trans-unit resname="desc311" id="311">
                <source></source>
                <target>allows the 4D engine to be queried as part of an ON EVENT CALL in compiled mode</target>
            </trans-unit>
            <trans-unit resname="cmd312" id="312">
                <source></source>
                <target>OPEN DATA FILE ( accessPath )</target>
            </trans-unit>
            <trans-unit resname="desc312" id="312">
                <source></source>
                <target>allows changing the data file opened by the 4D application on-the-fly. </target>
            </trans-unit>
            <trans-unit resname="cmd313" id="313">
                <source></source>
                <target>CREATE DATA FILE ( accessPath )</target>
            </trans-unit>
            <trans-unit resname="desc313" id="313">
                <source></source>
                <target>creates a new data file to disk and replaces the data file opened by the 4D application on-the-fly.</target>
            </trans-unit>
            <trans-unit resname="cmd314" id="314">
                <source></source>
                <target>Modified record {( aTable )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc314" id="314">
                <source></source>
                <target>returns True if the current record of aTable has been modified but not saved; otherwise it returns False.</target>
            </trans-unit>
            <trans-unit resname="cmd315" id="315">
                <source></source>
                <target>Is nil pointer ( aPointer ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc315" id="315">
                <source></source>
                <target>returns True if the pointer you pass in aPointer is Nil (-&gt;[]).</target>
            </trans-unit>
            <trans-unit resname="cmd316" id="316">
                <source></source>
                <target>SET ABOUT ( itemText ; method )</target>
            </trans-unit>
            <trans-unit resname="desc316" id="316">
                <source></source>
                <target>changes the About 4D menu command in the Help (Windows) or in the Application (Mac OS X) menu to itemText. </target>
            </trans-unit>
            <trans-unit resname="cmd317" id="317">
                <source></source>
                <target>New process ( method ; stack {; name {; param {; param2 ; ... ; paramN}}}{; *} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc317" id="317">
                <source></source>
                <target>starts a new process (on the same machine) and returns the process number for that process.</target>
            </trans-unit>
            <trans-unit resname="cmd319" id="319">
                <source></source>
                <target>PAUSE PROCESS ( process )</target>
            </trans-unit>
            <trans-unit resname="desc319" id="319">
                <source></source>
                <target>suspends the execution of process until it is reactivated by the RESUME PROCESS command.</target>
            </trans-unit>
            <trans-unit resname="cmd320" id="320">
                <source></source>
                <target>RESUME PROCESS ( process )</target>
            </trans-unit>
            <trans-unit resname="desc320" id="320">
                <source></source>
                <target>resumes a process whose execution has been paused or delayed.</target>
            </trans-unit>
            <trans-unit resname="cmd321" id="321">
                <source></source>
                <target>FILTER EVENT </target>
            </trans-unit>
            <trans-unit resname="desc321" id="321">
                <source></source>
                <target>removes the current event (i.e., click, keystroke) from the event queue, so 4D will not perform any additional treatment to the one you made in the event-handling project method.</target>
            </trans-unit>
            <trans-unit resname="cmd322" id="322">
                <source></source>
                <target>Current process  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc322" id="322">
                <source></source>
                <target>returns the process reference number of the process within which this command is called.</target>
            </trans-unit>
            <trans-unit resname="cmd323" id="323">
                <source></source>
                <target>DELAY PROCESS ( process ; duration )</target>
            </trans-unit>
            <trans-unit resname="desc323" id="323">
                <source></source>
                <target>delays the execution of a process for a number of ticks (1 tick &#61; 1/60th of a second)</target>
            </trans-unit>
            <trans-unit resname="cmd324" id="324">
                <source></source>
                <target>HIDE PROCESS ( process )</target>
            </trans-unit>
            <trans-unit resname="desc324" id="324">
                <source></source>
                <target>hides all windows that belong to process.</target>
            </trans-unit>
            <trans-unit resname="cmd325" id="325">
                <source></source>
                <target>SHOW PROCESS ( process )</target>
            </trans-unit>
            <trans-unit resname="desc325" id="325">
                <source></source>
                <target>displays all the windows belonging to process. </target>
            </trans-unit>
            <trans-unit resname="cmd326" id="326">
                <source></source>
                <target>BRING TO FRONT ( process )</target>
            </trans-unit>
            <trans-unit resname="desc326" id="326">
                <source></source>
                <target>brings all the windows belonging to process to the front.</target>
            </trans-unit>
            <trans-unit resname="cmd327" id="327">
                <source></source>
                <target>Frontmost process {( * )} -&gt; Integer</target>
            </trans-unit>
            <trans-unit resname="desc327" id="327">
                <source></source>
                <target>returns the number of the process whose window (or windows) are in the front.</target>
            </trans-unit>
            <trans-unit resname="cmd328" id="328">
                <source></source>
                <target>Outside call  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc328" id="328">
                <source></source>
                <target>returns True for the After execution cycle</target>
            </trans-unit>
            <trans-unit resname="cmd329" id="329">
                <source></source>
                <target>POST OUTSIDE CALL ( process )</target>
            </trans-unit>
            <trans-unit resname="desc329" id="329">
                <source></source>
                <target>calls the form displayed in the frontmost window of process. </target>
            </trans-unit>
            <trans-unit resname="cmd330" id="330">
                <source></source>
                <target>Process state ( process ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc330" id="330">
                <source></source>
                <target>returns the state of the process whose number you pass in process. </target>
            </trans-unit>
            <trans-unit resname="cmd331" id="331">
                <source></source>
                <target>COPY NAMED SELECTION ( {aTable ;} name )</target>
            </trans-unit>
            <trans-unit resname="desc331" id="331">
                <source></source>
                <target>copies the current selection of aTable to the named selection name. </target>
            </trans-unit>
            <trans-unit resname="cmd332" id="332">
                <source></source>
                <target>USE NAMED SELECTION ( name )</target>
            </trans-unit>
            <trans-unit resname="desc332" id="332">
                <source></source>
                <target>uses the named selection name as the current selection for the table to which it belongs.</target>
            </trans-unit>
            <trans-unit resname="cmd333" id="333">
                <source></source>
                <target>CLEAR NAMED SELECTION ( name )</target>
            </trans-unit>
            <trans-unit resname="desc333" id="333">
                <source></source>
                <target>clears name from memory and frees the memory used by name.</target>
            </trans-unit>
            <trans-unit resname="cmd334" id="334">
                <source></source>
                <target>CUT NAMED SELECTION ( {aTable ;} name )</target>
            </trans-unit>
            <trans-unit resname="desc334" id="334">
                <source></source>
                <target>creates a named selection name and moves the current selection of aTable to it.</target>
            </trans-unit>
            <trans-unit resname="cmd335" id="335">
                <source></source>
                <target>Count tasks  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc335" id="335">
                <source></source>
                <target>returns the highest alive process number in the 4D single-user, 4D remote, or 4D Server (stored procedures) version.</target>
            </trans-unit>
            <trans-unit resname="cmd336" id="336">
                <source></source>
                <target>PROCESS PROPERTIES ( process ; procName ; procState ; procTime {; procMode {; uniqueID {; origin}}} )</target>
            </trans-unit>
            <trans-unit resname="desc336" id="336">
                <source></source>
                <target>returns various information about the process whose process number you pass in process.</target>
            </trans-unit>
            <trans-unit resname="cmd338" id="338">
                <source></source>
                <target>User in group ( user ; group ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc338" id="338">
                <source></source>
                <target>returns TRUE if user is in group.</target>
            </trans-unit>
            <trans-unit resname="cmd339" id="339">
                <source></source>
                <target>DISTINCT VALUES ( aField ; array {; countArray} )</target>
            </trans-unit>
            <trans-unit resname="desc339" id="339">
                <source></source>
                <target>creates and populates the array array with non-repeated (unique) values coming from the field aField for the current selection of the table to which the field belongs and, optionally, returns the number of occurrences of each value in the countArray parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd340" id="340">
                <source></source>
                <target>RELATE MANY SELECTION ( aField )</target>
            </trans-unit>
            <trans-unit resname="desc340" id="340">
                <source></source>
                <target>generates a selection of records in the Many table, based on a selection of records in the One table, and loads the first record of the Many table as the current record.</target>
            </trans-unit>
            <trans-unit resname="cmd341" id="341">
                <source></source>
                <target>QUERY SELECTION ( {aTable }{;}{ queryArgument {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc341" id="341">
                <source></source>
                <target>looks for records in aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd342" id="342">
                <source></source>
                <target>Count users  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc342" id="342">
                <source></source>
                <target>returns the number of users connected to the server machine. </target>
            </trans-unit>
            <trans-unit resname="cmd343" id="343">
                <source></source>
                <target>Count user processes  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc343" id="343">
                <source></source>
                <target>returns the current number of &quot;live&quot; processes in the 4D application whose type is different from -25 (Internal Timer Process), -31 (Client Manager Process) and -15 (Server Interface Process)</target>
            </trans-unit>
            <trans-unit resname="cmd344" id="344">
                <source></source>
                <target>SET INDEX ( aField ; index {; mode} {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc344" id="344">
                <source></source>
                <target>creates or removes an index according to the parameters passed</target>
            </trans-unit>
            <trans-unit resname="cmd345" id="345">
                <source></source>
                <target>SELECT LOG FILE ( logFile )</target>
            </trans-unit>
            <trans-unit resname="desc345" id="345">
                <source></source>
                <target>creates, or closes the log file according to the value you pass in logFile.</target>
            </trans-unit>
            <trans-unit resname="cmd346" id="346">
                <source></source>
                <target>Activated  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc346" id="346">
                <source></source>
                <target> (obsolete) returns True in a form method when the window containing the form becomes the frontmost window of the frontmost process. </target>
            </trans-unit>
            <trans-unit resname="cmd347" id="347">
                <source></source>
                <target>Deactivated  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc347" id="347">
                <source></source>
                <target>returns True in a form or object method when the frontmost window of the  frontmost process moves to the back</target>
            </trans-unit>
            <trans-unit resname="cmd348" id="348">
                <source></source>
                <target>SET MENU ITEM ( menu ; menuItem ; itemText {; process}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc348" id="348">
                <source></source>
                <target>changes the text of the menu item whose menu number or reference is passed in menu and whose item number is passed in menuItem, to the text passed in itemText.</target>
            </trans-unit>
            <trans-unit resname="cmd349" id="349">
                <source></source>
                <target>RELATE ONE SELECTION ( manyTable ; oneTable )</target>
            </trans-unit>
            <trans-unit resname="desc349" id="349">
                <source></source>
                <target>creates a new selection of records for the table oneTable, based on the selection of records in the table manyTable and loads the first record of the new selection as the current record. </target>
            </trans-unit>
            <trans-unit resname="cmd350" id="350">
                <source></source>
                <target>SCAN INDEX ( aField ; number {; &gt; or &lt;} )</target>
            </trans-unit>
            <trans-unit resname="desc350" id="350">
                <source></source>
                <target>returns a selection of number records from the table containing the aField field</target>
            </trans-unit>
            <trans-unit resname="cmd351" id="351">
                <source></source>
                <target>REDUCE SELECTION ( {aTable ;} number )</target>
            </trans-unit>
            <trans-unit resname="desc351" id="351">
                <source></source>
                <target>reduces the current selection of aTable to the first number records</target>
            </trans-unit>
            <trans-unit resname="cmd352" id="352">
                <source></source>
                <target>_o_C_GRAPH ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc352" id="352">
                <source></source>
                <target>casts each specified variable as a Graph variable.</target>
            </trans-unit>
            <trans-unit resname="cmd353" id="353">
                <source></source>
                <target>LOCKED BY ( {aTable ;} process ; 4Duser ; sessionUser ; processName )</target>
            </trans-unit>
            <trans-unit resname="desc353" id="353">
                <source></source>
                <target>returns information about the user and process that have locked a record.</target>
            </trans-unit>
            <trans-unit resname="cmd356" id="356">
                <source></source>
                <target>Picture size ( picture ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc356" id="356">
                <source></source>
                <target>returns the size of picture in bytes.</target>
            </trans-unit>
            <trans-unit resname="cmd362" id="362">
                <source></source>
                <target>Read only state {( aTable )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc362" id="362">
                <source></source>
                <target>returns TRUE if the state of aTable is read-only and FALSE if the state of aTable is read/ write</target>
            </trans-unit>
            <trans-unit resname="cmd363" id="363">
                <source></source>
                <target>Current default table  -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc363" id="363">
                <source></source>
                <target>returns a pointer to the table that has been passed to the last call to DEFAULT TABLE for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd364" id="364">
                <source></source>
                <target>SET PRINT PREVIEW ( preview )</target>
            </trans-unit>
            <trans-unit resname="desc364" id="364">
                <source></source>
                <target>allows you to programmatically check or uncheck the Preview on Screen option of the Print dialog box.</target>
            </trans-unit>
            <trans-unit resname="cmd365" id="365">
                <source></source>
                <target>_o_PLATFORM PROPERTIES ( platform {; system {; processor {; language}}} ) </target>
            </trans-unit>
            <trans-unit resname="desc365" id="365">
                <source></source>
                <target>returns information about the type of operating system you are running, the version and the language of the operating system, and the processor installed on your machine.</target>
            </trans-unit>
            <trans-unit resname="cmd366" id="366">
                <source></source>
                <target>_o_MAP FILE TYPES ( macOS ; windows ; context )</target>
            </trans-unit>
            <trans-unit resname="desc366" id="366">
                <source></source>
                <target>lets you associate a Windows file extension with a Macintosh file type.</target>
            </trans-unit>
            <trans-unit resname="cmd368" id="368">
                <source></source>
                <target>SELECTION RANGE TO ARRAY ( start ; end {; aField | aTable ; array} {; aField | aTable2 ; array2 ; ... ; aField | aTableN ; arrayN} )</target>
            </trans-unit>
            <trans-unit resname="desc368" id="368">
                <source></source>
                <target>creates one or more arrays and copies data from the fields or record numbers from the current selection into the arrays. </target>
            </trans-unit>
            <trans-unit resname="cmd369" id="369">
                <source></source>
                <target>Trigger event  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc369" id="369">
                <source></source>
                <target>returns a numeric value that denotes the type of the database event, in other words, the reason why the trigger has been invoked.</target>
            </trans-unit>
            <trans-unit resname="cmd370" id="370">
                <source></source>
                <target>SET PROCESS VARIABLE ( process ; dstVar ; expr {; dstVar2 ; expr2 ; ... ; dstVarN ; exprN} )</target>
            </trans-unit>
            <trans-unit resname="desc370" id="370">
                <source></source>
                <target>writes the dstVar process variables (dstVar2, etc.) of the destination process whose number is passed in process using the values passed in expr1 (expr2, etc.).</target>
            </trans-unit>
            <trans-unit resname="cmd371" id="371">
                <source></source>
                <target>GET PROCESS VARIABLE ( process ; srcVar ; dstVar {; srcVar2 ; dstVar2 ; ... ; srcVarN ; dstVarN} )</target>
            </trans-unit>
            <trans-unit resname="desc371" id="371">
                <source></source>
                <target>reads the srcVar process variables (srvVar2, etc.) from the source process whose number is passed in process, and returns their current values in the dstVar variables ( dstVar2, etc.) of the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd372" id="372">
                <source></source>
                <target>Process number ( name {; *} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc372" id="372">
                <source></source>
                <target>returns the number of the process whose name you pass in name.</target>
            </trans-unit>
            <trans-unit resname="cmd373" id="373">
                <source></source>
                <target>Execute on server ( procedure ; stack {; name {; param {; param2 ; ... ; paramN}}}{; *} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc373" id="373">
                <source></source>
                <target>starts a new process on the Server machine (if it is called in Client/Server) or on the same machine (if it is called in single-user) and returns the process number for that process.</target>
            </trans-unit>
            <trans-unit resname="cmd375" id="375">
                <source></source>
                <target>New list  -&gt; ListRef</target>
            </trans-unit>
            <trans-unit resname="desc375" id="375">
                <source></source>
                <target>creates a new, empty hierarchical list in memory and returns its unique list reference number.</target>
            </trans-unit>
            <trans-unit resname="cmd376" id="376">
                <source></source>
                <target>APPEND TO LIST ( list ; itemText ; itemRef {; sublist ; expanded} )</target>
            </trans-unit>
            <trans-unit resname="desc376" id="376">
                <source></source>
                <target>appends a new item to the hierarchical list whose list reference number you pass in list.</target>
            </trans-unit>
            <trans-unit resname="cmd377" id="377">
                <source></source>
                <target>CLEAR LIST ( list {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc377" id="377">
                <source></source>
                <target>deletes the hierarchical list whose list reference number you pass in list.</target>
            </trans-unit>
            <trans-unit resname="cmd378" id="378">
                <source></source>
                <target>GET LIST ITEM ( {* ;} list ; itemPos | * ; itemRef ; itemText {; sublist ; expanded} )</target>
            </trans-unit>
            <trans-unit resname="desc378" id="378">
                <source></source>
                <target>returns information about the item specified by itemPos of the list whose reference number or object name is passed in list. </target>
            </trans-unit>
            <trans-unit resname="cmd379" id="379">
                <source></source>
                <target>Selected list items ( {* ;} list {; itemsArray {; *}} )  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc379" id="379">
                <source></source>
                <target>returns the position or reference of the selected item in the list whose reference number or object name you pass in list. </target>
            </trans-unit>
            <trans-unit resname="cmd380" id="380">
                <source></source>
                <target>Count list items ( {* ;} list {; *} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc380" id="380">
                <source></source>
                <target>returns either the number of items currently “visible” or the total number of items in the list whose reference number or object name you pass in list.</target>
            </trans-unit>
            <trans-unit resname="cmd381" id="381">
                <source></source>
                <target>SELECT LIST ITEMS BY POSITION ( {* ;} list ; itemPos {; positionsArray} ) </target>
            </trans-unit>
            <trans-unit resname="desc381" id="381">
                <source></source>
                <target>selects the item(s) whose position is passed in itemPos and, optionally, in positionsArray within the list whose reference number or object name is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd382" id="382">
                <source></source>
                <target>_o_REDRAW LIST ( list )</target>
            </trans-unit>
            <trans-unit resname="desc382" id="382">
                <source></source>
                <target>(obsolete) command serves no purpose beginning with version 11 of 4D</target>
            </trans-unit>
            <trans-unit resname="cmd383" id="383">
                <source></source>
                <target>Load list ( listName ) -&gt; ListRef</target>
            </trans-unit>
            <trans-unit resname="desc383" id="383">
                <source></source>
                <target>creates a new hierarchical list whose contents are copied from the list and whose name you pass in listName.</target>
            </trans-unit>
            <trans-unit resname="cmd384" id="384">
                <source></source>
                <target>SAVE LIST ( list ; listName )</target>
            </trans-unit>
            <trans-unit resname="desc384" id="384">
                <source></source>
                <target>saves the list whose reference number you pass in list, within the Design environment List Editor, under the name you pass in listName.</target>
            </trans-unit>
            <trans-unit resname="cmd385" id="385">
                <source></source>
                <target>SET LIST ITEM ( {* ;} list ; itemRef | * ; newItemText ; newItemRef {; sublist ; expanded} )</target>
            </trans-unit>
            <trans-unit resname="desc385" id="385">
                <source></source>
                <target>modifies the item designated by the itemRef parameter within the list whose reference number or object name is passed in list. </target>
            </trans-unit>
            <trans-unit resname="cmd386" id="386">
                <source></source>
                <target>SET LIST ITEM PROPERTIES ( {* ;} list ; itemRef | * ; enterable ; styles ; icon {; color} )</target>
            </trans-unit>
            <trans-unit resname="desc386" id="386">
                <source></source>
                <target>modifies the item designated by the itemRef parameter within the list whose reference number or object name is passed in list. </target>
            </trans-unit>
            <trans-unit resname="cmd387" id="387">
                <source></source>
                <target>SET LIST PROPERTIES ( list ; appearance {; icon {; lineHeight {; doubleClick {; multiSelections {; editable}}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc387" id="387">
                <source></source>
                <target>sets the line height and selection properties of the hierarchical list whose list reference you pass in list.</target>
            </trans-unit>
            <trans-unit resname="cmd388" id="388">
                <source></source>
                <target>Form event code  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc388" id="388">
                <source></source>
                <target>returns a numeric value identifying the type of form event that has just occurred.</target>
            </trans-unit>
            <trans-unit resname="cmd389" id="389">
                <source></source>
                <target>FILTER KEYSTROKE ( filteredChar )</target>
            </trans-unit>
            <trans-unit resname="desc389" id="389">
                <source></source>
                <target>enables you to replace the character entered by the user into a field or an enterable area with the first character of the string filteredChar you pass.</target>
            </trans-unit>
            <trans-unit resname="cmd390" id="390">
                <source></source>
                <target>Keystroke  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc390" id="390">
                <source></source>
                <target>returns the character entered by the user into a field or an enterable area. </target>
            </trans-unit>
            <trans-unit resname="cmd391" id="391">
                <source></source>
                <target>SORT LIST ( list {; &gt; or &lt;} )</target>
            </trans-unit>
            <trans-unit resname="desc391" id="391">
                <source></source>
                <target>sorts the list whose reference number is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd392" id="392">
                <source></source>
                <target>SET DEFAULT CENTURY ( century {; pivotYear} )</target>
            </trans-unit>
            <trans-unit resname="desc392" id="392">
                <source></source>
                <target>specifies the default century and the pivot year used by 4D when you enter a date with only two digits for the year.</target>
            </trans-unit>
            <trans-unit resname="cmd393" id="393">
                <source></source>
                <target>Add to date ( date ; years ; months ; days ) -&gt; Date</target>
            </trans-unit>
            <trans-unit resname="desc393" id="393">
                <source></source>
                <target>adds years, months, and days to the date you pass in aDate, then returns the result.</target>
            </trans-unit>
            <trans-unit resname="cmd394" id="394">
                <source></source>
                <target>RESOLVE POINTER ( aPointer ; varName ; tableNum ; fieldNum )</target>
            </trans-unit>
            <trans-unit resname="desc394" id="394">
                <source></source>
                <target>retrieves the information of the object referenced by the pointer expression aPointer and returns it into the parameters varName, tableNum, and fieldNum.</target>
            </trans-unit>
            <trans-unit resname="cmd395" id="395">
                <source></source>
                <target>SET QUERY LIMIT ( limit )</target>
            </trans-unit>
            <trans-unit resname="desc395" id="395">
                <source></source>
                <target>allows you to tell 4D to stop any subsequent query for the current process as soon as at least the number of records you pass in limit has been found.</target>
            </trans-unit>
            <trans-unit resname="cmd396" id="396">
                <source></source>
                <target>SET QUERY DESTINATION ( destinationType {; destinationObject {; destinationPtr}} )</target>
            </trans-unit>
            <trans-unit resname="desc396" id="396">
                <source></source>
                <target>enables you to tell 4D where to put the result of any subsequent query for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd397" id="397">
                <source></source>
                <target>In transaction  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc397" id="397">
                <source></source>
                <target>returns TRUE if the current process is in a transaction, otherwise it returns FALSE.</target>
            </trans-unit>
            <trans-unit resname="cmd398" id="398">
                <source></source>
                <target>Trigger level  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc398" id="398">
                <source></source>
                <target>returns the execution level of the trigger.</target>
            </trans-unit>
            <trans-unit resname="cmd399" id="399">
                <source></source>
                <target>TRIGGER PROPERTIES ( triggerLevel ; dbEvent ; tableNum ; recordNum )</target>
            </trans-unit>
            <trans-unit resname="desc399" id="399">
                <source></source>
                <target>returns information about the trigger execution level you pass in triggerLevel.</target>
            </trans-unit>
            <trans-unit resname="cmd400" id="400">
                <source></source>
                <target>Pasteboard data size ( dataType ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc400" id="400">
                <source></source>
                <target>checks whether there is any data of the type you passed in dataType present in the pasteboard.</target>
            </trans-unit>
            <trans-unit resname="cmd401" id="401">
                <source></source>
                <target>GET PASTEBOARD DATA ( dataType ; data )</target>
            </trans-unit>
            <trans-unit resname="desc401" id="401">
                <source></source>
                <target>returns, in the BLOB field or in the data variable, the data present in the pasteboard and whose type you pass in dataType.</target>
            </trans-unit>
            <trans-unit resname="cmd402" id="402">
                <source></source>
                <target>CLEAR PASTEBOARD </target>
            </trans-unit>
            <trans-unit resname="desc402" id="402">
                <source></source>
                <target>clears the pasteboard of all its contents.</target>
            </trans-unit>
            <trans-unit resname="cmd403" id="403">
                <source></source>
                <target>APPEND DATA TO PASTEBOARD ( dataType ; data )</target>
            </trans-unit>
            <trans-unit resname="desc403" id="403">
                <source></source>
                <target>appends to the pasteboard the data contained in the BLOB data under the data type specified in dataType.</target>
            </trans-unit>
            <trans-unit resname="cmd404" id="404">
                <source></source>
                <target>Count menus {( process )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc404" id="404">
                <source></source>
                <target>returns the number of menus present in the menu bar.</target>
            </trans-unit>
            <trans-unit resname="cmd405" id="405">
                <source></source>
                <target>Count menu items ( menu {; process} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc405" id="405">
                <source></source>
                <target>returns the number of menu items present in the menu whose number or reference is passed in menu.</target>
            </trans-unit>
            <trans-unit resname="cmd408" id="408">
                <source></source>
                <target>Create menu {( menu )} -&gt; MenuRef</target>
            </trans-unit>
            <trans-unit resname="desc408" id="408">
                <source></source>
                <target>creates a new menu in memory.</target>
            </trans-unit>
            <trans-unit resname="cmd411" id="411">
                <source></source>
                <target>APPEND MENU ITEM ( menu ; itemText {; subMenu {; process {; *}}} )</target>
            </trans-unit>
            <trans-unit resname="desc411" id="411">
                <source></source>
                <target>appends new menu items to the menu whose number or reference is passed in menu.</target>
            </trans-unit>
            <trans-unit resname="cmd412" id="412">
                <source></source>
                <target>INSERT MENU ITEM ( menu ; afterItem ; itemText {; subMenu {; process}}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc412" id="412">
                <source></source>
                <target>inserts new menu items into the menu whose number or reference is passed in menu after the existing menu item whose number is passed in afterItem.</target>
            </trans-unit>
            <trans-unit resname="cmd413" id="413">
                <source></source>
                <target>DELETE MENU ITEM ( menu ; menuItem {; process} )</target>
            </trans-unit>
            <trans-unit resname="desc413" id="413">
                <source></source>
                <target>deletes the menu item whose menu number or reference is passed in menu and whose item number is passed in menuItem.</target>
            </trans-unit>
            <trans-unit resname="cmd422" id="422">
                <source></source>
                <target>Get menu item ( menu ; menuItem {; process} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc422" id="422">
                <source></source>
                <target>returns the text of the menu item whose menu and item numbers are passed in menu and menuItem.</target>
            </trans-unit>
            <trans-unit resname="cmd423" id="423">
                <source></source>
                <target>SET MENU ITEM SHORTCUT ( menu ; menuItem ; itemKey ; modifiers {; process} )</target>
            </trans-unit>
            <trans-unit resname="desc423" id="423">
                <source></source>
                <target>replaces the shortcut key associated with the menu command specified by menu and menuItem, by the character whose character code or text is passed in itemKey.</target>
            </trans-unit>
            <trans-unit resname="cmd424" id="424">
                <source></source>
                <target>Get menu item key ( menu ; menuItem {; process} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc424" id="424">
                <source></source>
                <target>returns the code of the Ctrl (Windows) or Command (Macintosh) shortcut for the menu item whose menu number or reference is passed in menu and whose item number is passed in menuItem.</target>
            </trans-unit>
            <trans-unit resname="cmd425" id="425">
                <source></source>
                <target>SET MENU ITEM STYLE ( menu ; menuItem ; itemStyle {; process} ) </target>
            </trans-unit>
            <trans-unit resname="desc425" id="425">
                <source></source>
                <target>changes the font style of the menu item whose menu number or reference is passed in menu and whose item number is passed in menuItem according to the font style passed in itemStyle.</target>
            </trans-unit>
            <trans-unit resname="cmd426" id="426">
                <source></source>
                <target>Get menu item style ( menu ; menuItem {; process} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc426" id="426">
                <source></source>
                <target>returns the font style of the menu item whose number or reference is passed in menu and whose item number is passed in menuItem.</target>
            </trans-unit>
            <trans-unit resname="cmd428" id="428">
                <source></source>
                <target>Get menu item mark ( menu ; menuItem {; process} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc428" id="428">
                <source></source>
                <target>returns the check mark of the menu item whose number or reference is passed in menu and whose item number is passed in menuItem.</target>
            </trans-unit>
            <trans-unit resname="cmd430" id="430">
                <source></source>
                <target>Get menu title ( menu {; process} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc430" id="430">
                <source></source>
                <target>returns the title of the menu whose number or reference is passed in menu.</target>
            </trans-unit>
            <trans-unit resname="cmd431" id="431">
                <source></source>
                <target>SHOW MENU BAR </target>
            </trans-unit>
            <trans-unit resname="desc431" id="431">
                <source></source>
                <target>makes the menu bar visible.</target>
            </trans-unit>
            <trans-unit resname="cmd432" id="432">
                <source></source>
                <target>HIDE MENU BAR </target>
            </trans-unit>
            <trans-unit resname="desc432" id="432">
                <source></source>
                <target>makes the menu bar invisible.</target>
            </trans-unit>
            <trans-unit resname="cmd433" id="433">
                <source></source>
                <target>SHOW TOOL BAR </target>
            </trans-unit>
            <trans-unit resname="desc433" id="433">
                <source></source>
                <target>handles the display of custom toolbars created by the  Open form window command for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd434" id="434">
                <source></source>
                <target>HIDE TOOL BAR </target>
            </trans-unit>
            <trans-unit resname="desc434" id="434">
                <source></source>
                <target>handles the display of custom toolbars created by the  Open form window command for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd435" id="435">
                <source></source>
                <target>SHOW WINDOW {( window )}</target>
            </trans-unit>
            <trans-unit resname="desc435" id="435">
                <source></source>
                <target>displays the window whose number was passed in window.</target>
            </trans-unit>
            <trans-unit resname="cmd436" id="436">
                <source></source>
                <target>HIDE WINDOW {( window )}</target>
            </trans-unit>
            <trans-unit resname="desc436" id="436">
                <source></source>
                <target>hides the window whose number was passed in window or, if this parameter is omitted, the current process frontmost window.</target>
            </trans-unit>
            <trans-unit resname="cmd437" id="437">
                <source></source>
                <target>Count screens  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc437" id="437">
                <source></source>
                <target>returns the number of screen monitors connected to your machine.</target>
            </trans-unit>
            <trans-unit resname="cmd438" id="438">
                <source></source>
                <target>SCREEN COORDINATES ( left ; top ; right ; bottom {; screenID {; screenArea}} )</target>
            </trans-unit>
            <trans-unit resname="desc438" id="438">
                <source></source>
                <target>returns in left, top, right, and bottom the global coordinates of the screen specified by screenID.</target>
            </trans-unit>
            <trans-unit resname="cmd439" id="439">
                <source></source>
                <target>SCREEN DEPTH ( depth ; color {; screen} )</target>
            </trans-unit>
            <trans-unit resname="desc439" id="439">
                <source></source>
                <target>returns in depth and color information about the monitor.</target>
            </trans-unit>
            <trans-unit resname="cmd440" id="440">
                <source></source>
                <target>Menu bar height  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc440" id="440">
                <source></source>
                <target>returns the height of the menu bar, expressed in pixels.</target>
            </trans-unit>
            <trans-unit resname="cmd441" id="441">
                <source></source>
                <target>Menu bar screen  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc441" id="441">
                <source></source>
                <target>returns the number of the screen where the menu bar is located.</target>
            </trans-unit>
            <trans-unit resname="cmd442" id="442">
                <source></source>
                <target>WINDOW LIST ( windows {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc442" id="442">
                <source></source>
                <target>populates the array windows with the window reference numbers of the windows currently open in all running processes (kernel or user processes).</target>
            </trans-unit>
            <trans-unit resname="cmd443" id="443">
                <source></source>
                <target>GET WINDOW RECT ( left ; top ; right ; bottom {; window} )</target>
            </trans-unit>
            <trans-unit resname="desc443" id="443">
                <source></source>
                <target>returns the coordinates of the window whose reference number is passed in window.</target>
            </trans-unit>
            <trans-unit resname="cmd444" id="444">
                <source></source>
                <target>SET WINDOW RECT ( left ; top ; right ; bottom {; window}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc444" id="444">
                <source></source>
                <target>changes the global coordinates of the window whose reference number is passed in window.</target>
            </trans-unit>
            <trans-unit resname="cmd445" id="445">
                <source></source>
                <target>Window kind {( window )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc445" id="445">
                <source></source>
                <target>returns the 4D type of the window whose reference number is passed in window.</target>
            </trans-unit>
            <trans-unit resname="cmd446" id="446">
                <source></source>
                <target>Window process {( window )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc446" id="446">
                <source></source>
                <target>returns the process number that runs the window whose reference number is passed in window.</target>
            </trans-unit>
            <trans-unit resname="cmd447" id="447">
                <source></source>
                <target>Frontmost window {( * )} -&gt; WinRef</target>
            </trans-unit>
            <trans-unit resname="desc447" id="447">
                <source></source>
                <target>returns the window reference number of the frontmost window.</target>
            </trans-unit>
            <trans-unit resname="cmd448" id="448">
                <source></source>
                <target>Next window ( window ) -&gt; WinRef</target>
            </trans-unit>
            <trans-unit resname="desc448" id="448">
                <source></source>
                <target>returns the window reference number of the window “behind” the window you pass in window (based on the front-to-back order of the windows).</target>
            </trans-unit>
            <trans-unit resname="cmd449" id="449">
                <source></source>
                <target>Find window ( left ; top {; windowPart} ) -&gt; WinRef</target>
            </trans-unit>
            <trans-unit resname="desc449" id="449">
                <source></source>
                <target>returns (if any) the reference number of the first window “touched” by the point whose coordinates passed in left and top.</target>
            </trans-unit>
            <trans-unit resname="cmd450" id="450">
                <source></source>
                <target>Get window title {( window )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc450" id="450">
                <source></source>
                <target>returns the title of the window whose reference number is passed in window. If the window does not exist, an empty string is returned.</target>
            </trans-unit>
            <trans-unit resname="cmd452" id="452">
                <source></source>
                <target>DRAG WINDOW </target>
            </trans-unit>
            <trans-unit resname="desc452" id="452">
                <source></source>
                <target>lets users drag the window on which they clicked following the movements of the mouse.</target>
            </trans-unit>
            <trans-unit resname="cmd453" id="453">
                <source></source>
                <target>MAXIMIZE WINDOW {( window )}</target>
            </trans-unit>
            <trans-unit resname="desc453" id="453">
                <source></source>
                <target>triggers the expansion of the window whose reference number was passed in window.</target>
            </trans-unit>
            <trans-unit resname="cmd454" id="454">
                <source></source>
                <target>MINIMIZE WINDOW {( window )}</target>
            </trans-unit>
            <trans-unit resname="desc454" id="454">
                <source></source>
                <target>sets the size of the window whose number is passed as window to the size it was before being maximized.</target>
            </trans-unit>
            <trans-unit resname="cmd456" id="456">
                <source></source>
                <target>REDRAW WINDOW {( window )}</target>
            </trans-unit>
            <trans-unit resname="desc456" id="456">
                <source></source>
                <target>provokes a graphical update of the window whose reference number you pass in window.</target>
            </trans-unit>
            <trans-unit resname="cmd457" id="457">
                <source></source>
                <target>PICTURE PROPERTIES ( picture ; width ; height {; hOffset {; vOffset {; mode}}} )</target>
            </trans-unit>
            <trans-unit resname="desc457" id="457">
                <source></source>
                <target>returns information about the picture you pass in picture.</target>
            </trans-unit>
            <trans-unit resname="cmd458" id="458">
                <source></source>
                <target>Tickcount  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc458" id="458">
                <source></source>
                <target>returns the number of ticks (60th of a second) elapsed since the machine was started.</target>
            </trans-unit>
            <trans-unit resname="cmd459" id="459">
                <source></source>
                <target>Milliseconds  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc459" id="459">
                <source></source>
                <target>returns the number of milliseconds (1000th of a second) elapsed since the machine was started</target>
            </trans-unit>
            <trans-unit resname="cmd460" id="460">
                <source></source>
                <target>FONT LIST ( fonts {; listType | *} )</target>
            </trans-unit>
            <trans-unit resname="desc460" id="460">
                <source></source>
                <target>populates the fonts text array with the names of scalable fonts available on your system.</target>
            </trans-unit>
            <trans-unit resname="cmd462" id="462">
                <source></source>
                <target>_o_Font name ( fontNumber ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc462" id="462">
                <source></source>
                <target>Command obsolete since 4D v14</target>
            </trans-unit>
            <trans-unit resname="cmd463" id="463">
                <source></source>
                <target>_o_Mac to Win ( text ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc463" id="463">
                <source></source>
                <target>returns a text expressed using the Windows ANSI map that is equivalent to the text you pass in text, which is expressed using the Mac OS ASCII map.</target>
            </trans-unit>
            <trans-unit resname="cmd464" id="464">
                <source></source>
                <target>_o_Win to Mac ( text ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc464" id="464">
                <source></source>
                <target>returns text expressed using the Mac OS ASCII map that is equivalent to the text you pass in Text, which is expressed using the Windows ANSI map.</target>
            </trans-unit>
            <trans-unit resname="cmd465" id="465">
                <source></source>
                <target>POST KEY ( code {; modifiers {; process}} )</target>
            </trans-unit>
            <trans-unit resname="desc465" id="465">
                <source></source>
                <target>simulates a keystroke.</target>
            </trans-unit>
            <trans-unit resname="cmd466" id="466">
                <source></source>
                <target>POST CLICK ( mouseX ; mouseY {; process} {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc466" id="466">
                <source></source>
                <target>simulates a mouse click. Its effect as if the user actually clicked the mouse button.</target>
            </trans-unit>
            <trans-unit resname="cmd467" id="467">
                <source></source>
                <target>POST EVENT ( what ; message ; when ; mouseX ; mouseY ; modifiers {; process} )</target>
            </trans-unit>
            <trans-unit resname="desc467" id="467">
                <source></source>
                <target>simulates a keyboard or mouse event.</target>
            </trans-unit>
            <trans-unit resname="cmd468" id="468">
                <source></source>
                <target>GET MOUSE ( mouseX ; mouseY ; mouseButton {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc468" id="468">
                <source></source>
                <target>returns the current state of the mouse.</target>
            </trans-unit>
            <trans-unit resname="cmd469" id="469">
                <source></source>
                <target>SET CURSOR {( cursor )}</target>
            </trans-unit>
            <trans-unit resname="desc469" id="469">
                <source></source>
                <target>changes the mouse cursor to the system cursor whose ID number you pass in cursor.</target>
            </trans-unit>
            <trans-unit resname="cmd471" id="471">
                <source></source>
                <target>VOLUME LIST ( volumes )</target>
            </trans-unit>
            <trans-unit resname="desc471" id="471">
                <source></source>
                <target>populates the text array volumes with the names of the volumes currently defined (Windows) or mounted (Macintosh) on your machine.</target>
            </trans-unit>
            <trans-unit resname="cmd472" id="472">
                <source></source>
                <target>VOLUME ATTRIBUTES ( volume ; size ; used ; free )</target>
            </trans-unit>
            <trans-unit resname="desc472" id="472">
                <source></source>
                <target>returns, expressed in bytes, the size, the used space and the free space for the volume whose name you pass in volume.</target>
            </trans-unit>
            <trans-unit resname="cmd473" id="473">
                <source></source>
                <target>FOLDER LIST ( pathname ; directories )</target>
            </trans-unit>
            <trans-unit resname="desc473" id="473">
                <source></source>
                <target>populates the Text or String array directories with the names of the folders located at the pathname you pass in pathname.</target>
            </trans-unit>
            <trans-unit resname="cmd474" id="474">
                <source></source>
                <target>DOCUMENT LIST ( pathname ; documents {; options} )</target>
            </trans-unit>
            <trans-unit resname="desc474" id="474">
                <source></source>
                <target>populates the Text array documents with the names of the documents located at the location you pass in pathname.</target>
            </trans-unit>
            <trans-unit resname="cmd475" id="475">
                <source></source>
                <target>CREATE FOLDER ( folderPath {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc475" id="475">
                <source></source>
                <target>creates a folder according to the pathname you pass in folderPath.</target>
            </trans-unit>
            <trans-unit resname="cmd476" id="476">
                <source></source>
                <target>Test path name ( pathname ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc476" id="476">
                <source></source>
                <target>checks if a document or folder whose name or pathname you pass in pathname is present on the disk</target>
            </trans-unit>
            <trans-unit resname="cmd477" id="477">
                <source></source>
                <target>GET DOCUMENT PROPERTIES ( document ; locked ; invisible ; created on ; created at ; modified on ; modified at )</target>
            </trans-unit>
            <trans-unit resname="desc477" id="477">
                <source></source>
                <target>returns information about the document whose name or pathname you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd478" id="478">
                <source></source>
                <target>SET DOCUMENT PROPERTIES ( document ; locked ; invisible ; created on ; created at ; modified on ; modified at )</target>
            </trans-unit>
            <trans-unit resname="desc478" id="478">
                <source></source>
                <target>changes the information about the document whose name or pathname you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd479" id="479">
                <source></source>
                <target>Get document size ( document {; *} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc479" id="479">
                <source></source>
                <target>returns the size, expressed in bytes, of a document.</target>
            </trans-unit>
            <trans-unit resname="cmd480" id="480">
                <source></source>
                <target>SET DOCUMENT SIZE ( docRef ; size )</target>
            </trans-unit>
            <trans-unit resname="desc480" id="480">
                <source></source>
                <target>sets the size of a document to the number of bytes you pass in size. </target>
            </trans-unit>
            <trans-unit resname="cmd481" id="481">
                <source></source>
                <target>Get document position ( docRef ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc481" id="481">
                <source></source>
                <target>returns the position, starting from the beginning of the document, where the next read (RECEIVE PACKET) or write (SEND PACKET) will occur.</target>
            </trans-unit>
            <trans-unit resname="cmd482" id="482">
                <source></source>
                <target>SET DOCUMENT POSITION ( docRef ; offset {; anchor} )</target>
            </trans-unit>
            <trans-unit resname="desc482" id="482">
                <source></source>
                <target>sets the position you pass in offset where the next read (RECEIVE PACKET) or write (SEND PACKET) will occur.</target>
            </trans-unit>
            <trans-unit resname="cmd483" id="483">
                <source></source>
                <target>Current machine  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc483" id="483">
                <source></source>
                <target>returns the name of the machine as set in the network parameters of the operating system.</target>
            </trans-unit>
            <trans-unit resname="cmd484" id="484">
                <source></source>
                <target>Current system user  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc484" id="484">
                <source></source>
                <target>returns the owner name of your machine, as set in the current user account on the machine.</target>
            </trans-unit>
            <trans-unit resname="cmd485" id="485">
                <source></source>
                <target>Get 4D folder {( folder {; *} )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc485" id="485">
                <source></source>
                <target>returns the pathname to the active 4D folder of the current application, or to the 4D environment folder specified by the folder parameter, if passed.</target>
            </trans-unit>
            <trans-unit resname="cmd486" id="486">
                <source></source>
                <target>Temporary folder  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc486" id="486">
                <source></source>
                <target>returns the pathname to the current temporary folder set by your system.</target>
            </trans-unit>
            <trans-unit resname="cmd487" id="487">
                <source></source>
                <target>System folder {( type )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc487" id="487">
                <source></source>
                <target>returns the pathname to a particular folder of the operating system or to the active Windows or Mac OS System folder itself.</target>
            </trans-unit>
            <trans-unit resname="cmd488" id="488">
                <source></source>
                <target>_o_Gestalt ( selector ; value ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc488" id="488">
                <source></source>
                <target>deprecated in 4D v17 and higher. You can now use the Get system info command for complete system information</target>
            </trans-unit>
            <trans-unit resname="cmd489" id="489">
                <source></source>
                <target>Structure file {( * )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc489" id="489">
                <source></source>
                <target>returns the pathname of the structure file for the database with which you are currently working.</target>
            </trans-unit>
            <trans-unit resname="cmd490" id="490">
                <source></source>
                <target>Data file {( segment )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc490" id="490">
                <source></source>
                <target>returns the long name of the data file for the database with which you are currently working.</target>
            </trans-unit>
            <trans-unit resname="cmd491" id="491">
                <source></source>
                <target>Application file  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc491" id="491">
                <source></source>
                <target>returns the long name of the 4D executable file or application you are running.</target>
            </trans-unit>
            <trans-unit resname="cmd492" id="492">
                <source></source>
                <target>Is compiled mode {( * )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc492" id="492">
                <source></source>
                <target>tests whether you are running in compiled mode (True) or interpreted mode (False).</target>
            </trans-unit>
            <trans-unit resname="cmd493" id="493">
                <source></source>
                <target>Application version {( buildNum {; *} )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc493" id="493">
                <source></source>
                <target>returns an encoded string value that expresses the version number of the 4D environment you are running.</target>
            </trans-unit>
            <trans-unit resname="cmd494" id="494">
                <source></source>
                <target>Application type  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc494" id="494">
                <source></source>
                <target>returns a numeric value that denotes the type of 4D environment that you are running.</target>
            </trans-unit>
            <trans-unit resname="cmd495" id="495">
                <source></source>
                <target>Version type  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc495" id="495">
                <source></source>
                <target>returns a numeric value that denotes the type of 4D or 4D Server version that you are running.</target>
            </trans-unit>
            <trans-unit resname="cmd497" id="497">
                <source></source>
                <target>Open resource file ( resFilename {; fileType} ) -&gt; DocRef</target>
            </trans-unit>
            <trans-unit resname="desc497" id="497">
                <source></source>
                <target>opens the resource file whose name or pathname you pass in resFileName.</target>
            </trans-unit>
            <trans-unit resname="cmd498" id="498">
                <source></source>
                <target>CLOSE RESOURCE FILE ( resFile )</target>
            </trans-unit>
            <trans-unit resname="desc498" id="498">
                <source></source>
                <target>closes the resource file whose reference number is passed in resFile.</target>
            </trans-unit>
            <trans-unit resname="cmd499" id="499">
                <source></source>
                <target>RESOURCE TYPE LIST ( resTypes {; resFile} )</target>
            </trans-unit>
            <trans-unit resname="desc499" id="499">
                <source></source>
                <target>populates the array resTypes with the resource types of the resources present in the resource files currently open.</target>
            </trans-unit>
            <trans-unit resname="cmd500" id="500">
                <source></source>
                <target>RESOURCE LIST ( resType ; resIDs ; resNames {; resFile} ) </target>
            </trans-unit>
            <trans-unit resname="desc500" id="500">
                <source></source>
                <target>populates the arrays resIDs and resNames with the resource IDs and names of the resources whose type is passed in resType.</target>
            </trans-unit>
            <trans-unit resname="cmd502" id="502">
                <source></source>
                <target>GET PICTURE RESOURCE ( resID ; resData {; resFile} )</target>
            </trans-unit>
            <trans-unit resname="desc502" id="502">
                <source></source>
                <target>returns in the picture field or variable resData the picture stored in the picture (“PICT”) resource whose ID is passed in resID.</target>
            </trans-unit>
            <trans-unit resname="cmd504" id="504">
                <source></source>
                <target>Get text resource ( resID {; resFile} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc504" id="504">
                <source></source>
                <target>returns the text stored in the text (“TEXT”) resource whose ID is passed in resID.</target>
            </trans-unit>
            <trans-unit resname="cmd506" id="506">
                <source></source>
                <target>Get string resource ( resID {; resFile} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc506" id="506">
                <source></source>
                <target>returns the string stored in the string (“STR ”) resource whose ID is passed in resID.</target>
            </trans-unit>
            <trans-unit resname="cmd508" id="508">
                <source></source>
                <target>GET RESOURCE ( resType ; resID ; resData {; resFile} ) </target>
            </trans-unit>
            <trans-unit resname="desc508" id="508">
                <source></source>
                <target>returns in the BLOB field or variable resData the contents of the resource whose type and ID is passed in resType and resID.</target>
            </trans-unit>
            <trans-unit resname="cmd510" id="510">
                <source></source>
                <target>Get indexed string ( resID ; strID {; resFile} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc510" id="510">
                <source></source>
                <target>returns a string stored in an open XLIFF file whose &#39;id&#39; attribute of the &#39;group&#39; element is passed in resID  or one of the strings stored in the string list (“STR#”) resource whose ID is passed in resID</target>
            </trans-unit>
            <trans-unit resname="cmd511" id="511">
                <source></source>
                <target>STRING LIST TO ARRAY ( resID ; strings {; resFile} )</target>
            </trans-unit>
            <trans-unit resname="desc511" id="511">
                <source></source>
                <target>populates the array strings with a string stored in an open XLIFF file whose &#39;id&#39; attribute of the &#39;group&#39; element is passed in resID or the strings stored in the string list (&quot;STR#&quot;) resource whose ID is passed in resID</target>
            </trans-unit>
            <trans-unit resname="cmd513" id="513">
                <source></source>
                <target>Get resource name ( resType ; resID {; resFile} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc513" id="513">
                <source></source>
                <target>returns the name of the resource whose type is passed in resType and whose ID number is passed in resID.</target>
            </trans-unit>
            <trans-unit resname="cmd515" id="515">
                <source></source>
                <target>Get resource properties ( resType ; resID {; resFile} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc515" id="515">
                <source></source>
                <target>returns the attributes of the resource whose type is passed in resType and whose ID number is passed in resID.</target>
            </trans-unit>
            <trans-unit resname="cmd521" id="521">
                <source></source>
                <target>SET PICTURE TO PASTEBOARD ( picture )</target>
            </trans-unit>
            <trans-unit resname="desc521" id="521">
                <source></source>
                <target>clears the pasteboard and puts a copy of the picture passed in picture into it.</target>
            </trans-unit>
            <trans-unit resname="cmd522" id="522">
                <source></source>
                <target>GET PICTURE FROM PASTEBOARD ( picture )</target>
            </trans-unit>
            <trans-unit resname="desc522" id="522">
                <source></source>
                <target>returns the picture present in the pasteboard in the picture field or variable.</target>
            </trans-unit>
            <trans-unit resname="cmd523" id="523">
                <source></source>
                <target>SET TEXT TO PASTEBOARD ( text )</target>
            </trans-unit>
            <trans-unit resname="desc523" id="523">
                <source></source>
                <target>clears the pasteboard and then puts a copy of the text you passed in text into the pasteboard. </target>
            </trans-unit>
            <trans-unit resname="cmd524" id="524">
                <source></source>
                <target>Get text from pasteboard  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc524" id="524">
                <source></source>
                <target>returns the text present in the pasteboard.</target>
            </trans-unit>
            <trans-unit resname="cmd525" id="525">
                <source></source>
                <target>DOCUMENT TO BLOB ( document ; blob {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc525" id="525">
                <source></source>
                <target>loads the whole contents of document into blob.</target>
            </trans-unit>
            <trans-unit resname="cmd526" id="526">
                <source></source>
                <target>BLOB TO DOCUMENT ( document ; blob {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc526" id="526">
                <source></source>
                <target>rewrites the whole contents of document using the data stored in blob.</target>
            </trans-unit>
            <trans-unit resname="cmd527" id="527">
                <source></source>
                <target>_o_DATA SEGMENT LIST ( segments )</target>
            </trans-unit>
            <trans-unit resname="desc527" id="527">
                <source></source>
                <target>Starting with version 11 of 4D, data segments are no longer supported (the size of the data file is now unlimited). This command has been kept for compatibility reasons. It now systematically returns an array with one element containing the long name of the data file of the database. </target>
            </trans-unit>
            <trans-unit resname="cmd528" id="528">
                <source></source>
                <target>_o_Document type ( document ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc528" id="528">
                <source></source>
                <target>returns the extension or the type of the document whose name or pathname you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd529" id="529">
                <source></source>
                <target>_o_Document creator ( document ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc529" id="529">
                <source></source>
                <target>returns the creator of the document whose name or pathname you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd530" id="530">
                <source></source>
                <target>_o_SET DOCUMENT TYPE ( document ; fileType )</target>
            </trans-unit>
            <trans-unit resname="desc530" id="530">
                <source></source>
                <target>sets the type of the document whose name or pathname you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd531" id="531">
                <source></source>
                <target>_o_SET DOCUMENT CREATOR ( document ; fileCreator )</target>
            </trans-unit>
            <trans-unit resname="desc531" id="531">
                <source></source>
                <target>sets the creator of the document whose name or pathname you pass in document.</target>
            </trans-unit>
            <trans-unit resname="cmd532" id="532">
                <source></source>
                <target>VARIABLE TO BLOB ( variable ; blob {; offset | *} )</target>
            </trans-unit>
            <trans-unit resname="desc532" id="532">
                <source></source>
                <target>stores the variable variable in the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd533" id="533">
                <source></source>
                <target>BLOB TO VARIABLE ( blob ; variable {; offset} )</target>
            </trans-unit>
            <trans-unit resname="desc533" id="533">
                <source></source>
                <target>rewrites the variable variable with the data stored within the BLOB blob at the byte offset (starting at zero) specified by offset.</target>
            </trans-unit>
            <trans-unit resname="cmd534" id="534">
                <source></source>
                <target>COMPRESS BLOB ( blob {; compression} )</target>
            </trans-unit>
            <trans-unit resname="desc534" id="534">
                <source></source>
                <target>compresses the BLOB blob using a compression algorithm.</target>
            </trans-unit>
            <trans-unit resname="cmd535" id="535">
                <source></source>
                <target>EXPAND BLOB ( blob )</target>
            </trans-unit>
            <trans-unit resname="desc535" id="535">
                <source></source>
                <target>expands the BLOB blob that was previously compressed using the COMPRESS BLOB command.</target>
            </trans-unit>
            <trans-unit resname="cmd536" id="536">
                <source></source>
                <target>BLOB PROPERTIES ( blob ; compressed {; expandedSize {; currentSize}} ) </target>
            </trans-unit>
            <trans-unit resname="desc536" id="536">
                <source></source>
                <target>returns information about the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd537" id="537">
                <source></source>
                <target>SET SCREEN DEPTH ( depth {; color {; screen}} )</target>
            </trans-unit>
            <trans-unit resname="desc537" id="537">
                <source></source>
                <target>changes the depth and color/gray scale settings of the screen whose number you pass in screen.</target>
            </trans-unit>
            <trans-unit resname="cmd538" id="538">
                <source></source>
                <target>Command name ( command {; info {; theme}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc538" id="538">
                <source></source>
                <target>returns the name as well as (optionally) the properties of the command whose command number you pass in command.</target>
            </trans-unit>
            <trans-unit resname="cmd539" id="539">
                <source></source>
                <target>Square root ( number ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc539" id="539">
                <source></source>
                <target>returns the square root of number.</target>
            </trans-unit>
            <trans-unit resname="cmd540" id="540">
                <source></source>
                <target>MOVE DOCUMENT ( srcPathname ; dstPathname )</target>
            </trans-unit>
            <trans-unit resname="desc540" id="540">
                <source></source>
                <target>moves or renames a document.</target>
            </trans-unit>
            <trans-unit resname="cmd541" id="541">
                <source></source>
                <target>COPY DOCUMENT ( sourceName ; destinationName {; newName} {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc541" id="541">
                <source></source>
                <target>copies the file or folder specified by sourceName to the location specified by destinationName and, optionally, renames it.</target>
            </trans-unit>
            <trans-unit resname="cmd542" id="542">
                <source></source>
                <target>Pop up menu ( contents {; default {; xCoord ; yCoord}} )  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc542" id="542">
                <source></source>
                <target>displays a pop-up menu at the current location of the mouse. </target>
            </trans-unit>
            <trans-unit resname="cmd543" id="543">
                <source></source>
                <target>Shift down  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc543" id="543">
                <source></source>
                <target>returns TRUE if the Shift key is pressed.</target>
            </trans-unit>
            <trans-unit resname="cmd544" id="544">
                <source></source>
                <target>Macintosh control down  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc544" id="544">
                <source></source>
                <target>returns TRUE if the Macintosh Control key is pressed.</target>
            </trans-unit>
            <trans-unit resname="cmd545" id="545">
                <source></source>
                <target>Macintosh option down  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc545" id="545">
                <source></source>
                <target>returns TRUE if the Macintosh Option key is pressed.</target>
            </trans-unit>
            <trans-unit resname="cmd546" id="546">
                <source></source>
                <target>Macintosh command down  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc546" id="546">
                <source></source>
                <target>returns TRUE if the Macintosh command key is pressed.</target>
            </trans-unit>
            <trans-unit resname="cmd547" id="547">
                <source></source>
                <target>Caps lock down  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc547" id="547">
                <source></source>
                <target>returns TRUE if the Caps Lock key is pressed.</target>
            </trans-unit>
            <trans-unit resname="cmd548" id="548">
                <source></source>
                <target>INTEGER TO BLOB ( entier ; blob ; ordreOctet {; offset | *} ) </target>
            </trans-unit>
            <trans-unit resname="desc548" id="548">
                <source></source>
                <target>writes the 2-byte Integer value integer into the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd549" id="549">
                <source></source>
                <target>BLOB to integer ( blob ; byteOrder {; offset} ) -&gt; Integer</target>
            </trans-unit>
            <trans-unit resname="desc549" id="549">
                <source></source>
                <target>returns a 2-byte Integer value read from the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd550" id="550">
                <source></source>
                <target>LONGINT TO BLOB ( longInt ; blob ; byteOrder {; offset | *} ) </target>
            </trans-unit>
            <trans-unit resname="desc550" id="550">
                <source></source>
                <target>writes the 4-byte Long Integer value integer into the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd551" id="551">
                <source></source>
                <target>BLOB to longint ( blob ; byteOrder {; offset} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc551" id="551">
                <source></source>
                <target>returns a 4-byte Long Integer value read from the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd552" id="552">
                <source></source>
                <target>REAL TO BLOB ( real ; blob ; realFormat {; offset | *} ) </target>
            </trans-unit>
            <trans-unit resname="desc552" id="552">
                <source></source>
                <target>writes the Real value real into the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd553" id="553">
                <source></source>
                <target>BLOB to real ( blob ; realFormat {; offset} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc553" id="553">
                <source></source>
                <target>returns a Real value read from the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd554" id="554">
                <source></source>
                <target>TEXT TO BLOB ( text ; blob {; textFormat {; offset | *}} ) </target>
            </trans-unit>
            <trans-unit resname="desc554" id="554">
                <source></source>
                <target>writes the Text value text into the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd555" id="555">
                <source></source>
                <target>BLOB to text ( blob ; textFormat {; offset {; textLength}} )  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc555" id="555">
                <source></source>
                <target>returns a Text value read from the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd556" id="556">
                <source></source>
                <target>LIST TO BLOB ( list ; blob {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc556" id="556">
                <source></source>
                <target>stores the hierarchical list list in the BLOB blob.</target>
            </trans-unit>
            <trans-unit resname="cmd557" id="557">
                <source></source>
                <target>BLOB to list ( blob {; offset} ) -&gt; ListRef</target>
            </trans-unit>
            <trans-unit resname="desc557" id="557">
                <source></source>
                <target>creates a new hierarchical list with the data stored within the BLOB blob at the byte offset (starting at zero) specified by offset and returns a List Reference number for that new list.</target>
            </trans-unit>
            <trans-unit resname="cmd558" id="558">
                <source></source>
                <target>COPY BLOB ( srcBLOB ; dstBLOB ; srcOffset ; dstOffset ; len )</target>
            </trans-unit>
            <trans-unit resname="desc558" id="558">
                <source></source>
                <target>copies the number of bytes specified by len from the BLOB srcBLOB to the BLOB dstBLOB.</target>
            </trans-unit>
            <trans-unit resname="cmd559" id="559">
                <source></source>
                <target>INSERT IN BLOB ( blob ; offset ; len {; filler} ) </target>
            </trans-unit>
            <trans-unit resname="desc559" id="559">
                <source></source>
                <target>inserts the number of bytes specified by len into the BLOB blob at the position specified by offset.</target>
            </trans-unit>
            <trans-unit resname="cmd560" id="560">
                <source></source>
                <target>DELETE FROM BLOB ( blob ; offset ; len )</target>
            </trans-unit>
            <trans-unit resname="desc560" id="560">
                <source></source>
                <target>deletes the number of bytes specified by len from the BLOB blob at the position specified by offset</target>
            </trans-unit>
            <trans-unit resname="cmd561" id="561">
                <source></source>
                <target>REMOVE FROM SET ( {aTable ;} set )</target>
            </trans-unit>
            <trans-unit resname="desc561" id="561">
                <source></source>
                <target>removes the current record of aTable from set.</target>
            </trans-unit>
            <trans-unit resname="cmd562" id="562">
                <source></source>
                <target>Windows Ctrl down  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc562" id="562">
                <source></source>
                <target>returns TRUE if the Windows Ctrl key is pressed.</target>
            </trans-unit>
            <trans-unit resname="cmd563" id="563">
                <source></source>
                <target>Windows Alt down  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc563" id="563">
                <source></source>
                <target>returns TRUE if the Windows Alt key is pressed.</target>
            </trans-unit>
            <trans-unit resname="cmd564" id="564">
                <source></source>
                <target>PICTURE LIBRARY LIST ( picRefs ; picNames )</target>
            </trans-unit>
            <trans-unit resname="desc564" id="564">
                <source></source>
                <target>returns the reference numbers and names of the pictures currently stored in the Picture Library of the database.</target>
            </trans-unit>
            <trans-unit resname="cmd565" id="565">
                <source></source>
                <target>GET PICTURE FROM LIBRARY ( picRef | picName ; picture )</target>
            </trans-unit>
            <trans-unit resname="desc565" id="565">
                <source></source>
                <target>returns in the picture parameter the Picture Library graphic whose reference number is passed in picRef or whose name is passed in picName.</target>
            </trans-unit>
            <trans-unit resname="cmd566" id="566">
                <source></source>
                <target>SET PICTURE TO LIBRARY ( picture ; picRef ; picName )</target>
            </trans-unit>
            <trans-unit resname="desc566" id="566">
                <source></source>
                <target>creates a new picture or replaces a picture in the Picture Library.</target>
            </trans-unit>
            <trans-unit resname="cmd567" id="567">
                <source></source>
                <target>REMOVE PICTURE FROM LIBRARY ( picRef | picName )</target>
            </trans-unit>
            <trans-unit resname="desc567" id="567">
                <source></source>
                <target>removes from the Picture Library the picture whose reference number is passed in picRef or whose name is passed in picName. </target>
            </trans-unit>
            <trans-unit resname="cmd600" id="600">
                <source></source>
                <target>COPY SET ( srcSet ; dstSet )</target>
            </trans-unit>
            <trans-unit resname="desc600" id="600">
                <source></source>
                <target>copies the contents of the set srcSet into the set dstSet.</target>
            </trans-unit>
            <trans-unit resname="cmd601" id="601">
                <source></source>
                <target>SET TABLE TITLES {( tableTitles ; tableNumbers {; *})}</target>
            </trans-unit>
            <trans-unit resname="desc601" id="601">
                <source></source>
                <target>lets you mask, rename, and reorder the tables of your database that appear in standard 4D dialog boxes within the Application environment (when these editors are called using 4D language commands).</target>
            </trans-unit>
            <trans-unit resname="cmd602" id="602">
                <source></source>
                <target>SET FIELD TITLES ( aTable ; fieldTitles ; fieldNumbers {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc602" id="602">
                <source></source>
                <target>lets you mask, rename, and reorder the fields of the table passed in aTable or aSubtable when they appear in standard 4D dialog boxes, such as the Query editor, within the Application environment (more specifically, when the editors are called using 4D language commands).</target>
            </trans-unit>
            <trans-unit resname="cmd603" id="603">
                <source></source>
                <target>OBJECT SET VISIBLE ( {* ;} object ; visible )</target>
            </trans-unit>
            <trans-unit resname="desc603" id="603">
                <source></source>
                <target>shows or hides the objects specified by object.</target>
            </trans-unit>
            <trans-unit resname="cmd604" id="604">
                <source></source>
                <target>C_BLOB ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc604" id="604">
                <source></source>
                <target>casts each specified variable as a BLOB variable.</target>
            </trans-unit>
            <trans-unit resname="cmd605" id="605">
                <source></source>
                <target>BLOB size ( blob ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc605" id="605">
                <source></source>
                <target>returns the size of blob expressed in bytes.</target>
            </trans-unit>
            <trans-unit resname="cmd606" id="606">
                <source></source>
                <target>SET BLOB SIZE ( blob ; size {; filler} )</target>
            </trans-unit>
            <trans-unit resname="desc606" id="606">
                <source></source>
                <target>resizes the BLOB blob according to the value passed in size.</target>
            </trans-unit>
            <trans-unit resname="cmd607" id="607">
                <source></source>
                <target>_o_DRAG AND DROP PROPERTIES ( srcObject ; srcElement ; srcProcess )</target>
            </trans-unit>
            <trans-unit resname="desc607" id="607">
                <source></source>
                <target>enables you to obtain information about the source object when an On Drag Over or On Drop event occurs for a “complex” object (array, list box or hierarchical list).</target>
            </trans-unit>
            <trans-unit resname="cmd608" id="608">
                <source></source>
                <target>Drop position {( columnNumber | pictPosY )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc608" id="608">
                <source></source>
                <target>can be used to find out the location, in a “complex” destination object, where an object has been (dragged and) dropped.</target>
            </trans-unit>
            <trans-unit resname="cmd609" id="609">
                <source></source>
                <target>GET USER LIST ( userNames ; userNumbers )</target>
            </trans-unit>
            <trans-unit resname="desc609" id="609">
                <source></source>
                <target>populates the arrays userNames and userNumbers with the names and unique ID numbers of the users as they appear in the Passwords window.</target>
            </trans-unit>
            <trans-unit resname="cmd610" id="610">
                <source></source>
                <target>GET GROUP LIST ( groupNames ; groupNumbers )</target>
            </trans-unit>
            <trans-unit resname="desc610" id="610">
                <source></source>
                <target>populates the arrays groupNames and groupNumbers with the names and unique ID numbers of the groups as they appear in the Password editor window</target>
            </trans-unit>
            <trans-unit resname="cmd611" id="611">
                <source></source>
                <target>GET USER PROPERTIES ( userID ; name ; startup ; password ; nbLogin ; lastLogin {; memberships {; groupOwner}} )</target>
            </trans-unit>
            <trans-unit resname="desc611" id="611">
                <source></source>
                <target>returns the information about the user whose unique user ID number you pass in userID.</target>
            </trans-unit>
            <trans-unit resname="cmd612" id="612">
                <source></source>
                <target>Set user properties ( userID ; name ; startup ; password ; nbLogin ; lastLogin {; memberships {; groupOwner}} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc612" id="612">
                <source></source>
                <target>lets you change and update the properties of an existing user account whose unique user ID number you pass in userID, or add a new user</target>
            </trans-unit>
            <trans-unit resname="cmd613" id="613">
                <source></source>
                <target>GET GROUP PROPERTIES ( groupID ; name ; owner {; members} ) </target>
            </trans-unit>
            <trans-unit resname="desc613" id="613">
                <source></source>
                <target>returns the properties of the group whose unique group ID number you pass in groupID</target>
            </trans-unit>
            <trans-unit resname="cmd614" id="614">
                <source></source>
                <target>Set group properties ( groupID ; name ; owner {; members} )  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc614" id="614">
                <source></source>
                <target>enables you to change and update the properties of an existing group whose unique group ID number you pass in groupID, or to add a new group</target>
            </trans-unit>
            <trans-unit resname="cmd615" id="615">
                <source></source>
                <target>DELETE USER ( userID )</target>
            </trans-unit>
            <trans-unit resname="desc615" id="615">
                <source></source>
                <target>deletes the user whose unique user ID number you pass in userID.</target>
            </trans-unit>
            <trans-unit resname="cmd616" id="616">
                <source></source>
                <target>Is user deleted ( userNumber ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc616" id="616">
                <source></source>
                <target>tests the user account whose unique user ID number you pass in userID.</target>
            </trans-unit>
            <trans-unit resname="cmd617" id="617">
                <source></source>
                <target>WEB START SERVER </target>
            </trans-unit>
            <trans-unit resname="desc617" id="617">
                <source></source>
                <target>starts the Web server of the 4D application on which it has been executed (4D or 4D Server)</target>
            </trans-unit>
            <trans-unit resname="cmd618" id="618">
                <source></source>
                <target>WEB STOP SERVER </target>
            </trans-unit>
            <trans-unit resname="desc618" id="618">
                <source></source>
                <target>stops the Web server of the 4D application on which it has been executed (4D ou 4D Server)</target>
            </trans-unit>
            <trans-unit resname="cmd619" id="619">
                <source></source>
                <target>WEB SEND FILE ( htmlFile )</target>
            </trans-unit>
            <trans-unit resname="desc619" id="619">
                <source></source>
                <target>sends, to the Web browser, the HTML page or the Web file stored in the document whose pathname you pass in htmlFile. </target>
            </trans-unit>
            <trans-unit resname="cmd621" id="621">
                <source></source>
                <target>Is a list ( list ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc621" id="621">
                <source></source>
                <target>returns TRUE if the value you pass in list is a valid reference to a hierarchical list.</target>
            </trans-unit>
            <trans-unit resname="cmd623" id="623">
                <source></source>
                <target>SET REAL COMPARISON LEVEL ( epsilon )</target>
            </trans-unit>
            <trans-unit resname="desc623" id="623">
                <source></source>
                <target>sets the epsilon value used by 4D to compare real values and expressions for equality.</target>
            </trans-unit>
            <trans-unit resname="cmd624" id="624">
                <source></source>
                <target>DELETE FROM LIST ( {* ;} list ; itemRef | * {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc624" id="624">
                <source></source>
                <target>deletes the item designated by the itemRef parameter of the list whose reference number or object name is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd625" id="625">
                <source></source>
                <target>INSERT IN LIST ( {* ;} list ; beforeItemRef | * ; itemText ; itemRef {; sublist ; expanded} )</target>
            </trans-unit>
            <trans-unit resname="desc625" id="625">
                <source></source>
                <target>inserts the item designated by the itemRef parameter in the list whose reference number or object name you pass in list.</target>
            </trans-unit>
            <trans-unit resname="cmd626" id="626">
                <source></source>
                <target>Copy list ( list ) -&gt; ListRef</target>
            </trans-unit>
            <trans-unit resname="desc626" id="626">
                <source></source>
                <target>duplicates the list whose reference number you pass in list, and returns the list reference number of the new list.</target>
            </trans-unit>
            <trans-unit resname="cmd627" id="627">
                <source></source>
                <target>Current form table  -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc627" id="627">
                <source></source>
                <target>returns the pointer to the table of the form being displayed or printed in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd628" id="628">
                <source></source>
                <target>OBJECT SET RGB COLORS ( {* ;} object ; foregroundColor {; backgroundColor {; altBackgrndColor}} )</target>
            </trans-unit>
            <trans-unit resname="desc628" id="628">
                <source></source>
                <target>changes the foreground and background colors of the objects specified by the object parameter and the optional * parameter. </target>
            </trans-unit>
            <trans-unit resname="cmd629" id="629">
                <source></source>
                <target>List item position ( {* ;} list ; itemRef ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc629" id="629">
                <source></source>
                <target>returns the position of the item whose item reference number is passed in itemRef, within the list whose list reference number or object name is passed in list. </target>
            </trans-unit>
            <trans-unit resname="cmd630" id="630">
                <source></source>
                <target>SELECT LIST ITEMS BY REFERENCE ( list ; itemRef {; refArray} )</target>
            </trans-unit>
            <trans-unit resname="desc630" id="630">
                <source></source>
                <target>selects the item(s) whose item reference number is passed in itemRef and, optionally, in refArray, within the list whose reference number is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd631" id="631">
                <source></source>
                <target>GET LIST ITEM PROPERTIES ( {* ;} list ; itemRef | * ; enterable {; styles {; icon {; color}}} )</target>
            </trans-unit>
            <trans-unit resname="desc631" id="631">
                <source></source>
                <target>returns the properties of the item designated by the itemRef parameterwithin the list whose list reference number or object name is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd632" id="632">
                <source></source>
                <target>GET LIST PROPERTIES ( list ; appearance {; icon {; lineHeight {; doubleClick {; multiSelections {; editable}}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc632" id="632">
                <source></source>
                <target>returns information about the list whose reference number you pass in list</target>
            </trans-unit>
            <trans-unit resname="cmd633" id="633">
                <source></source>
                <target>List item parent ( {* ;} list ; itemRef | * ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc633" id="633">
                <source></source>
                <target>returns the item reference number of a parent item.</target>
            </trans-unit>
            <trans-unit resname="cmd634" id="634">
                <source></source>
                <target>WEB SET ROOT FOLDER ( rootFolder )</target>
            </trans-unit>
            <trans-unit resname="desc634" id="634">
                <source></source>
                <target>used to modify the default root folder where 4D looks for the HTML files requested of the Web server.</target>
            </trans-unit>
            <trans-unit resname="cmd635" id="635">
                <source></source>
                <target>VARIABLE TO VARIABLE ( process ; dstVar ; srcVar {; dstVar2 ; srcVar2 ; ... ; dstVarN ; srcVarN} )</target>
            </trans-unit>
            <trans-unit resname="desc635" id="635">
                <source></source>
                <target>writes the dstVar process variables (dstVar2, etc.) of the destination process whose number is passed in process using the values of the variables srcVar1 srcVar2, etc.</target>
            </trans-unit>
            <trans-unit resname="cmd637" id="637">
                <source></source>
                <target>CHANGE LICENSES </target>
            </trans-unit>
            <trans-unit resname="desc637" id="637">
                <source></source>
                <target>displays the 4D License Manager dialog box</target>
            </trans-unit>
            <trans-unit resname="cmd638" id="638">
                <source></source>
                <target>Validate password ( userID ; password {; digest} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc638" id="638">
                <source></source>
                <target>returns True if the string passed in password is the password for the user account whose ID number or name is passed in userID.</target>
            </trans-unit>
            <trans-unit resname="cmd639" id="639">
                <source></source>
                <target>WEB SET HOME PAGE ( homePage )</target>
            </trans-unit>
            <trans-unit resname="desc639" id="639">
                <source></source>
                <target>allows you to modify the custom home page for the current Web process.</target>
            </trans-unit>
            <trans-unit resname="cmd640" id="640">
                <source></source>
                <target>CREATE SELECTION FROM ARRAY ( aTable ; recordArray {; selectionName} )</target>
            </trans-unit>
            <trans-unit resname="desc640" id="640">
                <source></source>
                <target>creates the named selection selectionName from an array of absolute record numbers recordArray from aTable or an array of Booleans recordArray</target>
            </trans-unit>
            <trans-unit resname="cmd641" id="641">
                <source></source>
                <target>CREATE SET FROM ARRAY ( aTable ; recordsArray {; setName} )</target>
            </trans-unit>
            <trans-unit resname="desc641" id="641">
                <source></source>
                <target>creates setName from an array of absolute record numbers recordsArray from aTable or an array of booleans recordsArray</target>
            </trans-unit>
            <trans-unit resname="cmd642" id="642">
                <source></source>
                <target>SET DATABASE PARAMETER ( {aTable ;} selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc642" id="642">
                <source></source>
                <target>allows you to modify various internal parameters of the 4D database.</target>
            </trans-unit>
            <trans-unit resname="cmd643" id="643">
                <source></source>
                <target>Get database parameter ( {aTable ;} selector {; stringValue} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc643" id="643">
                <source></source>
                <target>allows you to get the current value of a 4D database parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd644" id="644">
                <source></source>
                <target>QUERY WITH ARRAY ( targetField ; array )</target>
            </trans-unit>
            <trans-unit resname="desc644" id="644">
                <source></source>
                <target>searches all the records for which the value of targetField is equal, at least, to one of the values of the elements in array.</target>
            </trans-unit>
            <trans-unit resname="cmd645" id="645">
                <source></source>
                <target>SET TIMER ( tickCount )</target>
            </trans-unit>
            <trans-unit resname="desc645" id="645">
                <source></source>
                <target>activates the On Timer form event and sets, for the current form and process, the number of ticks elapsed between each On Timer form event. </target>
            </trans-unit>
            <trans-unit resname="cmd646" id="646">
                <source></source>
                <target>BOOLEAN ARRAY FROM SET ( booleanArr {; set} )</target>
            </trans-unit>
            <trans-unit resname="desc646" id="646">
                <source></source>
                <target>fills an array of Booleans indicating if each record in the table is or is not in set. </target>
            </trans-unit>
            <trans-unit resname="cmd647" id="647">
                <source></source>
                <target>LONGINT ARRAY FROM SELECTION ( aTable ; recordArray {; selection} )</target>
            </trans-unit>
            <trans-unit resname="desc647" id="647">
                <source></source>
                <target>fills the recordArray array with the (absolute) record numbers that are in selection.</target>
            </trans-unit>
            <trans-unit resname="cmd648" id="648">
                <source></source>
                <target>REGISTER CLIENT ( clientName {; period}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc648" id="648">
                <source></source>
                <target>“registers” a 4D client station with the name specified in clientName on 4D Server, so as to allow other clients or eventually 4D Server (by using stored methods) to execute methods on it by using the EXECUTE ON CLIENT command</target>
            </trans-unit>
            <trans-unit resname="cmd649" id="649">
                <source></source>
                <target>UNREGISTER CLIENT </target>
            </trans-unit>
            <trans-unit resname="desc649" id="649">
                <source></source>
                <target>“unregisters” a 4D client station.</target>
            </trans-unit>
            <trans-unit resname="cmd650" id="650">
                <source></source>
                <target>GET REGISTERED CLIENTS ( clientList ; methods )</target>
            </trans-unit>
            <trans-unit resname="desc650" id="650">
                <source></source>
                <target>fills two arrays with the list of clients who were “registered” and the list of each client’s “workload”</target>
            </trans-unit>
            <trans-unit resname="cmd651" id="651">
                <source></source>
                <target>EXECUTE ON CLIENT ( clientName ; methodName {; param}{; param2 ; ... ; paramN} )</target>
            </trans-unit>
            <trans-unit resname="desc651" id="651">
                <source></source>
                <target>forces the execution of the methodName method, with the parameters param1... paramN, if necessary, on the registered 4D Client whose name is clientName. </target>
            </trans-unit>
            <trans-unit resname="cmd652" id="652">
                <source></source>
                <target>Test semaphore ( semaphore ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc652" id="652">
                <source></source>
                <target>tests for the existence of a semaphore.</target>
            </trans-unit>
            <trans-unit resname="cmd653" id="653">
                <source></source>
                <target>Find in field ( targetField ; value ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc653" id="653">
                <source></source>
                <target>returns the number of the first record whose targetField field is equal to value.</target>
            </trans-unit>
            <trans-unit resname="cmd654" id="654">
                <source></source>
                <target>WEB SEND BLOB ( blob ; type )</target>
            </trans-unit>
            <trans-unit resname="desc654" id="654">
                <source></source>
                <target>allows you to send blob to the browser. </target>
            </trans-unit>
            <trans-unit resname="cmd655" id="655">
                <source></source>
                <target>Get edited text  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc655" id="655">
                <source></source>
                <target>retrieves the text as it is being entered in a form object</target>
            </trans-unit>
            <trans-unit resname="cmd656" id="656">
                <source></source>
                <target>HIGHLIGHT RECORDS ( {aTable }{;}{ setName {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc656" id="656">
                <source></source>
                <target>highlights records in a list form.</target>
            </trans-unit>
            <trans-unit resname="cmd658" id="658">
                <source></source>
                <target>WEB GET STATISTICS ( pages ; hits ; usage )</target>
            </trans-unit>
            <trans-unit resname="desc658" id="658">
                <source></source>
                <target>lets you get information about the most consulted pages loaded in the Web server’s cache</target>
            </trans-unit>
            <trans-unit resname="cmd659" id="659">
                <source></source>
                <target>WEB SEND HTTP REDIRECT ( url {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc659" id="659">
                <source></source>
                <target>allows you to transform a URL into another one. </target>
            </trans-unit>
            <trans-unit resname="cmd660" id="660">
                <source></source>
                <target>WEB SET HTTP HEADER ( header|fieldArray {; valueArray} )</target>
            </trans-unit>
            <trans-unit resname="desc660" id="660">
                <source></source>
                <target>allows you to set the fields in the HTTP header of the reply sent to the Web browser by 4D</target>
            </trans-unit>
            <trans-unit resname="cmd661" id="661">
                <source></source>
                <target>SET QUERY AND LOCK ( lock )</target>
            </trans-unit>
            <trans-unit resname="desc661" id="661">
                <source></source>
                <target>can be used to request the automatic locking of records found by all queries that follow the calling of this command in the current transaction. </target>
            </trans-unit>
            <trans-unit resname="cmd663" id="663">
                <source></source>
                <target>OBJECT GET COORDINATES ( {* ;} object ; left ; top ; right ; bottom )</target>
            </trans-unit>
            <trans-unit resname="desc663" id="663">
                <source></source>
                <target>returns the coordinates left, top, right and bottom (in points) in variables or fields of the object(s) of the current form defined by the parameters * and object.</target>
            </trans-unit>
            <trans-unit resname="cmd664" id="664">
                <source></source>
                <target>OBJECT MOVE ( {* ;} object ; moveH ; moveV {; resizeH {; resizeV {; *}}} )</target>
            </trans-unit>
            <trans-unit resname="desc664" id="664">
                <source></source>
                <target>allows you to move the object(s) in the current form, defined by the * and object parameters moveH pixels horizontally and moveV pixels vertically.</target>
            </trans-unit>
            <trans-unit resname="cmd665" id="665">
                <source></source>
                <target>IMPORT DATA ( fileName {; project {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc665" id="665">
                <source></source>
                <target>imports the data located in the fileName file.</target>
            </trans-unit>
            <trans-unit resname="cmd666" id="666">
                <source></source>
                <target>EXPORT DATA ( fileName {; project {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc666" id="666">
                <source></source>
                <target>exports data in the fileName file.</target>
            </trans-unit>
            <trans-unit resname="cmd667" id="667">
                <source></source>
                <target>LOG EVENT ( {outputType ;} message {; importance} )</target>
            </trans-unit>
            <trans-unit resname="desc667" id="667">
                <source></source>
                <target>sets up a customized system for recording internal events that occur during the use of your application.</target>
            </trans-unit>
            <trans-unit resname="cmd668" id="668">
                <source></source>
                <target>Is new record {( aTable )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc668" id="668">
                <source></source>
                <target>returns True when aTable’s current record is being created and has not yet been saved in the current process. </target>
            </trans-unit>
            <trans-unit resname="cmd669" id="669">
                <source></source>
                <target>Is record loaded {( aTable )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc669" id="669">
                <source></source>
                <target>returns True if aTable’s current record is loaded in the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd670" id="670">
                <source></source>
                <target>Select folder ( {message }{;}{ defaultPath {; options}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc670" id="670">
                <source></source>
                <target>displays a dialog box that allows you to manually select a folder and then retrieve the complete access path to that folder</target>
            </trans-unit>
            <trans-unit resname="cmd671" id="671">
                <source></source>
                <target>_o_PICTURE TO GIF ( pict ; blobGIF )</target>
            </trans-unit>
            <trans-unit resname="desc671" id="671">
                <source></source>
                <target>converts a PICT picture stored in a variable or in a 4D field into a GIF picture.</target>
            </trans-unit>
            <trans-unit resname="cmd672" id="672">
                <source></source>
                <target>Process aborted  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc672" id="672">
                <source></source>
                <target>returns True if the process in which it is called is about to be interrupted unexpectedly, which means that the execution of the command was unable to reach its “normal” completion</target>
            </trans-unit>
            <trans-unit resname="cmd673" id="673">
                <source></source>
                <target>OPEN URL ( path {; appName}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc673" id="673">
                <source></source>
                <target>opens the file or URL passed in the path parameter with the application indicated in appName (if any). </target>
            </trans-unit>
            <trans-unit resname="cmd674" id="674">
                <source></source>
                <target>FORM GET PROPERTIES ( {aTable ;} formName ; width ; height {; numPages {; fixedWidth {; fixedHeight {; title}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc674" id="674">
                <source></source>
                <target>returns the properties of the form formName.</target>
            </trans-unit>
            <trans-unit resname="cmd675" id="675">
                <source></source>
                <target>Open form window ( {aTable ;} formName {; type {; hPos {; vPos {; *}}}} ) -&gt; WinRef</target>
            </trans-unit>
            <trans-unit resname="desc675" id="675">
                <source></source>
                <target>opens a new window using the size and resizing properties of the form formName.</target>
            </trans-unit>
            <trans-unit resname="cmd676" id="676">
                <source></source>
                <target>Euro converter ( value ; fromCurrency ; toCurrency ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc676" id="676">
                <source></source>
                <target>converts any value from and to the different currencies belonging to “Euroland” and the Euro currency itself.</target>
            </trans-unit>
            <trans-unit resname="cmd677" id="677">
                <source></source>
                <target>WEB SEND TEXT ( htmlText {; type} )</target>
            </trans-unit>
            <trans-unit resname="desc677" id="677">
                <source></source>
                <target>directly sends HTML formatted text data.</target>
            </trans-unit>
            <trans-unit resname="cmd678" id="678">
                <source></source>
                <target>READ PICTURE FILE ( fileName ; picture {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc678" id="678">
                <source></source>
                <target>opens the picture saved in the fileName disk file and loads it in the picture 4D field or variable.</target>
            </trans-unit>
            <trans-unit resname="cmd679" id="679">
                <source></source>
                <target>CREATE THUMBNAIL ( source ; dest {; width {; height {; mode {; depth}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc679" id="679">
                <source></source>
                <target>returns a thumbnail from a given source picture. </target>
            </trans-unit>
            <trans-unit resname="cmd680" id="680">
                <source></source>
                <target>WRITE PICTURE FILE ( fileName ; picture {; codec} )</target>
            </trans-unit>
            <trans-unit resname="desc680" id="680">
                <source></source>
                <target>saves the picture passed in the picture parameter in the defined codec to disk.</target>
            </trans-unit>
            <trans-unit resname="cmd682" id="682">
                <source></source>
                <target>BLOB TO PICTURE ( pictureBlob ; picture {; codec} )</target>
            </trans-unit>
            <trans-unit resname="desc682" id="682">
                <source></source>
                <target>inserts a picture stored in a BLOB into a 4D picture variable or  field, regardless its original format.</target>
            </trans-unit>
            <trans-unit resname="cmd683" id="683">
                <source></source>
                <target>WEB GET VARIABLES ( nameArray ; valueArray )</target>
            </trans-unit>
            <trans-unit resname="desc683" id="683">
                <source></source>
                <target>fills the text arrays nameArray and valueArray with the variable names and values contained in the Web form “submitted” (i.e. sent to the Web server).</target>
            </trans-unit>
            <trans-unit resname="cmd684" id="684">
                <source></source>
                <target>Current method name  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc684" id="684">
                <source></source>
                <target>returns the method name where it has been invoked.</target>
            </trans-unit>
            <trans-unit resname="cmd685" id="685">
                <source></source>
                <target>GET FIELD ENTRY PROPERTIES ( fieldPtr|tableNum {; fieldNum}; list ; mandatory ; nonEnterable ; nonModifiable )</target>
            </trans-unit>
            <trans-unit resname="desc685" id="685">
                <source></source>
                <target>returns the data entry properties for the field specified by tableNum and fieldNum or by fieldPtr.</target>
            </trans-unit>
            <trans-unit resname="cmd686" id="686">
                <source></source>
                <target>GET RELATION PROPERTIES ( fieldPtr|tableNum {; fieldNum}; oneTable ; oneField {; choiceField {; autoOne {; autoMany}}} )</target>
            </trans-unit>
            <trans-unit resname="desc686" id="686">
                <source></source>
                <target>returns the properties of the relation (if any) which starts from the source field defined by tableNum and fieldNum or by fieldPtr.</target>
            </trans-unit>
            <trans-unit resname="cmd687" id="687">
                <source></source>
                <target>GET TABLE PROPERTIES ( tablePtr|tableNum ; invisible {; trigSaveNew {; trigSaveRec {; trigDelRec {; trigLoadRec}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc687" id="687">
                <source></source>
                <target>returns the properties for the table passed in tablePtr or tableNum.</target>
            </trans-unit>
            <trans-unit resname="cmd688" id="688">
                <source></source>
                <target>GENERATE ENCRYPTION KEYPAIR ( privKey ; pubKey {; length} )</target>
            </trans-unit>
            <trans-unit resname="desc688" id="688">
                <source></source>
                <target>generates a new pair of RSA keys.</target>
            </trans-unit>
            <trans-unit resname="cmd689" id="689">
                <source></source>
                <target>ENCRYPT BLOB ( toEncrypt ; sendPrivKey {; recipPubKey} )</target>
            </trans-unit>
            <trans-unit resname="desc689" id="689">
                <source></source>
                <target>encrypts the content of the toEncrypt BLOB with the sender’s private key sendPrivKey, as well as optionally the recipient’s public key recipPubKey.</target>
            </trans-unit>
            <trans-unit resname="cmd690" id="690">
                <source></source>
                <target>DECRYPT BLOB ( toDecrypt ; sendPubKey {; recipPrivKey} )</target>
            </trans-unit>
            <trans-unit resname="desc690" id="690">
                <source></source>
                <target>decrypts the content of the BLOB toDecrypt using the sender’s public key sendPubKey and, optionally, the recipient’s private key recipPrivKey.</target>
            </trans-unit>
            <trans-unit resname="cmd691" id="691">
                <source></source>
                <target>GENERATE CERTIFICATE REQUEST ( privKey ; certifRequest ; codeArray ; nameArray )</target>
            </trans-unit>
            <trans-unit resname="desc691" id="691">
                <source></source>
                <target>generates a certificate request at the PKCS format which can be directly used by certificate authorities such as Verisign(R) .</target>
            </trans-unit>
            <trans-unit resname="cmd692" id="692">
                <source></source>
                <target>PICTURE TO BLOB ( picture ; pictureBlob ; codec )</target>
            </trans-unit>
            <trans-unit resname="desc692" id="692">
                <source></source>
                <target>converts a picture stored in a 4D variable or field to another format and places the resulting picture in a BLOB.</target>
            </trans-unit>
            <trans-unit resname="cmd693" id="693">
                <source></source>
                <target>DELETE FOLDER ( folder {; deleteOption} )</target>
            </trans-unit>
            <trans-unit resname="desc693" id="693">
                <source></source>
                <target>deletes the folder whose name or full path has been passed in folder.</target>
            </trans-unit>
            <trans-unit resname="cmd694" id="694">
                <source></source>
                <target>CREATE ALIAS ( targetPath ; aliasPath )</target>
            </trans-unit>
            <trans-unit resname="desc694" id="694">
                <source></source>
                <target>creates an alias (named “shortcut” under Windows) for the target file or folder passed in targetPath.</target>
            </trans-unit>
            <trans-unit resname="cmd695" id="695">
                <source></source>
                <target>RESOLVE ALIAS ( aliasPath ; targetPath )</target>
            </trans-unit>
            <trans-unit resname="desc695" id="695">
                <source></source>
                <target>returns the full path to the target file or folder of the alias (named shortcut under Windows).</target>
            </trans-unit>
            <trans-unit resname="cmd696" id="696">
                <source></source>
                <target>GET SERIAL INFORMATION ( key ; user ; company ; connected ; maxUser )</target>
            </trans-unit>
            <trans-unit resname="desc696" id="696">
                <source></source>
                <target>returns various information about the 4D current version serialization.</target>
            </trans-unit>
            <trans-unit resname="cmd697" id="697">
                <source></source>
                <target>WEB GET HTTP HEADER ( header|fieldArray {; valueArray} )</target>
            </trans-unit>
            <trans-unit resname="desc697" id="697">
                <source></source>
                <target>returns either a string or two arrays, containing the HTTP header used for the currently processed request.</target>
            </trans-unit>
            <trans-unit resname="cmd698" id="698">
                <source></source>
                <target>WEB Is secured connection  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc698" id="698">
                <source></source>
                <target>returns a Boolean indicating if the 4D Web server connection was done in secured mode through TLS/SSL (the request starts with “https:” instead of “http:”).</target>
            </trans-unit>
            <trans-unit resname="cmd700" id="700">
                <source></source>
                <target>GET DOCUMENT ICON ( docPath ; icon {; size} )</target>
            </trans-unit>
            <trans-unit resname="desc700" id="700">
                <source></source>
                <target>returns, in the 4D picture variable or field icon, the icon of the document whose name or complete pathname is passed in docPath.</target>
            </trans-unit>
            <trans-unit resname="cmd702" id="702">
                <source></source>
                <target>Get printed height  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc702" id="702">
                <source></source>
                <target>returns the overall height (in pixels) of the section printed using the Print form command.</target>
            </trans-unit>
            <trans-unit resname="cmd703" id="703">
                <source></source>
                <target>GET PRINTABLE AREA ( height {; width} )</target>
            </trans-unit>
            <trans-unit resname="desc703" id="703">
                <source></source>
                <target>returns the size, in pixels, of the height and width parameters of the printable area.</target>
            </trans-unit>
            <trans-unit resname="cmd704" id="704">
                <source></source>
                <target>Method called on error  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc704" id="704">
                <source></source>
                <target>returns the name of the method installed by the ON ERR CALL command for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd705" id="705">
                <source></source>
                <target>Method called on event  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc705" id="705">
                <source></source>
                <target>returns the name of the method installed by the ON EVENT CALL command.</target>
            </trans-unit>
            <trans-unit resname="cmd706" id="706">
                <source></source>
                <target>OBJECT SET HORIZONTAL ALIGNMENT ( {* ;} object ; alignment )</target>
            </trans-unit>
            <trans-unit resname="desc706" id="706">
                <source></source>
                <target>allows you to set the type of horizontal alignment applied to the object(s) designated by the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd707" id="707">
                <source></source>
                <target>OBJECT Get horizontal alignment ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc707" id="707">
                <source></source>
                <target>returns a code indicating the type of horizontal alignment applied to the object designated by the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd708" id="708">
                <source></source>
                <target>Get print marker ( markNum ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc708" id="708">
                <source></source>
                <target>enables you to get the current position of a marker during printing. </target>
            </trans-unit>
            <trans-unit resname="cmd709" id="709">
                <source></source>
                <target>SET PRINT MARKER ( markNum ; position {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc709" id="709">
                <source></source>
                <target>enables the definition of the marker position during printing.</target>
            </trans-unit>
            <trans-unit resname="cmd710" id="710">
                <source></source>
                <target>SET PRINTABLE MARGIN ( left ; top ; right ; bottom )</target>
            </trans-unit>
            <trans-unit resname="desc710" id="710">
                <source></source>
                <target>sets the values of various printing margins by using the Print form, PRINT SELECTION and PRINT RECORD commands.</target>
            </trans-unit>
            <trans-unit resname="cmd711" id="711">
                <source></source>
                <target>GET PRINTABLE MARGIN ( left ; top ; right ; bottom )</target>
            </trans-unit>
            <trans-unit resname="desc711" id="711">
                <source></source>
                <target>returns the current values of the different margins defined using the Print form, PRINT SELECTION and PRINT RECORD commands.</target>
            </trans-unit>
            <trans-unit resname="cmd712" id="712">
                <source></source>
                <target>Right click  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc712" id="712">
                <source></source>
                <target>returns True if the right button of the mouse has been clicked.</target>
            </trans-unit>
            <trans-unit resname="cmd713" id="713">
                <source></source>
                <target>Contextual click  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc713" id="713">
                <source></source>
                <target>returns True if a contextual click has been made</target>
            </trans-unit>
            <trans-unit resname="cmd714" id="714">
                <source></source>
                <target>Is license available {( license )} -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc714" id="714">
                <source></source>
                <target>lets you find out the availability of a plug-in</target>
            </trans-unit>
            <trans-unit resname="cmd716" id="716">
                <source></source>
                <target>Is data file locked  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc716" id="716">
                <source></source>
                <target>returns True if the data file of the open database or at least one of its segments is locked — i.e. write protected.</target>
            </trans-unit>
            <trans-unit resname="cmd717" id="717">
                <source></source>
                <target>OBJECT GET BEST SIZE ( {* ;} object ; bestWidth ; bestHeight {; maxWidth} )</target>
            </trans-unit>
            <trans-unit resname="desc717" id="717">
                <source></source>
                <target>returns the bestWidth and bestHeight parameters, the “optimal” width and height of the form object designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd718" id="718">
                <source></source>
                <target>MULTI SORT ARRAY ( array {; sort}{; array2 ; sort2 ; ... ; arrayN ; sortN} )</target>
            </trans-unit>
            <trans-unit resname="desc718" id="718">
                <source></source>
                <target> enables you to carry out a multi-level sort on a set of arrays. </target>
            </trans-unit>
            <trans-unit resname="cmd719" id="719">
                <source></source>
                <target>DOM Parse XML source ( document {; validation {; dtd | schema}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc719" id="719">
                <source></source>
                <target>parses a document containing an XML structure and returns a reference for this document.</target>
            </trans-unit>
            <trans-unit resname="cmd720" id="720">
                <source></source>
                <target>DOM Parse XML variable ( variable {; validation {; dtd | schema}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc720" id="720">
                <source></source>
                <target>parses a BLOB or Text type variable containing an XML structure and returns a reference for this variable</target>
            </trans-unit>
            <trans-unit resname="cmd721" id="721">
                <source></source>
                <target>DOM Get XML information ( elementRef ; xmlInfo ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc721" id="721">
                <source></source>
                <target>retrieves diverse information about the XML element designated by elementRef. </target>
            </trans-unit>
            <trans-unit resname="cmd722" id="722">
                <source></source>
                <target>DOM CLOSE XML ( elementRef )</target>
            </trans-unit>
            <trans-unit resname="desc722" id="722">
                <source></source>
                <target>frees up the memory occupied by the XML object designated by elementRef.</target>
            </trans-unit>
            <trans-unit resname="cmd723" id="723">
                <source></source>
                <target>DOM Get first child XML element ( elementRef {; childElemName {; childElemValue}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc723" id="723">
                <source></source>
                <target>returns a reference to the first “child” of the XML element passed in elementRef. </target>
            </trans-unit>
            <trans-unit resname="cmd724" id="724">
                <source></source>
                <target>DOM Get next sibling XML element ( elementRef {; siblingElemName {; siblingElemValue}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc724" id="724">
                <source></source>
                <target>returns a reference to the next “sibling” of the XML element passed as reference</target>
            </trans-unit>
            <trans-unit resname="cmd725" id="725">
                <source></source>
                <target>DOM Get XML element ( elementRef ; elementName ; index ; elementValue ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc725" id="725">
                <source></source>
                <target>returns a reference to the “child” element dependent on the elementName and index parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd726" id="726">
                <source></source>
                <target>DOM Count XML elements ( elementRef ; elementName ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc726" id="726">
                <source></source>
                <target>returns the number of “child” elements dependent on the elementRef parent element and named elementName.</target>
            </trans-unit>
            <trans-unit resname="cmd727" id="727">
                <source></source>
                <target>DOM Count XML attributes ( elementRef ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc727" id="727">
                <source></source>
                <target>returns the number of XML attributes present in the XML element designated by elementRef.</target>
            </trans-unit>
            <trans-unit resname="cmd728" id="728">
                <source></source>
                <target>DOM GET XML ATTRIBUTE BY NAME ( elementRef ; attribName ; attribValue )</target>
            </trans-unit>
            <trans-unit resname="desc728" id="728">
                <source></source>
                <target>gets the value of an attribute specified by name. </target>
            </trans-unit>
            <trans-unit resname="cmd729" id="729">
                <source></source>
                <target>DOM GET XML ATTRIBUTE BY INDEX ( elementRef ; attribIndex ; attribName ; attribValue )</target>
            </trans-unit>
            <trans-unit resname="desc729" id="729">
                <source></source>
                <target>gets the name of an attribute specified by its index number as well as its value. </target>
            </trans-unit>
            <trans-unit resname="cmd730" id="730">
                <source></source>
                <target>DOM GET XML ELEMENT NAME ( elementRef ; elementName )</target>
            </trans-unit>
            <trans-unit resname="desc730" id="730">
                <source></source>
                <target>returns, in the elementName parameter, the name of the XML element designated by elementRef</target>
            </trans-unit>
            <trans-unit resname="cmd731" id="731">
                <source></source>
                <target>DOM GET XML ELEMENT VALUE ( elementRef ; elementValue {; cDATA} )</target>
            </trans-unit>
            <trans-unit resname="desc731" id="731">
                <source></source>
                <target>returns, in the elementValue parameter, the value of the XML element designated by elementRef</target>
            </trans-unit>
            <trans-unit resname="cmd732" id="732">
                <source></source>
                <target>XML GET ERROR ( elementRef ; errorText {; row {; column}} ) </target>
            </trans-unit>
            <trans-unit resname="desc732" id="732">
                <source></source>
                <target>returns, in the errorText parameter, a description of the error encountered when processing the XML element designated by the elementRef parameter</target>
            </trans-unit>
            <trans-unit resname="cmd733" id="733">
                <source></source>
                <target>SET PRINT OPTION ( option ; value1 {; value2} )</target>
            </trans-unit>
            <trans-unit resname="desc733" id="733">
                <source></source>
                <target>used to modify, by programming, the value of a print option.</target>
            </trans-unit>
            <trans-unit resname="cmd734" id="734">
                <source></source>
                <target>GET PRINT OPTION ( option ; value1 {; value2} )</target>
            </trans-unit>
            <trans-unit resname="desc734" id="734">
                <source></source>
                <target>returns the current value(s) of a print option</target>
            </trans-unit>
            <trans-unit resname="cmd735" id="735">
                <source></source>
                <target>QR New offscreen area  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc735" id="735">
                <source></source>
                <target>creates a new Quick Report offscreen area and returns its reference.</target>
            </trans-unit>
            <trans-unit resname="cmd738" id="738">
                <source></source>
                <target>QR SET REPORT KIND ( area ; type )</target>
            </trans-unit>
            <trans-unit resname="desc738" id="738">
                <source></source>
                <target>sets the report type for the area whose reference was passed in area.</target>
            </trans-unit>
            <trans-unit resname="cmd745" id="745">
                <source></source>
                <target>QR SET DESTINATION ( area ; type {; specifics} )</target>
            </trans-unit>
            <trans-unit resname="desc745" id="745">
                <source></source>
                <target>sets the output type of the report for the area whose reference was passed in area.</target>
            </trans-unit>
            <trans-unit resname="cmd746" id="746">
                <source></source>
                <target>QR RUN ( area )</target>
            </trans-unit>
            <trans-unit resname="desc746" id="746">
                <source></source>
                <target>executes the report area whose reference was passed as parameter with the Quick Report current settings, including the output type.</target>
            </trans-unit>
            <trans-unit resname="cmd747" id="747">
                <source></source>
                <target>QR Get drop column ( area ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc747" id="747">
                <source></source>
                <target>returns a value depending on where the drop was performed</target>
            </trans-unit>
            <trans-unit resname="cmd748" id="748">
                <source></source>
                <target>QR INSERT COLUMN ( area ; colNumber ; object )</target>
            </trans-unit>
            <trans-unit resname="desc748" id="748">
                <source></source>
                <target>inserts or creates a column at the specified position</target>
            </trans-unit>
            <trans-unit resname="cmd749" id="749">
                <source></source>
                <target>QR DELETE COLUMN ( area ; colNumber )</target>
            </trans-unit>
            <trans-unit resname="desc749" id="749">
                <source></source>
                <target>deletes the column in area whose number was passed in colNumber.</target>
            </trans-unit>
            <trans-unit resname="cmd750" id="750">
                <source></source>
                <target>QR SET HTML TEMPLATE ( area ; template )</target>
            </trans-unit>
            <trans-unit resname="desc750" id="750">
                <source></source>
                <target>sets the HTML template currently used for the Quick Report area</target>
            </trans-unit>
            <trans-unit resname="cmd751" id="751">
                <source></source>
                <target>QR Get HTML template ( area ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc751" id="751">
                <source></source>
                <target>returns the HTML template currently used for the Quick Report area.</target>
            </trans-unit>
            <trans-unit resname="cmd752" id="752">
                <source></source>
                <target>QR SET SORTS ( area ; aColumns {; aOrders} )</target>
            </trans-unit>
            <trans-unit resname="desc752" id="752">
                <source></source>
                <target>sets the sort orders for the columns in the report whose reference is passed in area.</target>
            </trans-unit>
            <trans-unit resname="cmd753" id="753">
                <source></source>
                <target>QR GET SORTS ( area ; aColumns ; aOrders )</target>
            </trans-unit>
            <trans-unit resname="desc753" id="753">
                <source></source>
                <target>used to find out the sort order of each column of the quick report whose reference is passed in area</target>
            </trans-unit>
            <trans-unit resname="cmd754" id="754">
                <source></source>
                <target>QR DELETE OFFSCREEN AREA ( area )</target>
            </trans-unit>
            <trans-unit resname="desc754" id="754">
                <source></source>
                <target>deletes in memory the Quick Report offscreen area whose reference was passed as parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd755" id="755">
                <source></source>
                <target>QR Get report kind ( area ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc755" id="755">
                <source></source>
                <target>retrieves the report type for the area whose reference was passed in area.</target>
            </trans-unit>
            <trans-unit resname="cmd756" id="756">
                <source></source>
                <target>QR GET DESTINATION ( area ; type {; specifics} )</target>
            </trans-unit>
            <trans-unit resname="desc756" id="756">
                <source></source>
                <target>retrieves the output type of the report for the area whose reference was passed in area. </target>
            </trans-unit>
            <trans-unit resname="cmd757" id="757">
                <source></source>
                <target>QR SET REPORT TABLE ( area ; aTable )</target>
            </trans-unit>
            <trans-unit resname="desc757" id="757">
                <source></source>
                <target>sets the current table for the report area whose reference was passed in area to the table whose number was passed in aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd758" id="758">
                <source></source>
                <target>QR Get report table ( area ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc758" id="758">
                <source></source>
                <target>returns the current table number for the report area whose reference was passed in area.</target>
            </trans-unit>
            <trans-unit resname="cmd759" id="759">
                <source></source>
                <target>QR SET TEXT PROPERTY ( area ; colNum ; rowNum ; property ; value )</target>
            </trans-unit>
            <trans-unit resname="desc759" id="759">
                <source></source>
                <target>sets the text attributes for the cell determined by colNum and rowNum.</target>
            </trans-unit>
            <trans-unit resname="cmd760" id="760">
                <source></source>
                <target>QR Get text property ( area ; colNum ; rowNum ; property ) -&gt; Longint, String</target>
            </trans-unit>
            <trans-unit resname="desc760" id="760">
                <source></source>
                <target>returns the property value of the text attributes for the cell determined by colNum and RowNum.</target>
            </trans-unit>
            <trans-unit resname="cmd761" id="761">
                <source></source>
                <target>QR SET TOTALS SPACING ( area ; subtotal ; value )</target>
            </trans-unit>
            <trans-unit resname="desc761" id="761">
                <source></source>
                <target>sets a space below a subtotal row.</target>
            </trans-unit>
            <trans-unit resname="cmd762" id="762">
                <source></source>
                <target>QR GET TOTALS SPACING ( area ; subtotal ; value )</target>
            </trans-unit>
            <trans-unit resname="desc762" id="762">
                <source></source>
                <target>retrieves a space below a subtotal row. It applies only to the list mode.</target>
            </trans-unit>
            <trans-unit resname="cmd763" id="763">
                <source></source>
                <target>QR SET INFO ROW ( area ; row ; hide )</target>
            </trans-unit>
            <trans-unit resname="desc763" id="763">
                <source></source>
                <target>shows/hides the row whose reference was passed in row.</target>
            </trans-unit>
            <trans-unit resname="cmd764" id="764">
                <source></source>
                <target>QR Count columns ( area ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc764" id="764">
                <source></source>
                <target>returns the number of columns present in the Quick Report area.</target>
            </trans-unit>
            <trans-unit resname="cmd765" id="765">
                <source></source>
                <target>QR SET INFO COLUMN ( area ; colNum ; title ; object ; hide ; size ; repeatedValue ; displayFormat )</target>
            </trans-unit>
            <trans-unit resname="desc765" id="765">
                <source></source>
                <target>sets the parameters of an existing column. </target>
            </trans-unit>
            <trans-unit resname="cmd766" id="766">
                <source></source>
                <target>QR GET INFO COLUMN ( area ; colNum ; title ; object ; hide ; size ; repeatedValue ; displayFormat {; resultVar} )</target>
            </trans-unit>
            <trans-unit resname="desc766" id="766">
                <source></source>
                <target>retrieves the parameters of an existing column.</target>
            </trans-unit>
            <trans-unit resname="cmd767" id="767">
                <source></source>
                <target>QR SET TOTALS DATA ( area ; colNum ; breakNum ; operator | value )</target>
            </trans-unit>
            <trans-unit resname="desc767" id="767">
                <source></source>
                <target>allows you to set the details of a specific break row (List mode) or the contents of a specific cell (Cross-table Mode)</target>
            </trans-unit>
            <trans-unit resname="cmd768" id="768">
                <source></source>
                <target>QR GET TOTALS DATA ( area ; colNum ; breakNum ; operator ; text )</target>
            </trans-unit>
            <trans-unit resname="desc768" id="768">
                <source></source>
                <target>allows you to retrieve the details of a specific break (List mode) or the details of a specific cell (Cross-table mode)</target>
            </trans-unit>
            <trans-unit resname="cmd769" id="769">
                <source></source>
                <target>QR Get info row ( area ; row ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc769" id="769">
                <source></source>
                <target>retrieves the display status of the row whose reference was passed in row.</target>
            </trans-unit>
            <trans-unit resname="cmd770" id="770">
                <source></source>
                <target>QR REPORT TO BLOB ( area ; blob )</target>
            </trans-unit>
            <trans-unit resname="desc770" id="770">
                <source></source>
                <target>places the report whose reference was passed in area in a BLOB (variable or field).</target>
            </trans-unit>
            <trans-unit resname="cmd771" id="771">
                <source></source>
                <target>QR BLOB TO REPORT ( area ; blob )</target>
            </trans-unit>
            <trans-unit resname="desc771" id="771">
                <source></source>
                <target>places the report contained in blob in the Quick Report area passed in area. </target>
            </trans-unit>
            <trans-unit resname="cmd772" id="772">
                <source></source>
                <target>QR SET DOCUMENT PROPERTY ( area ; property ; value )</target>
            </trans-unit>
            <trans-unit resname="desc772" id="772">
                <source></source>
                <target>displays the printing dialog or sets the unit used for the document.</target>
            </trans-unit>
            <trans-unit resname="cmd773" id="773">
                <source></source>
                <target>QR Get document property ( area ; property ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc773" id="773">
                <source></source>
                <target>retrieves the display status for the print dialog box or the unit used for the document that are present in area.</target>
            </trans-unit>
            <trans-unit resname="cmd774" id="774">
                <source></source>
                <target>QR SET HEADER AND FOOTER ( area ; selector ; leftTitle ; centerTitle ; rightTitle ; height {; picture {; pictAlignment}} )</target>
            </trans-unit>
            <trans-unit resname="desc774" id="774">
                <source></source>
                <target>sets the contents and size of the header or footer.</target>
            </trans-unit>
            <trans-unit resname="cmd775" id="775">
                <source></source>
                <target>QR GET HEADER AND FOOTER ( area ; selector ; leftTitle ; centerTitle ; rightTitle ; height {; picture {; pictAlignment}} )</target>
            </trans-unit>
            <trans-unit resname="desc775" id="775">
                <source></source>
                <target>retrieves the contents and size of the header or footer</target>
            </trans-unit>
            <trans-unit resname="cmd776" id="776">
                <source></source>
                <target>QR Find column ( area ; expression ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc776" id="776">
                <source></source>
                <target>returns the number of the first column whose contents match the expression passed in parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd777" id="777">
                <source></source>
                <target>WEB SERVICE SET PARAMETER ( name ; value {; soapType} )</target>
            </trans-unit>
            <trans-unit resname="desc777" id="777">
                <source></source>
                <target>enables the definition of a parameter used for a client SOAP request</target>
            </trans-unit>
            <trans-unit resname="cmd778" id="778">
                <source></source>
                <target>WEB SERVICE CALL ( accessURL ; soapAction ; methodName ; nameSpace {; complexType {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc778" id="778">
                <source></source>
                <target>calls a Web Service by sending an HTTP request</target>
            </trans-unit>
            <trans-unit resname="cmd779" id="779">
                <source></source>
                <target>WEB SERVICE GET RESULT ( returnValue {; returnName {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc779" id="779">
                <source></source>
                <target>retrieves a value sent back by the Web Service as a result of the processing performed. </target>
            </trans-unit>
            <trans-unit resname="cmd780" id="780">
                <source></source>
                <target>WEB SERVICE Get info ( infoType ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc780" id="780">
                <source></source>
                <target>returns information about any error generated during the execution of the last SOAP request sent to a remote Web Service</target>
            </trans-unit>
            <trans-unit resname="cmd781" id="781">
                <source></source>
                <target>SOAP SEND FAULT ( faultType ; description )</target>
            </trans-unit>
            <trans-unit resname="desc781" id="781">
                <source></source>
                <target>returns an error to a SOAP client indicating the origin of the fault: client or server</target>
            </trans-unit>
            <trans-unit resname="cmd782" id="782">
                <source></source>
                <target>SOAP DECLARATION ( variable ; type ; input_output {; alias} ) </target>
            </trans-unit>
            <trans-unit resname="desc782" id="782">
                <source></source>
                <target>explicitly declares the type of parameters used in a 4D method published as a Web Service.</target>
            </trans-unit>
            <trans-unit resname="cmd783" id="783">
                <source></source>
                <target>SOAP Request  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc783" id="783">
                <source></source>
                <target>returns True if the code being executed is part of a SOAP request. </target>
            </trans-unit>
            <trans-unit resname="cmd784" id="784">
                <source></source>
                <target>SOAP Get info ( infoNum ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc784" id="784">
                <source></source>
                <target>retrieves, in the form of a character string, the different types of information concerning a SOAP request.</target>
            </trans-unit>
            <trans-unit resname="cmd785" id="785">
                <source></source>
                <target>PRINT OPTION VALUES ( option ; namesArray {; info1Array {; info2Array}} ) </target>
            </trans-unit>
            <trans-unit resname="desc785" id="785">
                <source></source>
                <target>returns, in namesArray, a list of value names available for the print option defined</target>
            </trans-unit>
            <trans-unit resname="cmd786" id="786">
                <source></source>
                <target>WEB SERVICE AUTHENTICATE ( name ; password {; authMethod} {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc786" id="786">
                <source></source>
                <target>enables the use of Web Services requiring authentication of the client application (simple authentication)</target>
            </trans-unit>
            <trans-unit resname="cmd787" id="787">
                <source></source>
                <target>SET CURRENT PRINTER ( printerName )</target>
            </trans-unit>
            <trans-unit resname="desc787" id="787">
                <source></source>
                <target>designates the printer to be used for printing with the current 4D application.</target>
            </trans-unit>
            <trans-unit resname="cmd788" id="788">
                <source></source>
                <target>Get current printer  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc788" id="788">
                <source></source>
                <target>returns the name of the current printer defined in the 4D application.</target>
            </trans-unit>
            <trans-unit resname="cmd789" id="789">
                <source></source>
                <target>PRINTERS LIST ( namesArray {; altNamesArray {; modelsArray}} )</target>
            </trans-unit>
            <trans-unit resname="desc789" id="789">
                <source></source>
                <target>fills in the array(s) passed as parameter(s) with the names as well as, optionally, the locations or custom names and models of the available printers for the machine. </target>
            </trans-unit>
            <trans-unit resname="cmd790" id="790">
                <source></source>
                <target>QR ON COMMAND ( area ; methodName )</target>
            </trans-unit>
            <trans-unit resname="desc790" id="790">
                <source></source>
                <target>executes the 4D method passed in methodName when a Quick Report command is invoked by the user, by the selection of a menu command or by a click on a button.</target>
            </trans-unit>
            <trans-unit resname="cmd791" id="791">
                <source></source>
                <target>QR EXECUTE COMMAND ( area ; command )</target>
            </trans-unit>
            <trans-unit resname="desc791" id="791">
                <source></source>
                <target>executes the toolbar button command whose reference was passed in command.</target>
            </trans-unit>
            <trans-unit resname="cmd792" id="792">
                <source></source>
                <target>QR Get command status ( area ; command {; value} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc792" id="792">
                <source></source>
                <target>returns 0 if the command is disabled or 1 if it is enabled.</target>
            </trans-unit>
            <trans-unit resname="cmd793" id="793">
                <source></source>
                <target>QR GET SELECTION ( area ; left ; top {; right {; bottom}} )</target>
            </trans-unit>
            <trans-unit resname="desc793" id="793">
                <source></source>
                <target>returns the coordinates of the cell that is selected.</target>
            </trans-unit>
            <trans-unit resname="cmd794" id="794">
                <source></source>
                <target>QR SET SELECTION ( area ; left ; top {; right {; bottom}} )</target>
            </trans-unit>
            <trans-unit resname="desc794" id="794">
                <source></source>
                <target>highlights a cell, a row, a column or the entire area as you would with a mouse click. It also lets you deselect the current selection.</target>
            </trans-unit>
            <trans-unit resname="cmd795" id="795">
                <source></source>
                <target>QR Get area property ( area ; property ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc795" id="795">
                <source></source>
                <target>returns 0 if the interface element (toolbar or menu bar) passed in property is not displayed; otherwise, it returns 1.</target>
            </trans-unit>
            <trans-unit resname="cmd796" id="796">
                <source></source>
                <target>QR SET AREA PROPERTY ( area ; property ; value )</target>
            </trans-unit>
            <trans-unit resname="desc796" id="796">
                <source></source>
                <target>shows or hides the interface element (toolbar or menu bar) whose reference is passed in property.</target>
            </trans-unit>
            <trans-unit resname="cmd797" id="797">
                <source></source>
                <target>QR SET BORDERS ( area ; column ; row ; border ; line {; color} )</target>
            </trans-unit>
            <trans-unit resname="desc797" id="797">
                <source></source>
                <target>sets the border style for a given cell.</target>
            </trans-unit>
            <trans-unit resname="cmd798" id="798">
                <source></source>
                <target>QR GET BORDERS ( area ; column ; row ; border ; line {; color} )</target>
            </trans-unit>
            <trans-unit resname="desc798" id="798">
                <source></source>
                <target>allows you to retrieve the border style for a border of a given cell.</target>
            </trans-unit>
            <trans-unit resname="cmd799" id="799">
                <source></source>
                <target>CHECK LOG FILE </target>
            </trans-unit>
            <trans-unit resname="desc799" id="799">
                <source></source>
                <target>displays the dialog box for viewing the current log file of the database (which can also be accessed via the Maintenance Security Center window)</target>
            </trans-unit>
            <trans-unit resname="cmd803" id="803">
                <source></source>
                <target>GET TABLE TITLES ( tableTitles ; tableNums )</target>
            </trans-unit>
            <trans-unit resname="desc803" id="803">
                <source></source>
                <target>fills the tableTitles and tableNums arrays with the names and numbers of database tables defined in the Structure window or using the SET TABLE TITLES command.</target>
            </trans-unit>
            <trans-unit resname="cmd804" id="804">
                <source></source>
                <target>GET FIELD TITLES ( aTable ; fieldTitles ; fieldNums )</target>
            </trans-unit>
            <trans-unit resname="desc804" id="804">
                <source></source>
                <target>fills the fieldTitles and fieldNums arrays with the names and numbers of database fields for the desired aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd805" id="805">
                <source></source>
                <target>SET ALLOWED METHODS ( methodsArray )</target>
            </trans-unit>
            <trans-unit resname="desc805" id="805">
                <source></source>
                <target>designates the project methods that can be called directly from the application</target>
            </trans-unit>
            <trans-unit resname="cmd806" id="806">
                <source></source>
                <target>EDIT FORMULA ( aTable ; formula )</target>
            </trans-unit>
            <trans-unit resname="desc806" id="806">
                <source></source>
                <target>displays the Formula editor in order to let the user write or modify a formula.</target>
            </trans-unit>
            <trans-unit resname="cmd807" id="807">
                <source></source>
                <target>_o_EDIT FORM ( aTable ; form {; userForm {; library}} ) </target>
            </trans-unit>
            <trans-unit resname="desc807" id="807">
                <source></source>
                <target>opens the table form set using the aTable, form and the optional userForm parameters in the User form editor</target>
            </trans-unit>
            <trans-unit resname="cmd808" id="808">
                <source></source>
                <target>_o_CREATE USER FORM ( aTable ; form ; userForm )</target>
            </trans-unit>
            <trans-unit resname="desc808" id="808">
                <source></source>
                <target>duplicates the 4D table form whose table and name are passed as parameters and creates a new user form named userForm. </target>
            </trans-unit>
            <trans-unit resname="cmd809" id="809">
                <source></source>
                <target>_o_LIST USER FORMS ( aTable ; form ; userFormArray )</target>
            </trans-unit>
            <trans-unit resname="desc809" id="809">
                <source></source>
                <target>fills the userFormArray array with the names of user forms coming from the developer form (table form) set in the table and form parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd810" id="810">
                <source></source>
                <target>_o_DELETE USER FORM ( aTable ; form ; userForm )</target>
            </trans-unit>
            <trans-unit resname="desc810" id="810">
                <source></source>
                <target>allows you to remove the user form set using the aTable, form and userForm parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd811" id="811">
                <source></source>
                <target>LAUNCH EXTERNAL PROCESS ( fileName {; inputStream {; outputStream {; errorStream}}}{; pid} )</target>
            </trans-unit>
            <trans-unit resname="desc811" id="811">
                <source></source>
                <target>launches an external process from 4D under macOS and Windows. </target>
            </trans-unit>
            <trans-unit resname="cmd812" id="812">
                <source></source>
                <target>SET ENVIRONMENT VARIABLE ( varName ; varValue )</target>
            </trans-unit>
            <trans-unit resname="desc812" id="812">
                <source></source>
                <target>allows you to set the value of an environment variable under macOS and Windows.</target>
            </trans-unit>
            <trans-unit resname="cmd814" id="814">
                <source></source>
                <target>WEB GET HTTP BODY ( body )</target>
            </trans-unit>
            <trans-unit resname="desc814" id="814">
                <source></source>
                <target>returns the body of the HTTP request being processed</target>
            </trans-unit>
            <trans-unit resname="cmd815" id="815">
                <source></source>
                <target>WEB SEND RAW DATA ( data {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc815" id="815">
                <source></source>
                <target>lets the 4D Web server send “raw” HTTP data, which can be chunked. </target>
            </trans-unit>
            <trans-unit resname="cmd816" id="816">
                <source></source>
                <target>PROCESS 4D TAGS ( inputTemplate ; outputResult {; param}{; param2 ; ... ; paramN} )</target>
            </trans-unit>
            <trans-unit resname="desc816" id="816">
                <source></source>
                <target>causes the processing of 4D transformation tags contained in the inputTemplate parameter (field or variable of the BLOB or Text type) while (optionally) inserting value(s) using the param parameters and returns the result in outputResult.</target>
            </trans-unit>
            <trans-unit resname="cmd817" id="817">
                <source></source>
                <target>SQL LOGIN {( dataEntry ; userName ; password ; * )}</target>
            </trans-unit>
            <trans-unit resname="desc817" id="817">
                <source></source>
                <target>allows you to connect to an SQL data source specified in the dataEntry parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd818" id="818">
                <source></source>
                <target>SQL SET OPTION ( option ; value )</target>
            </trans-unit>
            <trans-unit resname="desc818" id="818">
                <source></source>
                <target>modifies the value of the option passed in option.  </target>
            </trans-unit>
            <trans-unit resname="cmd819" id="819">
                <source></source>
                <target>SQL GET OPTION ( option ; value )</target>
            </trans-unit>
            <trans-unit resname="desc819" id="819">
                <source></source>
                <target>returns the current value of the option passed in option.</target>
            </trans-unit>
            <trans-unit resname="cmd820" id="820">
                <source></source>
                <target>SQL EXECUTE ( sqlStatement {; boundObj}{; boundObj2 ; ... ; boundObjN} ) </target>
            </trans-unit>
            <trans-unit resname="desc820" id="820">
                <source></source>
                <target>executes an SQL command and binds the result to 4D objects (arrays, variables or fields)</target>
            </trans-unit>
            <trans-unit resname="cmd821" id="821">
                <source></source>
                <target>SQL End selection  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc821" id="821">
                <source></source>
                <target>used to determine if the boundaries of the result set have been reached. </target>
            </trans-unit>
            <trans-unit resname="cmd822" id="822">
                <source></source>
                <target>SQL LOAD RECORD {( numRecords )}</target>
            </trans-unit>
            <trans-unit resname="desc822" id="822">
                <source></source>
                <target>retrieves one or more record(s) in 4D coming from the data source open in the current connection.</target>
            </trans-unit>
            <trans-unit resname="cmd823" id="823">
                <source></source>
                <target>SQL SET PARAMETER ( object ; paramType )</target>
            </trans-unit>
            <trans-unit resname="desc823" id="823">
                <source></source>
                <target>allows the use of a 4D variable, array or field value in SQL requests.</target>
            </trans-unit>
            <trans-unit resname="cmd824" id="824">
                <source></source>
                <target>SQL CANCEL LOAD </target>
            </trans-unit>
            <trans-unit resname="desc824" id="824">
                <source></source>
                <target>ends the current SELECT request and initializes the parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd825" id="825">
                <source></source>
                <target>SQL GET LAST ERROR ( errCode ; errText ; errODBC ; errSQLServer )</target>
            </trans-unit>
            <trans-unit resname="desc825" id="825">
                <source></source>
                <target>returns information related to the last error encountered during the execution of an ODBC command. </target>
            </trans-unit>
            <trans-unit resname="cmd826" id="826">
                <source></source>
                <target>Get default user  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc826" id="826">
                <source></source>
                <target>returns the unique user ID of the user set as &amp;ldquo;Default user&amp;rdquo; in the database Settings dialog box</target>
            </trans-unit>
            <trans-unit resname="cmd827" id="827">
                <source></source>
                <target>Current form window  -&gt; WinRef</target>
            </trans-unit>
            <trans-unit resname="desc827" id="827">
                <source></source>
                <target>returns the reference of the current form window.</target>
            </trans-unit>
            <trans-unit resname="cmd829" id="829">
                <source></source>
                <target>LISTBOX INSERT COLUMN ( {* ;} object ; colPosition ; colName ; colVariable ; headerName ; headerVar {; footerName ; footerVar} ) </target>
            </trans-unit>
            <trans-unit resname="desc829" id="829">
                <source></source>
                <target>inserts a column in the list box set by the object and * parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd830" id="830">
                <source></source>
                <target>LISTBOX DELETE COLUMN ( {* ;} object ; colPosition {; number} ) </target>
            </trans-unit>
            <trans-unit resname="desc830" id="830">
                <source></source>
                <target>removes one or more columns (visible or invisible) in the list box set in the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd831" id="831">
                <source></source>
                <target>LISTBOX Get number of columns ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc831" id="831">
                <source></source>
                <target>returns the total number of columns (visible or invisible) present in the list box set in the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd832" id="832">
                <source></source>
                <target>LISTBOX GET ARRAYS ( {* ;} object ; arrColNames ; arrHeaderNames ; arrColVars ; arrHeaderVars ; arrColsVisible ; arrStyles {; arrFooterNames ; arrFooterVars} ) </target>
            </trans-unit>
            <trans-unit resname="desc832" id="832">
                <source></source>
                <target>returns a set of synchronized arrays providing information on each column (visible or invisible) in the list box set in the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd833" id="833">
                <source></source>
                <target>LISTBOX SET COLUMN WIDTH ( {* ;} object ; width {; minWidth {; maxWidth}} )</target>
            </trans-unit>
            <trans-unit resname="desc833" id="833">
                <source></source>
                <target>allows you to modify through programming the width of one or all column(s) of the object (list box, column or header) set using the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd834" id="834">
                <source></source>
                <target>LISTBOX Get column width ( {* ;} object {; minWidth {; maxWidth}} )  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc834" id="834">
                <source></source>
                <target>returns the width (in pixels) of the column set in the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd835" id="835">
                <source></source>
                <target>LISTBOX SET ROWS HEIGHT ( {* ;} object ; height {; unit} ) </target>
            </trans-unit>
            <trans-unit resname="desc835" id="835">
                <source></source>
                <target>allows you to modify by programming the row height in the list box object set using the object and * parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd836" id="836">
                <source></source>
                <target>LISTBOX Get rows height ( {* ;} object {; unit} ) -&gt; Integer</target>
            </trans-unit>
            <trans-unit resname="desc836" id="836">
                <source></source>
                <target>returns the current row height for the list box object set using the object and * parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd837" id="837">
                <source></source>
                <target>LISTBOX MOVED ROW NUMBER ( {* ;} object ; oldPosition ; newPosition )</target>
            </trans-unit>
            <trans-unit resname="desc837" id="837">
                <source></source>
                <target>returns two numbers in oldPosition and newPosition indicating respectively the previous position and the new position of the row moved in the list box, specified by the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd841" id="841">
                <source></source>
                <target>LISTBOX SET GRID ( {* ;} object ; horizontal ; vertical )</target>
            </trans-unit>
            <trans-unit resname="desc841" id="841">
                <source></source>
                <target>allows you to display or hide the horizontal and/or vertical grid lines that make up the grid in the list box object set using the object and * parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd842" id="842">
                <source></source>
                <target>LISTBOX SET GRID COLOR ( {* ;} object ; color ; horizontal ; vertical )</target>
            </trans-unit>
            <trans-unit resname="desc842" id="842">
                <source></source>
                <target>allows you to modify the color of the grid in the list box object set using the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd843" id="843">
                <source></source>
                <target>OBJECT SET SCROLLBAR ( {* ;} object ; horizontal ; vertical )</target>
            </trans-unit>
            <trans-unit resname="desc843" id="843">
                <source></source>
                <target>allows you to display or hide the horizontal and/or vertical scrollbars in the object set using the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd844" id="844">
                <source></source>
                <target>LISTBOX MOVED COLUMN NUMBER ( {* ;} object ; oldPosition ; newPosition )</target>
            </trans-unit>
            <trans-unit resname="desc844" id="844">
                <source></source>
                <target>returns two numbers in oldPosition and newPosition indicating respectively the previous position and the new position of the column moved in the list box, specified by the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd845" id="845">
                <source></source>
                <target>SET PLUGIN ACCESS ( plugIn ; group )</target>
            </trans-unit>
            <trans-unit resname="desc845" id="845">
                <source></source>
                <target>sets, by programming, the user group allowed to use each “serialized” plug-in that is installed in the database</target>
            </trans-unit>
            <trans-unit resname="cmd846" id="846">
                <source></source>
                <target>Get plugin access ( plugIn ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc846" id="846">
                <source></source>
                <target>returns the name of the user group authorized to use the plug-in whose number was passed in the plugIn parameter</target>
            </trans-unit>
            <trans-unit resname="cmd847" id="847">
                <source></source>
                <target>PLUGIN LIST ( numbersArray ; namesArray )</target>
            </trans-unit>
            <trans-unit resname="desc847" id="847">
                <source></source>
                <target>fills in the numbersArray and namesArray arrays with the numbers and names of the plug-ins loaded and usable by the 4D application.</target>
            </trans-unit>
            <trans-unit resname="cmd849" id="849">
                <source></source>
                <target>USERS TO BLOB ( users )</target>
            </trans-unit>
            <trans-unit resname="desc849" id="849">
                <source></source>
                <target>stores in the BLOB users the list of all user accounts and database groups created by the Administrator.</target>
            </trans-unit>
            <trans-unit resname="cmd850" id="850">
                <source></source>
                <target>BLOB TO USERS ( users )</target>
            </trans-unit>
            <trans-unit resname="desc850" id="850">
                <source></source>
                <target>replaces the user accounts and groups found in the BLOB users in the current database</target>
            </trans-unit>
            <trans-unit resname="cmd851" id="851">
                <source></source>
                <target>SAX ADD XML DOCTYPE ( document ; docType )</target>
            </trans-unit>
            <trans-unit resname="desc851" id="851">
                <source></source>
                <target>adds a DocType statement set by the docType parameter in the XML document referenced by document. </target>
            </trans-unit>
            <trans-unit resname="cmd852" id="852">
                <source></source>
                <target>SAX ADD XML COMMENT ( document ; comment )</target>
            </trans-unit>
            <trans-unit resname="desc852" id="852">
                <source></source>
                <target>adds a comment in the XML document referenced by document. </target>
            </trans-unit>
            <trans-unit resname="cmd853" id="853">
                <source></source>
                <target>SAX OPEN XML ELEMENT ( document ; tag {; attribName ; attribValue} {; attribName2 ; attribValue2 ; ... ; attribNameN ; attribValueN} )</target>
            </trans-unit>
            <trans-unit resname="desc853" id="853">
                <source></source>
                <target>adds a new element in the XML document referenced by document as well as, optionally, attributes and their values.</target>
            </trans-unit>
            <trans-unit resname="cmd854" id="854">
                <source></source>
                <target>SAX CLOSE XML ELEMENT ( document )</target>
            </trans-unit>
            <trans-unit resname="desc854" id="854">
                <source></source>
                <target>writes the statements necessary for closing the last element opened using the SAX OPEN XML ELEMENT command in the XML document referenced by document</target>
            </trans-unit>
            <trans-unit resname="cmd855" id="855">
                <source></source>
                <target>SAX ADD XML ELEMENT VALUE ( document ; data {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc855" id="855">
                <source></source>
                <target>adds data directly without converting them in the XML document referenced by document</target>
            </trans-unit>
            <trans-unit resname="cmd856" id="856">
                <source></source>
                <target>SAX ADD XML CDATA ( document ; data )</target>
            </trans-unit>
            <trans-unit resname="desc856" id="856">
                <source></source>
                <target>adds data of the text or BLOB type in the XML document referenced by document</target>
            </trans-unit>
            <trans-unit resname="cmd857" id="857">
                <source></source>
                <target>SAX ADD PROCESSING INSTRUCTION ( document ; statement )</target>
            </trans-unit>
            <trans-unit resname="desc857" id="857">
                <source></source>
                <target>adds an XML processing statement in the XML document referenced by document</target>
            </trans-unit>
            <trans-unit resname="cmd858" id="858">
                <source></source>
                <target>SAX SET XML DECLARATION ( document ; encoding {; standalone {; indentation}} ) </target>
            </trans-unit>
            <trans-unit resname="desc858" id="858">
                <source></source>
                <target>initializes the XML document referenced in document using the values passed in the parameter</target>
            </trans-unit>
            <trans-unit resname="cmd859" id="859">
                <source></source>
                <target>DOM SET XML DECLARATION ( elementRef ; encoding {; standalone {; indentation}} ) </target>
            </trans-unit>
            <trans-unit resname="desc859" id="859">
                <source></source>
                <target>allows you to define various options that are useful in creating the XML tree set using elementRef.</target>
            </trans-unit>
            <trans-unit resname="cmd860" id="860">
                <source></source>
                <target>SAX Get XML node ( document ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc860" id="860">
                <source></source>
                <target>returns a long integer that indicates the type of SAX event returned while the XML document referenced in document is parsed.</target>
            </trans-unit>
            <trans-unit resname="cmd861" id="861">
                <source></source>
                <target>DOM Create XML Ref ( root {; nameSpace} {; nameSpaceName ; nameSpaceValue} {; nameSpaceName2 ; nameSpaceValue2 ; ... ; nameSpaceNameN ; nameSpaceValueN} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc861" id="861">
                <source></source>
                <target>creates an empty XML tree in memory and returns its reference.</target>
            </trans-unit>
            <trans-unit resname="cmd862" id="862">
                <source></source>
                <target>DOM EXPORT TO FILE ( elementRef ; filePath )</target>
            </trans-unit>
            <trans-unit resname="desc862" id="862">
                <source></source>
                <target>stores an XML tree in a file on disk. </target>
            </trans-unit>
            <trans-unit resname="cmd863" id="863">
                <source></source>
                <target>DOM EXPORT TO VAR ( elementRef ; vXmlVar )</target>
            </trans-unit>
            <trans-unit resname="desc863" id="863">
                <source></source>
                <target>saves an XML tree in a text or BLOB variable. </target>
            </trans-unit>
            <trans-unit resname="cmd864" id="864">
                <source></source>
                <target>DOM Find XML element ( elementRef ; xPath {; arrElementRefs} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc864" id="864">
                <source></source>
                <target>looks for specific XML elements in an XML structure.</target>
            </trans-unit>
            <trans-unit resname="cmd865" id="865">
                <source></source>
                <target>DOM Create XML element ( elementRef ; xPath {; attribName ; attrValue} {; attribName2 ; attrValue2 ; ... ; attribNameN ; attrValueN} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc865" id="865">
                <source></source>
                <target>creates a new element in the XML element elementRef in the path set by the xPath parameter and adds attributes to it if necessary. </target>
            </trans-unit>
            <trans-unit resname="cmd866" id="866">
                <source></source>
                <target>DOM SET XML ATTRIBUTE ( elementRef ; attribName ; attrValue {; attribName2 ; attrValue2 ; ... ; attribNameN ; attrValueN} )</target>
            </trans-unit>
            <trans-unit resname="desc866" id="866">
                <source></source>
                <target>adds one or more attributes to the XML element whose reference is passed in the elementRef parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd867" id="867">
                <source></source>
                <target>DOM SET XML ELEMENT NAME ( elementRef ; elementName )</target>
            </trans-unit>
            <trans-unit resname="desc867" id="867">
                <source></source>
                <target>modifies the name of the element set by elementRef. </target>
            </trans-unit>
            <trans-unit resname="cmd868" id="868">
                <source></source>
                <target>DOM SET XML ELEMENT VALUE ( elementRef {; xPath}; elementValue {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc868" id="868">
                <source></source>
                <target>modifies the value of the element set by elementRef. </target>
            </trans-unit>
            <trans-unit resname="cmd869" id="869">
                <source></source>
                <target>DOM REMOVE XML ELEMENT ( elementRef )</target>
            </trans-unit>
            <trans-unit resname="desc869" id="869">
                <source></source>
                <target>removes the element designated by elementRef.</target>
            </trans-unit>
            <trans-unit resname="cmd870" id="870">
                <source></source>
                <target>EDIT ITEM ( {* ;} object {; item} )</target>
            </trans-unit>
            <trans-unit resname="desc870" id="870">
                <source></source>
                <target>allows you to edit the current item or the item number item in the array or the list set in the object parameter. </target>
            </trans-unit>
            <trans-unit resname="cmd871" id="871">
                <source></source>
                <target>BUILD APPLICATION {( buildAppSettings )}</target>
            </trans-unit>
            <trans-unit resname="desc871" id="871">
                <source></source>
                <target>launches the application generation process. It takes into account parameters set in the current build application settings file or the settings file set in the buildAppSettings parameter. </target>
            </trans-unit>
            <trans-unit resname="cmd872" id="872">
                <source></source>
                <target>SQL LOGOUT </target>
            </trans-unit>
            <trans-unit resname="desc872" id="872">
                <source></source>
                <target>closes the connection with an ODBC source that is open in the current process (if applicable).</target>
            </trans-unit>
            <trans-unit resname="cmd873" id="873">
                <source></source>
                <target>SAX GET XML DOCUMENT VALUES ( document ; encoding ; version ; standalone )</target>
            </trans-unit>
            <trans-unit resname="desc873" id="873">
                <source></source>
                <target>gets basic information from the XML header of the XML document referenced in the document parameter. </target>
            </trans-unit>
            <trans-unit resname="cmd874" id="874">
                <source></source>
                <target>SAX GET XML COMMENT ( document ; comment )</target>
            </trans-unit>
            <trans-unit resname="desc874" id="874">
                <source></source>
                <target>returns a comment if an XML Comment SAX event is generated in the XML document referenced in the document parameter. </target>
            </trans-unit>
            <trans-unit resname="cmd875" id="875">
                <source></source>
                <target>SAX GET XML PROCESSING INSTRUCTION ( document ; name ; value )</target>
            </trans-unit>
            <trans-unit resname="desc875" id="875">
                <source></source>
                <target>returns the name and value of the XML instruction processed in the XML document referenced in the document parameter</target>
            </trans-unit>
            <trans-unit resname="cmd876" id="876">
                <source></source>
                <target>SAX GET XML ELEMENT ( document ; name ; prefix ; attrNames ; attrValues )</target>
            </trans-unit>
            <trans-unit resname="desc876" id="876">
                <source></source>
                <target>returns various information about the element name that is present in the XML document reference in the document parameter</target>
            </trans-unit>
            <trans-unit resname="cmd877" id="877">
                <source></source>
                <target>SAX GET XML ELEMENT VALUE ( document ; value )</target>
            </trans-unit>
            <trans-unit resname="desc877" id="877">
                <source></source>
                <target>allows you to get the value of an XML element that exists in the XML document referenced in the document parameter</target>
            </trans-unit>
            <trans-unit resname="cmd878" id="878">
                <source></source>
                <target>SAX GET XML CDATA ( document ; value )</target>
            </trans-unit>
            <trans-unit resname="desc878" id="878">
                <source></source>
                <target>gets the CDATA value of an XML element that exists in the XML document referenced in the document parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd879" id="879">
                <source></source>
                <target>SAX GET XML ENTITY ( document ; name ; value )</target>
            </trans-unit>
            <trans-unit resname="desc879" id="879">
                <source></source>
                <target>allows you to get the name and value of an XML entity that exists in the XML document referenced in the document parameter</target>
            </trans-unit>
            <trans-unit resname="cmd880" id="880">
                <source></source>
                <target>_o_IMPORT ODBC ( sourceTable {; project {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc880" id="880">
                <source></source>
                <target>Command obsolete since 4D v17 R5</target>
            </trans-unit>
            <trans-unit resname="cmd881" id="881">
                <source></source>
                <target>_o_EXPORT ODBC ( sourceTable {; project {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc881" id="881">
                <source></source>
                <target>Command obsolete since 4D v17 R5</target>
            </trans-unit>
            <trans-unit resname="cmd887" id="887">
                <source></source>
                <target>BACKUP </target>
            </trans-unit>
            <trans-unit resname="desc887" id="887">
                <source></source>
                <target>starts the backup of the database using the current backup settings.</target>
            </trans-unit>
            <trans-unit resname="cmd888" id="888">
                <source></source>
                <target>GET BACKUP INFORMATION ( selector ; info1 ; info2 )</target>
            </trans-unit>
            <trans-unit resname="desc888" id="888">
                <source></source>
                <target>gets information related to the last backup performed on the database data</target>
            </trans-unit>
            <trans-unit resname="cmd889" id="889">
                <source></source>
                <target>GET RESTORE INFORMATION ( selector ; info1 ; info2 )</target>
            </trans-unit>
            <trans-unit resname="desc889" id="889">
                <source></source>
                <target>gets information related to the last automatic database restore</target>
            </trans-unit>
            <trans-unit resname="cmd890" id="890">
                <source></source>
                <target>RESIZE FORM WINDOW ( width ; height )</target>
            </trans-unit>
            <trans-unit resname="desc890" id="890">
                <source></source>
                <target>lets you change the size of the current form window. </target>
            </trans-unit>
            <trans-unit resname="cmd891" id="891">
                <source></source>
                <target>FORM SET SIZE ( {object ;} horizontal ; vertical {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc891" id="891">
                <source></source>
                <target>allows you to change the size of the current form by programming.</target>
            </trans-unit>
            <trans-unit resname="cmd892" id="892">
                <source></source>
                <target>FORM SET HORIZONTAL RESIZING ( resize {; minWidth {; maxWidth}} )</target>
            </trans-unit>
            <trans-unit resname="desc892" id="892">
                <source></source>
                <target>allows you to change the horizontal resizing properties of the current form through programming.</target>
            </trans-unit>
            <trans-unit resname="cmd893" id="893">
                <source></source>
                <target>FORM SET VERTICAL RESIZING ( resize {; minHeight {; maxHeight}} )</target>
            </trans-unit>
            <trans-unit resname="desc893" id="893">
                <source></source>
                <target>allows you to change the vertical resizing properties of the current form through programming.</target>
            </trans-unit>
            <trans-unit resname="cmd894" id="894">
                <source></source>
                <target>OBJECT Get format ( {* ;} object ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc894" id="894">
                <source></source>
                <target>returns the current display format applied to the object specified in the object parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd895" id="895">
                <source></source>
                <target>BASE64 ENCODE ( blob {; encodedText} )</target>
            </trans-unit>
            <trans-unit resname="desc895" id="895">
                <source></source>
                <target>encodes the BLOB passed in the blob parameter in Base64 format.</target>
            </trans-unit>
            <trans-unit resname="cmd896" id="896">
                <source></source>
                <target>BASE64 DECODE ( {encodedText ;} blob )</target>
            </trans-unit>
            <trans-unit resname="desc896" id="896">
                <source></source>
                <target>allows you to decode the BLOB coded in Base64 format passed in the encodedText or blob parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd897" id="897">
                <source></source>
                <target>Displayed line number  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc897" id="897">
                <source></source>
                <target>returns the number of the row being processed while a list of records or list box rows is displayed on screen.</target>
            </trans-unit>
            <trans-unit resname="cmd898" id="898">
                <source></source>
                <target>FORM GET OBJECTS ( objectsArray {; variablesArray {; pagesArray}} {; formPageOption | *} ) </target>
            </trans-unit>
            <trans-unit resname="desc898" id="898">
                <source></source>
                <target>returns the list of all objects present in the current form in the form of (an) array(s).</target>
            </trans-unit>
            <trans-unit resname="cmd899" id="899">
                <source></source>
                <target>GET AUTOMATIC RELATIONS ( one ; many )</target>
            </trans-unit>
            <trans-unit resname="desc899" id="899">
                <source></source>
                <target>lets you know if the automatic/manual status of all manual many-to-one and one-to-many relations of the database have been modified in the current process</target>
            </trans-unit>
            <trans-unit resname="cmd900" id="900">
                <source></source>
                <target>SPELL CHECKING </target>
            </trans-unit>
            <trans-unit resname="desc900" id="900">
                <source></source>
                <target>triggers the spell check of the field or variable having the focus in the currently displayed form.</target>
            </trans-unit>
            <trans-unit resname="cmd901" id="901">
                <source></source>
                <target>WEB SERVICE SET OPTION ( option ; value )</target>
            </trans-unit>
            <trans-unit resname="desc901" id="901">
                <source></source>
                <target>sets different options to be used during the next SOAP request triggered using the CALL WEB SERVICE command</target>
            </trans-unit>
            <trans-unit resname="cmd902" id="902">
                <source></source>
                <target>GET HIGHLIGHTED RECORDS ( {aTable ;} setName )</target>
            </trans-unit>
            <trans-unit resname="desc902" id="902">
                <source></source>
                <target>stores in the set designated by the setName parameter the highlighted records (i.e., the records highlighted by the user in the list form) in the aTable passed as parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd903" id="903">
                <source></source>
                <target>OPEN SETTINGS WINDOW ( selector {; access {; settingsType}} )</target>
            </trans-unit>
            <trans-unit resname="desc903" id="903">
                <source></source>
                <target>opens the Preferences dialog box of 4D or the Database Settings of the current 4D application and displays the parameters or the page corresponding to the key passed in selector.</target>
            </trans-unit>
            <trans-unit resname="cmd904" id="904">
                <source></source>
                <target>SPELL SET CURRENT DICTIONARY ( dictionary )</target>
            </trans-unit>
            <trans-unit resname="desc904" id="904">
                <source></source>
                <target>causes the replacement of the current dictionary with the one specified by the dictionary parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd905" id="905">
                <source></source>
                <target>Select document ( directory ; fileTypes ; title ; options {; selected} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc905" id="905">
                <source></source>
                <target>displays a standard open document dialog box which allows the user to set one or more files and returns the name and/or full access path of the selected file(s).</target>
            </trans-unit>
            <trans-unit resname="cmd906" id="906">
                <source></source>
                <target>OBJECT SET SCROLL POSITION ( * ; object {; vPosition {; hPosition}}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc906" id="906">
                <source></source>
                <target>allows scrolling the contents of several types of objects: the lines of a subform, of a list form (displayed using the MODIFY SELECTION or DISPLAY SELECTION commands), or of a hierarchical list, the rows and columns of a list box or even the pixels of a picture.</target>
            </trans-unit>
            <trans-unit resname="cmd907" id="907">
                <source></source>
                <target>Count in array ( array ; value ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc907" id="907">
                <source></source>
                <target>returns the number of times value is found in array.</target>
            </trans-unit>
            <trans-unit resname="cmd908" id="908">
                <source></source>
                <target>GET ALLOWED METHODS ( methodsArray )</target>
            </trans-unit>
            <trans-unit resname="desc908" id="908">
                <source></source>
                <target>returns, in methodsArray, the names of methods that can be used to write formulas.</target>
            </trans-unit>
            <trans-unit resname="cmd909" id="909">
                <source></source>
                <target>GET SERIAL PORT MAPPING ( numArray ; nameArray )</target>
            </trans-unit>
            <trans-unit resname="desc909" id="909">
                <source></source>
                <target>returns two arrays, numArray and nameArray, containing the serial port numbers and the serial port names of the current machine. </target>
            </trans-unit>
            <trans-unit resname="cmd910" id="910">
                <source></source>
                <target>DISPLAY NOTIFICATION ( title ; text {; duration} )</target>
            </trans-unit>
            <trans-unit resname="desc910" id="910">
                <source></source>
                <target>displays a notification message to the user</target>
            </trans-unit>
            <trans-unit resname="cmd911" id="911">
                <source></source>
                <target>APPEND TO ARRAY ( array ; value )</target>
            </trans-unit>
            <trans-unit resname="desc911" id="911">
                <source></source>
                <target>adds a new element at the end of array and assigns value to the element.</target>
            </trans-unit>
            <trans-unit resname="cmd912" id="912">
                <source></source>
                <target>LISTBOX SELECT ROW ( {* ;} object ; rowPosition {; action} ) </target>
            </trans-unit>
            <trans-unit resname="desc912" id="912">
                <source></source>
                <target>selects the row whose number is passed in position in the list box set in the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd913" id="913">
                <source></source>
                <target>LISTBOX INSERT ROWS ( {* ;} object ; rowPosition {; numRows} ) </target>
            </trans-unit>
            <trans-unit resname="desc913" id="913">
                <source></source>
                <target>inserts one or several new row(s) in the list box set in the object and * parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd914" id="914">
                <source></source>
                <target>LISTBOX DELETE ROWS ( {* ;} object ; rowPosition {; numRows} ) </target>
            </trans-unit>
            <trans-unit resname="desc914" id="914">
                <source></source>
                <target>deletes one or several row(s) starting at rowPosition row (visible or not) from the list box set in the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd915" id="915">
                <source></source>
                <target>LISTBOX Get number of rows ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc915" id="915">
                <source></source>
                <target>returns the number of rows in the list box</target>
            </trans-unit>
            <trans-unit resname="cmd916" id="916">
                <source></source>
                <target>LISTBOX SORT COLUMNS ( {* ;} object ; colNum ; order {; colNum2 ; order2 ; ... ; colNumN ; orderN} )</target>
            </trans-unit>
            <trans-unit resname="desc916" id="916">
                <source></source>
                <target>sorts the rows of the list box set in the object and * parameters on the basis of one or more column value(s). </target>
            </trans-unit>
            <trans-unit resname="cmd917" id="917">
                <source></source>
                <target>LISTBOX Get property ( {* ;} object ; property ) -&gt; Longint, String</target>
            </trans-unit>
            <trans-unit resname="desc917" id="917">
                <source></source>
                <target>returns the value of the property of the list box or column specified using the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd918" id="918">
                <source></source>
                <target>RESTORE {( archivePath {; destFolderPath} )}</target>
            </trans-unit>
            <trans-unit resname="desc918" id="918">
                <source></source>
                <target>can be used to restore the file(s) included in a 4D archive</target>
            </trans-unit>
            <trans-unit resname="cmd919" id="919">
                <source></source>
                <target>SET FIELD RELATION ( manyTable | Field ; one ; many )</target>
            </trans-unit>
            <trans-unit resname="desc919" id="919">
                <source></source>
                <target>sets the automatic/manual status of each relation of the database separately for the current process, regardless of its initial status as specified in the Relation properties window in the Design environment. </target>
            </trans-unit>
            <trans-unit resname="cmd920" id="920">
                <source></source>
                <target>GET FIELD RELATION ( manyField ; one ; many {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc920" id="920">
                <source></source>
                <target>lets you find out the automatic/manual status of the relation starting from manyField for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd921" id="921">
                <source></source>
                <target>SAX OPEN XML ELEMENT ARRAYS ( document ; tag {; attribNamesArray ; attribValuesArray} {; attribNamesArray2 ; attribValuesArray2 ; ... ; attribNamesArrayN ; attribValuesArrayN} )</target>
            </trans-unit>
            <trans-unit resname="desc921" id="921">
                <source></source>
                <target>used to add a new element in the XML document whose reference is passed in document as well as, optionally, attributes and their values in the form of arrays. </target>
            </trans-unit>
            <trans-unit resname="cmd922" id="922">
                <source></source>
                <target>SHOW ON DISK ( pathname {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc922" id="922">
                <source></source>
                <target>displays the file or folder whose pathname was passed in the pathname parameter in a standard window of the operating system.</target>
            </trans-unit>
            <trans-unit resname="cmd923" id="923">
                <source></source>
                <target>DOM Get parent XML element ( elementRef {; parentElemName {; parentElemValue}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc923" id="923">
                <source></source>
                <target>returns an XML reference to the “parent” of the XML element passed as reference in elementRef</target>
            </trans-unit>
            <trans-unit resname="cmd924" id="924">
                <source></source>
                <target>DOM Get previous sibling XML element ( elementRef {; siblingElemName {; siblingElemValue}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc924" id="924">
                <source></source>
                <target>returns a reference to the previous “sibling” of the XML element passed as reference.</target>
            </trans-unit>
            <trans-unit resname="cmd925" id="925">
                <source></source>
                <target>DOM Get last child XML element ( elementRef {; childElemName {; childElemValue}} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc925" id="925">
                <source></source>
                <target>returns an XML reference to the last “child” of the XML element passed as reference in elementRef</target>
            </trans-unit>
            <trans-unit resname="cmd926" id="926">
                <source></source>
                <target>New log file  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc926" id="926">
                <source></source>
                <target>closes the current log file, renames it and creates a new one with the same name in the same location as the previous one</target>
            </trans-unit>
            <trans-unit resname="cmd927" id="927">
                <source></source>
                <target>_o_INTEGRATE LOG FILE ( pathName )</target>
            </trans-unit>
            <trans-unit resname="desc927" id="927">
                <source></source>
                <target>(obsolete v16) integrates the log file, whose name or pathname  was passed in the pathName parameter, into the current database</target>
            </trans-unit>
            <trans-unit resname="cmd928" id="928">
                <source></source>
                <target>Log File  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc928" id="928">
                <source></source>
                <target>returns the long name (i.e. the complete pathname of the file, including its name) of the current log file of the open database. </target>
            </trans-unit>
            <trans-unit resname="cmd937" id="937">
                <source></source>
                <target>Compact data file ( structurePath ; dataPath {; archiveFolder {; option {; method}}} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc937" id="937">
                <source></source>
                <target>compacts the data file designated by the dataPath parameter associated with the structurePath structure file.</target>
            </trans-unit>
            <trans-unit resname="cmd939" id="939">
                <source></source>
                <target>VERIFY DATA FILE ( structurePath ; dataPath ; objects ; options ; method {; tablesArray {; fieldsArray}} )</target>
            </trans-unit>
            <trans-unit resname="desc939" id="939">
                <source></source>
                <target>carries out a structural check of the objects contained in the 4D data file designated by structurePath and dataPath.</target>
            </trans-unit>
            <trans-unit resname="cmd940" id="940">
                <source></source>
                <target>FORM SCREENSHOT ( {{aTable ;} formName ;} formPict {; pageNum} ) </target>
            </trans-unit>
            <trans-unit resname="desc940" id="940">
                <source></source>
                <target>returns a form as a picture</target>
            </trans-unit>
            <trans-unit resname="cmd942" id="942">
                <source></source>
                <target>QUERY BY SQL ( {aTable ;} sqlFormula )</target>
            </trans-unit>
            <trans-unit resname="desc942" id="942">
                <source></source>
                <target>can execute a simple SELECT query </target>
            </trans-unit>
            <trans-unit resname="cmd946" id="946">
                <source></source>
                <target>WEB Validate digest ( userName ; password ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc946" id="946">
                <source></source>
                <target>checks the validity of the identifying information (name and password) provided by a user connecting to the Web server</target>
            </trans-unit>
            <trans-unit resname="cmd948" id="948">
                <source></source>
                <target>Begin SQL </target>
            </trans-unit>
            <trans-unit resname="desc948" id="948">
                <source></source>
                <target>a keyword used in the Method editor to indicate the beginning of a sequence of SQL commands that must be interpreted by the current data source of the process (the integrated SQL engine of 4D or any source specified via the SQL LOGIN command). </target>
            </trans-unit>
            <trans-unit resname="cmd949" id="949">
                <source></source>
                <target>End SQL </target>
            </trans-unit>
            <trans-unit resname="desc949" id="949">
                <source></source>
                <target>a keyword indicating the end of a sequence of SQL commands in the Method editor. </target>
            </trans-unit>
            <trans-unit resname="cmd950" id="950">
                <source></source>
                <target>SET LIST ITEM ICON ( {* ;} list ; itemRef | * ; icon )</target>
            </trans-unit>
            <trans-unit resname="desc950" id="950">
                <source></source>
                <target>modifies the icon associated with the item specified by the itemRef parameter of the list whose reference number or object name is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd951" id="951">
                <source></source>
                <target>GET LIST ITEM ICON ( {* ;} list ; itemRef | * ; icon )</target>
            </trans-unit>
            <trans-unit resname="desc951" id="951">
                <source></source>
                <target>returns, in icon, the icon associated with the item whose reference number is passed in itemRef in the list whose reference number or object name is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd952" id="952">
                <source></source>
                <target>Find in list ( {* ;} list ; value ; scope {; itemsArray {; *}} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc952" id="952">
                <source></source>
                <target>returns the position or reference of the first item of the list that is equivalent to the string passed in value. </target>
            </trans-unit>
            <trans-unit resname="cmd953" id="953">
                <source></source>
                <target>SET LIST ITEM FONT ( {* ;} list ; itemRef | * ; font )</target>
            </trans-unit>
            <trans-unit resname="desc953" id="953">
                <source></source>
                <target>modifies the character font of the item specified by the itemRef parameter of the list whose reference number or object name is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd954" id="954">
                <source></source>
                <target>Get list item font ( {* ;} list ; itemRef | * ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc954" id="954">
                <source></source>
                <target>returns the current character font name of the item specified by the itemRef parameter of the list whose reference number or object name is passed in list.</target>
            </trans-unit>
            <trans-unit resname="cmd955" id="955">
                <source></source>
                <target>Choose ( criterion ; value {; value2 ; ... ; valueN} )  -&gt; Expression</target>
            </trans-unit>
            <trans-unit resname="desc955" id="955">
                <source></source>
                <target>returns one of the values passed in the value1, value2, etc. parameters depending on the value of the criterion parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd956" id="956">
                <source></source>
                <target>Select RGB Color {( defaultColor {; message} )} -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc956" id="956">
                <source></source>
                <target>displays the system color selection window and returns the RGB value of the color selected by the user</target>
            </trans-unit>
            <trans-unit resname="cmd957" id="957">
                <source></source>
                <target>LIST OF CHOICE LISTS ( numsArray ; namesArray )</target>
            </trans-unit>
            <trans-unit resname="desc957" id="957">
                <source></source>
                <target>returns, in the synchronized numsArr and namesArr arrays, the numbers and names of the choice lists defined by the list editor in Design mode.</target>
            </trans-unit>
            <trans-unit resname="cmd958" id="958">
                <source></source>
                <target>GET PASTEBOARD DATA TYPE ( 4Dsignatures ; nativeTypes {; formatNames} )</target>
            </trans-unit>
            <trans-unit resname="desc958" id="958">
                <source></source>
                <target>gets the list of data types present in the pasteboard.</target>
            </trans-unit>
            <trans-unit resname="cmd959" id="959">
                <source></source>
                <target>_o_USE EXTERNAL DATABASE ( sourceName {; user ; password} )</target>
            </trans-unit>
            <trans-unit resname="desc959" id="959">
                <source></source>
                <target>(obsolete) Command replaced by the SQL LOGIN command </target>
            </trans-unit>
            <trans-unit resname="cmd960" id="960">
                <source></source>
                <target>_o_USE INTERNAL DATABASE </target>
            </trans-unit>
            <trans-unit resname="desc960" id="960">
                <source></source>
                <target>(obsolete) Command has been replaced by the SQL LOGOUT command </target>
            </trans-unit>
            <trans-unit resname="cmd961" id="961">
                <source></source>
                <target>Transaction level  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc961" id="961">
                <source></source>
                <target>returns the current transaction level for the process.</target>
            </trans-unit>
            <trans-unit resname="cmd962" id="962">
                <source></source>
                <target>START SQL SERVER </target>
            </trans-unit>
            <trans-unit resname="desc962" id="962">
                <source></source>
                <target>launches the integrated SQL server in the 4D application where it has been executed.</target>
            </trans-unit>
            <trans-unit resname="cmd963" id="963">
                <source></source>
                <target>STOP SQL SERVER </target>
            </trans-unit>
            <trans-unit resname="desc963" id="963">
                <source></source>
                <target>stops the integrated SQL server in the 4D application where it has been executed.</target>
            </trans-unit>
            <trans-unit resname="cmd964" id="964">
                <source></source>
                <target>Is field value Null ( aField ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc964" id="964">
                <source></source>
                <target>returns True if the field designated by the aField parameter contains the NULL value, and False otherwise.</target>
            </trans-unit>
            <trans-unit resname="cmd965" id="965">
                <source></source>
                <target>SET FIELD VALUE NULL ( aField )</target>
            </trans-unit>
            <trans-unit resname="desc965" id="965">
                <source></source>
                <target>assigns the NULL value to the field designated by the aField parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd966" id="966">
                <source></source>
                <target>CREATE INDEX ( aTable ; fieldsArray ; indexType ; indexName {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc966" id="966">
                <source></source>
                <target>creates a standard index or a keyword index </target>
            </trans-unit>
            <trans-unit resname="cmd967" id="967">
                <source></source>
                <target>DELETE INDEX ( fieldPtr | indexName {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc967" id="967">
                <source></source>
                <target>deletes one or more existing indexes from the database.</target>
            </trans-unit>
            <trans-unit resname="cmd969" id="969">
                <source></source>
                <target>_o_FORM GET PARAMETER ( {aTable ;} form ; selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc969" id="969">
                <source></source>
                <target>can be used to get the current value of a parameter of the form indicated by aTable and form.</target>
            </trans-unit>
            <trans-unit resname="cmd970" id="970">
                <source></source>
                <target>LISTBOX INSERT COLUMN FORMULA ( {* ;} object ; colPosition ; colName ; formula ; dataType ; headerName ; headerVar {; footerName ; footerVar} ) </target>
            </trans-unit>
            <trans-unit resname="desc970" id="970">
                <source></source>
                <target>inserts a column into the list box designated by the object and * parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd971" id="971">
                <source></source>
                <target>LISTBOX GET CELL POSITION ( {* ;} object {; X ; Y }; column ; row {; colVar} )</target>
            </trans-unit>
            <trans-unit resname="desc971" id="971">
                <source></source>
                <target>returns the numbers of the column and the row that correspond to the location in the listbox (designated by * and object) of the last mouse click, last selection made via the keyboard, or the horizontal and vertical coordinates of the mouse.</target>
            </trans-unit>
            <trans-unit resname="cmd972" id="972">
                <source></source>
                <target>GET MENU ITEM PROPERTY ( menu ; menuItem ; property ; value {; process} )</target>
            </trans-unit>
            <trans-unit resname="desc972" id="972">
                <source></source>
                <target>returns, in the value parameter, the current value of the property of the menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd973" id="973">
                <source></source>
                <target>SET MENU ITEM PROPERTY ( menu ; menuItem ; property ; value {; process} )</target>
            </trans-unit>
            <trans-unit resname="desc973" id="973">
                <source></source>
                <target>sets the value of the property for the menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd975" id="975">
                <source></source>
                <target>SET FILE TO PASTEBOARD ( file {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc975" id="975">
                <source></source>
                <target>adds the complete pathname of the file passed in the file parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd976" id="976">
                <source></source>
                <target>Get file from pasteboard ( xIndex ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc976" id="976">
                <source></source>
                <target>returns the absolute pathname of a file included in a drag and drop operation.</target>
            </trans-unit>
            <trans-unit resname="cmd977" id="977">
                <source></source>
                <target>GET MENU ITEMS ( menu ; menuTitlesArray ; menuRefsArray )</target>
            </trans-unit>
            <trans-unit resname="desc977" id="977">
                <source></source>
                <target>returns, in the menuTitlesArray and menuRefsArray arrays, the titles and IDs of all the items of the menu or menu bar designated by the menu parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd978" id="978">
                <source></source>
                <target>RELEASE MENU ( menu )</target>
            </trans-unit>
            <trans-unit resname="desc978" id="978">
                <source></source>
                <target>removes the menu whose ID is passed in menu from memory.</target>
            </trans-unit>
            <trans-unit resname="cmd979" id="979">
                <source></source>
                <target>Get menu bar reference {( process )} -&gt; MenuRef</target>
            </trans-unit>
            <trans-unit resname="desc979" id="979">
                <source></source>
                <target>returns the ID of the current menu bar or the menu bar of a specific process.</target>
            </trans-unit>
            <trans-unit resname="cmd980" id="980">
                <source></source>
                <target>Get menu item modifiers ( menu ; menuItem {; process} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc980" id="980">
                <source></source>
                <target>returns any additional modifier(s) associated with the standard shortcut of the menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd981" id="981">
                <source></source>
                <target>Get menu item method ( menu ; menuItem {; process} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc981" id="981">
                <source></source>
                <target>returns the name of the 4D project method associated with the menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd982" id="982">
                <source></source>
                <target>SET MENU ITEM METHOD ( menu ; menuItem ; methodName {; process} ) </target>
            </trans-unit>
            <trans-unit resname="desc982" id="982">
                <source></source>
                <target>modifies the 4D project method associated with the menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd983" id="983">
                <source></source>
                <target>GET MENU ITEM ICON ( menu ; menuItem ; iconRef {; process} ) </target>
            </trans-unit>
            <trans-unit resname="desc983" id="983">
                <source></source>
                <target>returns, in the iconRef variable, the reference of any icon that is associated with the menu item designated by the menu and menuItem parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd984" id="984">
                <source></source>
                <target>SET MENU ITEM ICON ( menu ; menuItem ; iconRef {; process} ) </target>
            </trans-unit>
            <trans-unit resname="desc984" id="984">
                <source></source>
                <target>modifies the icon associated with the menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd985" id="985">
                <source></source>
                <target>GET LIST ITEM PARAMETER ( {* ;} list ; itemRef | * ; selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc985" id="985">
                <source></source>
                <target>used to find out the current value of the selector parameter for the itemRef item of the hierarchical list whose reference or object name is passed in the list parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd986" id="986">
                <source></source>
                <target>SET LIST ITEM PARAMETER ( {* ;} list ; itemRef | * ; selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc986" id="986">
                <source></source>
                <target>modifies the selector parameter for the itemRef item of the hierarchical list whose reference or object name is passed in the list parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd987" id="987">
                <source></source>
                <target>COMBINE PICTURES ( resultingPict ; pict1 ; operator ; pict2 {; horOffset ; vertOffset} )</target>
            </trans-unit>
            <trans-unit resname="desc987" id="987">
                <source></source>
                <target>combines the pict1 and pict2 pictures in operator mode in order to produce a third, resultingPict.</target>
            </trans-unit>
            <trans-unit resname="cmd988" id="988">
                <source></source>
                <target>TRANSFORM PICTURE ( picture ; operator {; param1 {; param2 {; param3 {; param4}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc988" id="988">
                <source></source>
                <target>applies a transformation of the operator type to the picture passed in the picture parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd989" id="989">
                <source></source>
                <target>GET DATA SOURCE LIST ( sourceType ; sourceNamesArr ; driversArr )</target>
            </trans-unit>
            <trans-unit resname="desc989" id="989">
                <source></source>
                <target>returns, in the sourceNamesArr and driversArr arrays, the names and drivers of the sourceType type data sources defined in the ODBC manager of the operating system.</target>
            </trans-unit>
            <trans-unit resname="cmd990" id="990">
                <source></source>
                <target>Get current data source  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc990" id="990">
                <source></source>
                <target>returns the name of the current data source of the application.</target>
            </trans-unit>
            <trans-unit resname="cmd991" id="991">
                <source></source>
                <target>Get localized string ( resName ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc991" id="991">
                <source></source>
                <target>returns the value of the string designated by the resName attribute for the current language.</target>
            </trans-unit>
            <trans-unit resname="cmd992" id="992">
                <source></source>
                <target>PICTURE CODEC LIST ( codecArray {; namesArray}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc992" id="992">
                <source></source>
                <target>fills the codecArray array with the list of picture Codec IDs that are available on the machine where it is executed.</target>
            </trans-unit>
            <trans-unit resname="cmd993" id="993">
                <source></source>
                <target>NO DEFAULT TABLE </target>
            </trans-unit>
            <trans-unit resname="desc993" id="993">
                <source></source>
                <target>used to cancel the effect of the DEFAULT TABLE command</target>
            </trans-unit>
            <trans-unit resname="cmd994" id="994">
                <source></source>
                <target>GET SYSTEM FORMAT ( format ; value )</target>
            </trans-unit>
            <trans-unit resname="desc994" id="994">
                <source></source>
                <target>returns the current value of several regional parameters defined in the operating system.</target>
            </trans-unit>
            <trans-unit resname="cmd995" id="995">
                <source></source>
                <target>OPEN PRINTING JOB </target>
            </trans-unit>
            <trans-unit resname="desc995" id="995">
                <source></source>
                <target>opens a print job and stacks all the subsequent printing orders there until the CLOSE PRINTING JOB command is called.</target>
            </trans-unit>
            <trans-unit resname="cmd996" id="996">
                <source></source>
                <target>CLOSE PRINTING JOB </target>
            </trans-unit>
            <trans-unit resname="desc996" id="996">
                <source></source>
                <target>closes the print job previously opened by the OPEN PRINTING JOB command and sends any printing document that has been assembled to the current printer.</target>
            </trans-unit>
            <trans-unit resname="cmd997" id="997">
                <source></source>
                <target>GET MACRO PARAMETER ( selector ; textParam )</target>
            </trans-unit>
            <trans-unit resname="desc997" id="997">
                <source></source>
                <target>returns, in the paramText parameter, all or part of the text of the method from which it was called.</target>
            </trans-unit>
            <trans-unit resname="cmd998" id="998">
                <source></source>
                <target>SET MACRO PARAMETER ( selector ; textParam )</target>
            </trans-unit>
            <trans-unit resname="desc998" id="998">
                <source></source>
                <target>inserts the paramText text into the method from which it has been called.</target>
            </trans-unit>
            <trans-unit resname="cmd999" id="999">
                <source></source>
                <target>Is table number valid ( tableNum ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc999" id="999">
                <source></source>
                <target>returns True if the table whose number is passed in the tableNum parameter exists in the database and False otherwise.</target>
            </trans-unit>
            <trans-unit resname="cmd1000" id="1000">
                <source></source>
                <target>Is field number valid ( tableNum | tablePtr ; fieldNum ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1000" id="1000">
                <source></source>
                <target>returns True if the field whose number is passed in the fieldNum parameter exists in the table whose number or pointer is passed in the tableNum or tablePtr parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd1001" id="1001">
                <source></source>
                <target>COMPONENT LIST ( componentsArray )</target>
            </trans-unit>
            <trans-unit resname="desc1001" id="1001">
                <source></source>
                <target>sizes and fills the componentsArray array with the names of the components loaded by the 4D application for the current host database.</target>
            </trans-unit>
            <trans-unit resname="cmd1002" id="1002">
                <source></source>
                <target>CONVERT PICTURE ( picture ; codec {; compression} )</target>
            </trans-unit>
            <trans-unit resname="desc1002" id="1002">
                <source></source>
                <target>converts picture into a new type.</target>
            </trans-unit>
            <trans-unit resname="cmd1003" id="1003">
                <source></source>
                <target>Get menu item parameter ( menu ; menuItem ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1003" id="1003">
                <source></source>
                <target>returns the custom character string associated with the menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1004" id="1004">
                <source></source>
                <target>SET MENU ITEM PARAMETER ( menu ; menuItem ; param )</target>
            </trans-unit>
            <trans-unit resname="desc1004" id="1004">
                <source></source>
                <target>associates a custom character string with a menu item designated by the menu and menuItem parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1005" id="1005">
                <source></source>
                <target>Get selected menu item parameter  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1005" id="1005">
                <source></source>
                <target>returns the custom character string associated with the selected menu item. </target>
            </trans-unit>
            <trans-unit resname="cmd1006" id="1006">
                <source></source>
                <target>Dynamic pop up menu ( menu {; default {; xCoord ; yCoord}} )  -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1006" id="1006">
                <source></source>
                <target>causes a hierarchical pop-up menu to appear at the current location of the mouse or at the location set by the optional xCoord and yCoord parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1007" id="1007">
                <source></source>
                <target>EXECUTE METHOD ( methodName {; result {; param}}{; param2 ; ... ; paramN} )</target>
            </trans-unit>
            <trans-unit resname="desc1007" id="1007">
                <source></source>
                <target>executes the methodName project method while passing any parameters in param1...paramN.</target>
            </trans-unit>
            <trans-unit resname="cmd1008" id="1008">
                <source></source>
                <target>VERIFY CURRENT DATA FILE {( objects ; options ; method {; tablesArray {; fieldsArray}} )}</target>
            </trans-unit>
            <trans-unit resname="desc1008" id="1008">
                <source></source>
                <target>carries out a structural check of the objects found in the data file currently opened by 4D.</target>
            </trans-unit>
            <trans-unit resname="cmd1009" id="1009">
                <source></source>
                <target>Get database localization {( {languageType}{;}{*} )} -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1009" id="1009">
                <source></source>
                <target>returns the database default language or the language specified by the languageType, expressed in the standard defined by the RFC 3066.</target>
            </trans-unit>
            <trans-unit resname="cmd1010" id="1010">
                <source></source>
                <target>DOM Find XML element by ID ( elementRef ; id ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1010" id="1010">
                <source></source>
                <target>searches within an XML document for the element whose id attribute equals the value passed in the id parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1011" id="1011">
                <source></source>
                <target>CONVERT FROM TEXT ( 4Dtext ; charSet ; convertedBLOB )</target>
            </trans-unit>
            <trans-unit resname="desc1011" id="1011">
                <source></source>
                <target>can be used to convert a text expressed in the current character set of 4D to a text expressed in another character set.</target>
            </trans-unit>
            <trans-unit resname="cmd1012" id="1012">
                <source></source>
                <target>Convert to text ( blob ; charSet ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1012" id="1012">
                <source></source>
                <target>converts the text contained in the blob parameter and returns it in text expressed in the character set of 4D.</target>
            </trans-unit>
            <trans-unit resname="cmd1013" id="1013">
                <source></source>
                <target>LISTBOX SET TABLE SOURCE ( {* ;} object ; tableNum | selName {; highlightName} ) </target>
            </trans-unit>
            <trans-unit resname="desc1013" id="1013">
                <source></source>
                <target>can be used to modify the source of the data displayed in the listbox that is designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1014" id="1014">
                <source></source>
                <target>LISTBOX GET TABLE SOURCE ( {* ;} object ; tableNum {; name {; highlightName}} )</target>
            </trans-unit>
            <trans-unit resname="desc1014" id="1014">
                <source></source>
                <target>can be used to find out the current source of the data displayed in the list box that is designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1015" id="1015">
                <source></source>
                <target>GET LAST ERROR STACK ( codesArray ; intCompArray ; textArray )</target>
            </trans-unit>
            <trans-unit resname="desc1015" id="1015">
                <source></source>
                <target>returns information about the current stack of errors of the 4D application. When a 4D statement causes an error, the current error stack contains a description of the error as well as any series of errors generated.</target>
            </trans-unit>
            <trans-unit resname="cmd1016" id="1016">
                <source></source>
                <target>Tool bar height  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1016" id="1016">
                <source></source>
                <target>returns the height of the current visible tool bar, expressed in pixels.</target>
            </trans-unit>
            <trans-unit resname="cmd1017" id="1017">
                <source></source>
                <target>SVG EXPORT TO PICTURE ( elementRef ; pictVar {; exportType} )</target>
            </trans-unit>
            <trans-unit resname="desc1017" id="1017">
                <source></source>
                <target>saves an SVG format picture contained in an XML tree in the picture field or variable indicated by the pictVar parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd1018" id="1018">
                <source></source>
                <target>OPEN SECURITY CENTER </target>
            </trans-unit>
            <trans-unit resname="desc1018" id="1018">
                <source></source>
                <target>displays the Maintenance and Security Center (MSC) window.</target>
            </trans-unit>
            <trans-unit resname="cmd1019" id="1019">
                <source></source>
                <target>Match regex ( pattern ; aString ; start {; pos_found ; length_found}{; *} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1019" id="1019">
                <source></source>
                <target>searches for the regular expression pattern in aString</target>
            </trans-unit>
            <trans-unit resname="cmd1020" id="1020">
                <source></source>
                <target>WA OPEN URL ( {* ;} object ; url )</target>
            </trans-unit>
            <trans-unit resname="desc1020" id="1020">
                <source></source>
                <target>loads the URL passed in the url parameter into the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1021" id="1021">
                <source></source>
                <target>WA OPEN BACK URL ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc1021" id="1021">
                <source></source>
                <target>loads the previous URL in the sequence of URLs opened into the Web area designated by the * and object parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1022" id="1022">
                <source></source>
                <target>WA OPEN FORWARD URL ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc1022" id="1022">
                <source></source>
                <target>loads the next URL in the sequence of URLs opened into the Web area designated by the * and object parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1023" id="1023">
                <source></source>
                <target>WA REFRESH CURRENT URL ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc1023" id="1023">
                <source></source>
                <target>reloads the current URL displayed in the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1024" id="1024">
                <source></source>
                <target>WA STOP LOADING URL ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc1024" id="1024">
                <source></source>
                <target>stops loading the resources of the current URL of the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1025" id="1025">
                <source></source>
                <target>WA Get current URL ( {* ;} object ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1025" id="1025">
                <source></source>
                <target>returns the URL address of the page displayed in the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1026" id="1026">
                <source></source>
                <target>WA Back URL available ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1026" id="1026">
                <source></source>
                <target>finds out whether there is a previous URL available in the sequence of URLs opened in the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1027" id="1027">
                <source></source>
                <target>WA Forward URL available ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1027" id="1027">
                <source></source>
                <target>finds out whether there is a following URL available in the sequence of URLs opened in the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1029" id="1029">
                <source></source>
                <target>WA Evaluate JavaScript ( {* ;} object ; jsCode {; type} )  -&gt; Date, Object, Pointer, Real, Text, Time</target>
            </trans-unit>
            <trans-unit resname="desc1029" id="1029">
                <source></source>
                <target>executes, in the Web area designated by the * and object parameters, the JavaScript code passed in jsCode and returns the result.</target>
            </trans-unit>
            <trans-unit resname="cmd1030" id="1030">
                <source></source>
                <target>WA SET URL FILTERS ( {* ;} object ; filtersArr ; allowDenyArr )</target>
            </trans-unit>
            <trans-unit resname="desc1030" id="1030">
                <source></source>
                <target>sets up one or more filters for the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1031" id="1031">
                <source></source>
                <target>WA GET URL FILTERS ( {* ;} object ; filtersArr ; allowDenyArr )</target>
            </trans-unit>
            <trans-unit resname="desc1031" id="1031">
                <source></source>
                <target>returns, in the filtersArr and allowDenyArr arrays, the filters that are active in the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1032" id="1032">
                <source></source>
                <target>WA SET EXTERNAL LINKS FILTERS ( {* ;} object ; filtersArr ; allowDenyArr )</target>
            </trans-unit>
            <trans-unit resname="desc1032" id="1032">
                <source></source>
                <target>sets up one or more external link filters for the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1033" id="1033">
                <source></source>
                <target>WA GET EXTERNAL LINKS FILTERS ( {* ;} object ; filtersArr ; allowDenyArr )</target>
            </trans-unit>
            <trans-unit resname="desc1033" id="1033">
                <source></source>
                <target>returns, in the filtersArr and allowDenyArr arrays, the external link filters of the Web area designated by the * and object parameters. If no filter is active, the arrays are returned empty. </target>
            </trans-unit>
            <trans-unit resname="cmd1034" id="1034">
                <source></source>
                <target>WA GET LAST URL ERROR ( {* ;} object ; url ; description ; errorCode )</target>
            </trans-unit>
            <trans-unit resname="desc1034" id="1034">
                <source></source>
                <target>recovers several items of information about the last error that occurred in the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1035" id="1035">
                <source></source>
                <target>WA Get last filtered URL ( {* ;} object ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1035" id="1035">
                <source></source>
                <target>returns the last URL that was filtered in the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1036" id="1036">
                <source></source>
                <target>WA Get page title ( {* ;} object ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1036" id="1036">
                <source></source>
                <target>returns the title of the current page or the page being displayed in the Web area designated by the * and object parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1037" id="1037">
                <source></source>
                <target>WA SET PAGE CONTENT ( {* ;} object ; content ; baseURL )</target>
            </trans-unit>
            <trans-unit resname="desc1037" id="1037">
                <source></source>
                <target>replaces the page displayed in the Web area designated by the * and object parameters by the HTML code passed in the content parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd1038" id="1038">
                <source></source>
                <target>WA Get page content ( {* ;} object ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1038" id="1038">
                <source></source>
                <target>returns the HTML code of the current page or the page being displayed in the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1039" id="1039">
                <source></source>
                <target>WA SET PAGE TEXT LARGER ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc1039" id="1039">
                <source></source>
                <target>increases the size of the text displayed in the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1040" id="1040">
                <source></source>
                <target>WA SET PAGE TEXT SMALLER ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc1040" id="1040">
                <source></source>
                <target>reduces the size of the text displayed in the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1041" id="1041">
                <source></source>
                <target>WA SET PREFERENCE ( {* ;} object ; selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1041" id="1041">
                <source></source>
                <target>sets different preferences for the Web area</target>
            </trans-unit>
            <trans-unit resname="cmd1042" id="1042">
                <source></source>
                <target>WA GET PREFERENCE ( {* ;} object ; selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1042" id="1042">
                <source></source>
                <target>gets the current value of the preference in the Web area designated by the * and object parameters. </target>
            </trans-unit>
            <trans-unit resname="cmd1043" id="1043">
                <source></source>
                <target>WA EXECUTE JAVASCRIPT FUNCTION ( {* ;} object ; jsFunction ; result|* {; param}{; param2 ; ... ; paramN} )</target>
            </trans-unit>
            <trans-unit resname="desc1043" id="1043">
                <source></source>
                <target>executes, in the Web area designated by the * and object parameters, the JavaScript function jsFunction and optionally returns its result in the result parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd1044" id="1044">
                <source></source>
                <target>DESCRIBE QUERY EXECUTION ( status )</target>
            </trans-unit>
            <trans-unit resname="desc1044" id="1044">
                <source></source>
                <target>enables or disables the query analysis mode for the current process.</target>
            </trans-unit>
            <trans-unit resname="cmd1045" id="1045">
                <source></source>
                <target>Get last query path ( descFormat ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1045" id="1045">
                <source></source>
                <target>returns the detailed internal description of the actual path of the last query carried out on the data. </target>
            </trans-unit>
            <trans-unit resname="cmd1046" id="1046">
                <source></source>
                <target>Get last query plan ( descFormat ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1046" id="1046">
                <source></source>
                <target>returns the detailed internal description of the query plan for the last query carried out on the data. </target>
            </trans-unit>
            <trans-unit resname="cmd1047" id="1047">
                <source></source>
                <target>OPEN ADMINISTRATION WINDOW </target>
            </trans-unit>
            <trans-unit resname="desc1047" id="1047">
                <source></source>
                <target>displays the server administration window on the machine that executes it.</target>
            </trans-unit>
            <trans-unit resname="cmd1048" id="1048">
                <source></source>
                <target>WA GET URL HISTORY ( {* ;} object ; urlsArr {; direction {; titlesArr}} )</target>
            </trans-unit>
            <trans-unit resname="desc1048" id="1048">
                <source></source>
                <target>returns one or two arrays containing the URLs visited during the session in the Web area designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1049" id="1049">
                <source></source>
                <target>WA Create URL history menu ( {* ;} object {; direction} ) -&gt; MenuRef</target>
            </trans-unit>
            <trans-unit resname="desc1049" id="1049">
                <source></source>
                <target>creates and fills a menu that can be used directly for navigation among the URLs visited during the session in the Web area designated by the * and object parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1050" id="1050">
                <source></source>
                <target>QUERY SELECTION WITH ARRAY ( targetField ; array )</target>
            </trans-unit>
            <trans-unit resname="desc1050" id="1050">
                <source></source>
                <target>searches the table of the field passed as first parameter for the records where the value of targetField is equal to at least one of the values of the elements in the array.</target>
            </trans-unit>
            <trans-unit resname="cmd1051" id="1051">
                <source></source>
                <target>TRUNCATE TABLE {( aTable )}</target>
            </trans-unit>
            <trans-unit resname="desc1051" id="1051">
                <source></source>
                <target>quickly deletes all the records of aTable.</target>
            </trans-unit>
            <trans-unit resname="cmd1052" id="1052">
                <source></source>
                <target>NOTIFY RESOURCES FOLDER MODIFICATION </target>
            </trans-unit>
            <trans-unit resname="desc1052" id="1052">
                <source></source>
                <target>&quot;forces&quot; 4D Server to send a notification to all the connected 4D machines indicating that the Resources folder of the database has been modified so that they can synchronize their local Resources folder.</target>
            </trans-unit>
            <trans-unit resname="cmd1053" id="1053">
                <source></source>
                <target>DOM Get Root XML element ( elementRef ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1053" id="1053">
                <source></source>
                <target>returns a reference to the root element of the document to which the XML element that is passed in the elementRef parameter belongs</target>
            </trans-unit>
            <trans-unit resname="cmd1054" id="1054">
                <source></source>
                <target>SVG Find element ID by coordinates ( {* ;} pictureObject ; x ; y ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1054" id="1054">
                <source></source>
                <target>returns the ID (&quot;id&quot; or &quot;xml:id&quot; attribute) of the XML element found at the location set by the coordinates (x,y) in the SVG picture designated by the pictureObject parameter.</target>
            </trans-unit>
            <trans-unit resname="cmd1055" id="1055">
                <source></source>
                <target>SVG SET ATTRIBUTE ( {* ;} pictureObject ; element_ID ; attribName ; attribValue {; attribName2 ; attribValue2 ; ... ; attribNameN ; attribValueN} {; *})</target>
            </trans-unit>
            <trans-unit resname="desc1055" id="1055">
                <source></source>
                <target>used to modify the value of an existing attribute in the SVG rendering tree of a displayed image or in the internal DOM tree of an image</target>
            </trans-unit>
            <trans-unit resname="cmd1056" id="1056">
                <source></source>
                <target>SVG GET ATTRIBUTE ( {* ;} pictureObject ; element_ID ; attribName ; attribValue )</target>
            </trans-unit>
            <trans-unit resname="desc1056" id="1056">
                <source></source>
                <target>used to get the current value of the attribName attribute in an object or an SVG picture</target>
            </trans-unit>
            <trans-unit resname="cmd1058" id="1058">
                <source></source>
                <target>PHP Execute ( scriptPath {; functionName {; phpResult {; param} {; param2 ; ... ; paramN}}} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1058" id="1058">
                <source></source>
                <target>can be used to execute a PHP script or function</target>
            </trans-unit>
            <trans-unit resname="cmd1059" id="1059">
                <source></source>
                <target>PHP SET OPTION ( option ; value {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1059" id="1059">
                <source></source>
                <target>used to set specific options before calling the PHP Execute command</target>
            </trans-unit>
            <trans-unit resname="cmd1060" id="1060">
                <source></source>
                <target>PHP GET OPTION ( option ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1060" id="1060">
                <source></source>
                <target>used to find out the current value of an option relating to the execution of PHP scripts</target>
            </trans-unit>
            <trans-unit resname="cmd1061" id="1061">
                <source></source>
                <target>PHP GET FULL RESPONSE ( stdOut {; errLabels ; errValues} {; httpHeaderFields {; httpHeaderValues}} )</target>
            </trans-unit>
            <trans-unit resname="desc1061" id="1061">
                <source></source>
                <target>lets you obtain additional information about the response returned by the PHP interpreter</target>
            </trans-unit>
            <trans-unit resname="cmd1064" id="1064">
                <source></source>
                <target>SQL EXPORT SELECTION ( aTable ; folderPath {; numFiles {; fileLimitSize {; fieldLimitSize}}} )</target>
            </trans-unit>
            <trans-unit resname="desc1064" id="1064">
                <source></source>
                <target>exports in SQL format the records of the current selection of the 4D table designated by the aTable parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1065" id="1065">
                <source></source>
                <target>SQL EXPORT DATABASE ( folderPath {; numFiles {; fileLimitSize {; fieldLimitSize}}} ) </target>
            </trans-unit>
            <trans-unit resname="desc1065" id="1065">
                <source></source>
                <target>exports in SQL format all the records of all the tables in the database</target>
            </trans-unit>
            <trans-unit resname="cmd1066" id="1066">
                <source></source>
                <target>Generate UUID -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1066" id="1066">
                <source></source>
                <target>returns a new 32-character UUID identifier in non-canonical form.</target>
            </trans-unit>
            <trans-unit resname="cmd1067" id="1067">
                <source></source>
                <target>OBJECT Get enterable ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1067" id="1067">
                <source></source>
                <target>returns True if the object or group of objects designated by object has the enterable attribute; otherwise, it returns False</target>
            </trans-unit>
            <trans-unit resname="cmd1068" id="1068">
                <source></source>
                <target>OBJECT Get title ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1068" id="1068">
                <source></source>
                <target>returns the title (label) of the form object(s) designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1069" id="1069">
                <source></source>
                <target>OBJECT Get font ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1069" id="1069">
                <source></source>
                <target>returns the name of the character font used by the form object(s) designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1070" id="1070">
                <source></source>
                <target>OBJECT Get font size ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1070" id="1070">
                <source></source>
                <target>returns the size (in points) of the character font used by the form object(s) designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1071" id="1071">
                <source></source>
                <target>OBJECT Get font style ( * ; object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1071" id="1071">
                <source></source>
                <target>returns the current style of the character font used by the form object(s) designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1072" id="1072">
                <source></source>
                <target>OBJECT Get list name ( {* ;} object {; listType} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1072" id="1072">
                <source></source>
                <target>returns the name of the choice list associated with the object or group of objects designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1073" id="1073">
                <source></source>
                <target>OBJECT Get filter ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1073" id="1073">
                <source></source>
                <target>returns the name of any filter associated with the object or group of objects designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1074" id="1074">
                <source></source>
                <target>OBJECT GET RGB COLORS ( {* ;} object ; foregroundColor {; backgroundColor {; altBackgrndColor}} )</target>
            </trans-unit>
            <trans-unit resname="desc1074" id="1074">
                <source></source>
                <target>returns the foreground and background colors of the object or group of objects designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1075" id="1075">
                <source></source>
                <target>OBJECT Get visible ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1075" id="1075">
                <source></source>
                <target>returns True if the object or group of objects designated by object has the visible attribute and False otherwise</target>
            </trans-unit>
            <trans-unit resname="cmd1076" id="1076">
                <source></source>
                <target>OBJECT GET SCROLLBAR ( {* ;} object ; horizontal ; vertical )</target>
            </trans-unit>
            <trans-unit resname="desc1076" id="1076">
                <source></source>
                <target>used to find out the displayed/hidden status of the horizontal  and vertical scrollbars of the object or group of objects designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1077" id="1077">
                <source></source>
                <target>FORM GET HORIZONTAL RESIZING ( resize {; minWidth {; maxWidth}} )</target>
            </trans-unit>
            <trans-unit resname="desc1077" id="1077">
                <source></source>
                <target>returns the horizontal resizing properties of the current form in the resize, minWidth and maxWidth variables</target>
            </trans-unit>
            <trans-unit resname="cmd1078" id="1078">
                <source></source>
                <target>FORM GET VERTICAL RESIZING ( resize {; minHeight {; maxHeight}} )</target>
            </trans-unit>
            <trans-unit resname="desc1078" id="1078">
                <source></source>
                <target>returns the vertical resizing properties of the current form in the resize, minHeight and maxHeight variables</target>
            </trans-unit>
            <trans-unit resname="cmd1079" id="1079">
                <source></source>
                <target>OBJECT Get enabled ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1079" id="1079">
                <source></source>
                <target>returns True if the object or group of objects designated by object is enabled in the form and False if it is not enabled</target>
            </trans-unit>
            <trans-unit resname="cmd1080" id="1080">
                <source></source>
                <target>DOM Append XML child node ( elementRef ; childType ; childValue ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1080" id="1080">
                <source></source>
                <target>used to append the childValue value to the XML node designated by elementRef</target>
            </trans-unit>
            <trans-unit resname="cmd1081" id="1081">
                <source></source>
                <target>DOM GET XML CHILD NODES ( elementRef ; childTypesArr ; nodeRefsArr )</target>
            </trans-unit>
            <trans-unit resname="desc1081" id="1081">
                <source></source>
                <target>returns the types and references or values of all the child nodes of the XML element designated by elementRef.</target>
            </trans-unit>
            <trans-unit resname="cmd1082" id="1082">
                <source></source>
                <target>DOM Append XML element ( targetElementRef ; sourceElementRef ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1082" id="1082">
                <source></source>
                <target>used to add a new XML element to the children of the XML element whose reference is passed in the targetElementRef parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1083" id="1083">
                <source></source>
                <target>DOM Insert XML element ( targetElementRef ; sourceElementRef ; childIndex ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1083" id="1083">
                <source></source>
                <target>used to insert a new XML element among the child elements of the XML element whose reference is passed in the targetElementRef parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1084" id="1084">
                <source></source>
                <target>DOM REMOVE XML ATTRIBUTE ( elementRef ; attribName )</target>
            </trans-unit>
            <trans-unit resname="desc1084" id="1084">
                <source></source>
                <target>removes, if it exists, the attribute designated by attribName from the XML element whose reference is passed in the elementRef parameter. </target>
            </trans-unit>
            <trans-unit resname="cmd1085" id="1085">
                <source></source>
                <target>EXECUTE METHOD IN SUBFORM ( subformObject ; methodName {; return {; param} {; param2 ; ... ; paramN}} )</target>
            </trans-unit>
            <trans-unit resname="desc1085" id="1085">
                <source></source>
                <target>used to execute the methodName project method in the context of the subformObject subform object</target>
            </trans-unit>
            <trans-unit resname="cmd1086" id="1086">
                <source></source>
                <target>CALL SUBFORM CONTAINER ( event )</target>
            </trans-unit>
            <trans-unit resname="desc1086" id="1086">
                <source></source>
                <target>lets a subform instance send the event to the subform object that contains it</target>
            </trans-unit>
            <trans-unit resname="cmd1087" id="1087">
                <source></source>
                <target>OBJECT Get name {( selector )} -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1087" id="1087">
                <source></source>
                <target>returns the name of a form object</target>
            </trans-unit>
            <trans-unit resname="cmd1088" id="1088">
                <source></source>
                <target>DOM Get XML document ref ( elementRef ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1088" id="1088">
                <source></source>
                <target>used to recover the reference of the &quot;document&quot; element of the DOM tree whose reference you have passed in elementRef</target>
            </trans-unit>
            <trans-unit resname="cmd1089" id="1089">
                <source></source>
                <target>SQL EXECUTE SCRIPT ( scriptPath ; errorAction {; attribName ; attribValue} {; attribName2 ; attribValue2 ; ... ; attribNameN ; attribValueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1089" id="1089">
                <source></source>
                <target>used to execute a series of SQL statements placed in the script file designated by scriptPath</target>
            </trans-unit>
            <trans-unit resname="cmd1090" id="1090">
                <source></source>
                <target>XML SET OPTIONS ( elementRef | document  ; selector ; value {; selector2 ; value2 ; ... ; selectorN ; valueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1090" id="1090">
                <source></source>
                <target>used to modify the value of one or more XML options for the structure passed in the first parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1091" id="1091">
                <source></source>
                <target>XML DECODE ( xmlValue ; 4Dvar )</target>
            </trans-unit>
            <trans-unit resname="desc1091" id="1091">
                <source></source>
                <target>converts a value stored as an XML string into a 4D typed value</target>
            </trans-unit>
            <trans-unit resname="cmd1092" id="1092">
                <source></source>
                <target>ST Get plain text ( {* ;} object {; refMode} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1092" id="1092">
                <source></source>
                <target>removes any style tags from the text variable or field designated by the * and object parameters and returns the plain text</target>
            </trans-unit>
            <trans-unit resname="cmd1093" id="1093">
                <source></source>
                <target>ST SET ATTRIBUTES ( {* ;} object ; startSel ; endSel ; attribName ; attribValue {; attribName2 ; attribValue2 ; ... ; attribNameN ; attribValueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1093" id="1093">
                <source></source>
                <target>can be used to modify one or more style attributes in the form object(s) designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1094" id="1094">
                <source></source>
                <target>ST GET ATTRIBUTES ( {* ;} object ; startSel ; endSel ; attribName ; attribValue {; attribName2 ; attribValue2 ; ... ; attribNameN ; attribValueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1094" id="1094">
                <source></source>
                <target>used to recover the current value of a style attribute in a selection of text of the form object(s) designated by object</target>
            </trans-unit>
            <trans-unit resname="cmd1095" id="1095">
                <source></source>
                <target>Print object ( {* ;} object {; posX {; posY {; width {; height}}}} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1095" id="1095">
                <source></source>
                <target>lets you print the form object(s) designated by the object and * parameters, at the location set by the posX and posY parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1096" id="1096">
                <source></source>
                <target>XML GET OPTIONS ( elementRef | document  ; selector ; value {; selector2 ; value2 ; ... ; selectorN ; valueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1096" id="1096">
                <source></source>
                <target>used to get the current value of one or more XML parameters for the current session and the current user</target>
            </trans-unit>
            <trans-unit resname="cmd1097" id="1097">
                <source></source>
                <target>DOM Create XML element arrays ( elementRef ; xPath {; attribNamesArray ; attribValuesArray} {; attribNamesArray2 ; attribValuesArray2 ; ... ; attribNamesArrayN ; attribValuesArrayN} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1097" id="1097">
                <source></source>
                <target>used to add a new element in the elementRef XML element, as well as, optionally, attributes and their values in the form of arrays.</target>
            </trans-unit>
            <trans-unit resname="cmd1098" id="1098">
                <source></source>
                <target>LISTBOX SET HIERARCHY ( {* ;} object ; hierarchical {; hierarchy} ) </target>
            </trans-unit>
            <trans-unit resname="desc1098" id="1098">
                <source></source>
                <target>lets you configure the list box object designated by the object and * parameters in hierarchical or non-hierarchical mode</target>
            </trans-unit>
            <trans-unit resname="cmd1099" id="1099">
                <source></source>
                <target>LISTBOX GET HIERARCHY ( {* ;} object ; hierarchical {; hierarchy} ) </target>
            </trans-unit>
            <trans-unit resname="desc1099" id="1099">
                <source></source>
                <target>lets you find out the hierarchical properties of the list box object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1100" id="1100">
                <source></source>
                <target>LISTBOX EXPAND ( {* ;} object {; recursive {; selector {; line {; column}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc1100" id="1100">
                <source></source>
                <target>used to expand the break rows of the list box object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1101" id="1101">
                <source></source>
                <target>LISTBOX COLLAPSE ( {* ;} object {; recursive {; selector {; line {; column}}}} )</target>
            </trans-unit>
            <trans-unit resname="desc1101" id="1101">
                <source></source>
                <target>used to collapse the break rows of the list box object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1103" id="1103">
                <source></source>
                <target>FORM LOAD ( {aTable ;} form {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1103" id="1103">
                <source></source>
                <target>used to load the form in memory in the current process in order to print its data or parse its contents</target>
            </trans-unit>
            <trans-unit resname="cmd1104" id="1104">
                <source></source>
                <target>SET DATABASE LOCALIZATION ( languageCode {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1104" id="1104">
                <source></source>
                <target>used to modify the current language of the database for the current session</target>
            </trans-unit>
            <trans-unit resname="cmd1105" id="1105">
                <source></source>
                <target>Get localized document path ( relativePath ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1105" id="1105">
                <source></source>
                <target>returns the complete (absolute) pathname of a document designated by relativePath and located in a xxx.lproj folder</target>
            </trans-unit>
            <trans-unit resname="cmd1106" id="1106">
                <source></source>
                <target>Convert path system to POSIX ( systemPath {; *} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1106" id="1106">
                <source></source>
                <target>converts a pathname expressed with the system syntax as a pathname expressed with the POSIX (Unix) syntax</target>
            </trans-unit>
            <trans-unit resname="cmd1107" id="1107">
                <source></source>
                <target>Convert path POSIX to system ( posixPath {; *} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1107" id="1107">
                <source></source>
                <target>converts a pathname expressed with the POSIX (Unix) syntax into a pathname expressed with the system syntax</target>
            </trans-unit>
            <trans-unit resname="cmd1108" id="1108">
                <source></source>
                <target>SVG SHOW ELEMENT ( {* ;} pictureObject ; id {; margin} ) </target>
            </trans-unit>
            <trans-unit resname="desc1108" id="1108">
                <source></source>
                <target>moves the pictureObject SVG document in order to show the element whose &quot;id&quot; attribute is specified by the id parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1109" id="1109">
                <source></source>
                <target>SVG Find element IDs by rect ( {* ;} pictureObject ; x ; y ; width ; height ; arrIDs ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1109" id="1109">
                <source></source>
                <target>fills the Text or Alpha arrIDs array with the IDs (&quot;id&quot; or &quot;xml:id&quot; attribute) of the XML elements whose bounding rectangle intersects with the selection rectangle at the location specified by the x and y parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1110" id="1110">
                <source></source>
                <target>LISTBOX GET PRINT INFORMATION ( {* ;} object ; selector ; info )</target>
            </trans-unit>
            <trans-unit resname="desc1110" id="1110">
                <source></source>
                <target>returns the current information relative to the printing of the list box object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1111" id="1111">
                <source></source>
                <target>OBJECT DUPLICATE ( {* ;} object {; newName {; newVar {; boundTo {; moveH {; moveV {; resizeH {; resizeV}}}}}}} {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc1111" id="1111">
                <source></source>
                <target>used to create a copy of the object designated by the object parameter in the context of the form being executed (Application mode)</target>
            </trans-unit>
            <trans-unit resname="cmd1113" id="1113">
                <source></source>
                <target>Is picture file ( filePath {; *} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1113" id="1113">
                <source></source>
                <target>tests the file designated by the filePath parameter and returns True if it is a valid picture file</target>
            </trans-unit>
            <trans-unit resname="cmd1114" id="1114">
                <source></source>
                <target>OBJECT GET SCROLL POSITION ( {* ;} object ; vPosition {; hPosition} ) </target>
            </trans-unit>
            <trans-unit resname="desc1114" id="1114">
                <source></source>
                <target>returns, in the vPosition and hPosition parameters, information related to the position of the scroll bars of the form object designated by the * and object parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1115" id="1115">
                <source></source>
                <target>ST SET TEXT ( {* ;} object ; newText {; startSel {; endSel}} )</target>
            </trans-unit>
            <trans-unit resname="desc1115" id="1115">
                <source></source>
                <target>inserts the text passed in the newText parameter into the styled text field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1116" id="1116">
                <source></source>
                <target>ST Get text ( {* ;} object {; startSel {; endSel}} )  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1116" id="1116">
                <source></source>
                <target>returns the styled text found in the text field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1117" id="1117">
                <source></source>
                <target>LISTBOX SELECT BREAK ( {* ;} object ; row ; column {; action} )</target>
            </trans-unit>
            <trans-unit resname="desc1117" id="1117">
                <source></source>
                <target>used to select break rows in the list box object designated by the object and * parameters. The list box must be displayed in hierarchical mode</target>
            </trans-unit>
            <trans-unit resname="cmd1118" id="1118">
                <source></source>
                <target>GET MEMORY STATISTICS ( infoType ; arrNames ; arrValues ; arrCount )</target>
            </trans-unit>
            <trans-unit resname="desc1118" id="1118">
                <source></source>
                <target>recovers information related to the use of the data cache by 4D</target>
            </trans-unit>
            <trans-unit resname="cmd1121" id="1121">
                <source></source>
                <target>SET PICTURE METADATA ( picture ; metaName ; metaContents {; metaName2 ; metaContents2 ; ... ; metaNameN ; metaContentsN} )</target>
            </trans-unit>
            <trans-unit resname="desc1121" id="1121">
                <source></source>
                <target>lets you set or modify the contents of the metadata (or meta-tags) found in the picture (4D picture field or variable), when they are modifiable</target>
            </trans-unit>
            <trans-unit resname="cmd1122" id="1122">
                <source></source>
                <target>GET PICTURE METADATA ( picture ; metaName ; metaContents {; metaName2 ; metaContents2 ; ... ; metaNameN ; metaContentsN} )</target>
            </trans-unit>
            <trans-unit resname="desc1122" id="1122">
                <source></source>
                <target>used to read the contents of the metadata (or meta-tags) found in picture (4D picture field or variable)</target>
            </trans-unit>
            <trans-unit resname="cmd1123" id="1123">
                <source></source>
                <target>OBJECT SET ENABLED ( {* ;} object ; active )</target>
            </trans-unit>
            <trans-unit resname="desc1123" id="1123">
                <source></source>
                <target>used to enable or disable the object or group of objects specified by object in the current form</target>
            </trans-unit>
            <trans-unit resname="cmd1124" id="1124">
                <source></source>
                <target>OBJECT Get pointer {( selector {; objectName {; subformName}})} -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc1124" id="1124">
                <source></source>
                <target>returns a pointer to the variable of a form object</target>
            </trans-unit>
            <trans-unit resname="cmd1125" id="1125">
                <source></source>
                <target>GET MISSING TABLE NAMES ( missingTables )</target>
            </trans-unit>
            <trans-unit resname="desc1125" id="1125">
                <source></source>
                <target>returns the names of all the missing tables of the current database in the missingTables array</target>
            </trans-unit>
            <trans-unit resname="cmd1126" id="1126">
                <source></source>
                <target>REGENERATE MISSING TABLE ( tableName )</target>
            </trans-unit>
            <trans-unit resname="desc1126" id="1126">
                <source></source>
                <target>rebuilds the missing table whose name is passed in the tableName parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1127" id="1127">
                <source></source>
                <target>Get table fragmentation ( aTable ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc1127" id="1127">
                <source></source>
                <target>returns the percentage of logical fragmentation for the records of the table designated by the aTable parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1129" id="1129">
                <source></source>
                <target>ASSERT ( boolExpression {; messageText} )</target>
            </trans-unit>
            <trans-unit resname="desc1129" id="1129">
                <source></source>
                <target>evaluates the boolExpression assertion passed in parameter and, if it returns false, stops the code execution with an error message</target>
            </trans-unit>
            <trans-unit resname="cmd1130" id="1130">
                <source></source>
                <target>Get assert enabled -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1130" id="1130">
                <source></source>
                <target>returns True or False according to whether or not assertions are enabled in the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1131" id="1131">
                <source></source>
                <target>SET ASSERT ENABLED ( assertions {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1131" id="1131">
                <source></source>
                <target>used to disable or re-enable any assertions inserted into the 4D code of the application</target>
            </trans-unit>
            <trans-unit resname="cmd1132" id="1132">
                <source></source>
                <target>Asserted ( boolExpression {; messageText} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1132" id="1132">
                <source></source>
                <target>used to place an assertion in the code of a method and return the result of this evaluation</target>
            </trans-unit>
            <trans-unit resname="cmd1133" id="1133">
                <source></source>
                <target>Get external data path ( aField ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1133" id="1133">
                <source></source>
                <target>returns the full pathname of the external storage file for the data of the field passed in the aField parameter, for the current record</target>
            </trans-unit>
            <trans-unit resname="cmd1134" id="1134">
                <source></source>
                <target>SET EXTERNAL DATA PATH ( aField ; path )</target>
            </trans-unit>
            <trans-unit resname="desc1134" id="1134">
                <source></source>
                <target>sets or modifies, for the current record, the external storage location for the aField field passed as parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1135" id="1135">
                <source></source>
                <target>RELOAD EXTERNAL DATA ( aField )</target>
            </trans-unit>
            <trans-unit resname="desc1135" id="1135">
                <source></source>
                <target>reloads the contents in memory of an external storage file associated with a BLOB, Picture, Text or Object type field</target>
            </trans-unit>
            <trans-unit resname="cmd1136" id="1136">
                <source></source>
                <target>ST SET PLAIN TEXT ( {* ;} object ; newText {; startSel {; endSel}} )</target>
            </trans-unit>
            <trans-unit resname="desc1136" id="1136">
                <source></source>
                <target>inserts the text passed in the newText parameter into the styled text field or variable designated by the object  parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1137" id="1137">
                <source></source>
                <target>Get subrecord key ( idField ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1137" id="1137">
                <source></source>
                <target>returns the internal key of a former subtable relation</target>
            </trans-unit>
            <trans-unit resname="cmd1138" id="1138">
                <source></source>
                <target>OBJECT SET SUBFORM ( {* ;} object {; aTable}; detailSubform {; listSubform} )</target>
            </trans-unit>
            <trans-unit resname="desc1138" id="1138">
                <source></source>
                <target>dynamically modifies the detail form as well as, optionally, the screen list form associated with the subform object designated by the *, object parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1139" id="1139">
                <source></source>
                <target>OBJECT GET SUBFORM ( {* ;} object ; tablePtr ; detailSubform {; listSubform} )</target>
            </trans-unit>
            <trans-unit resname="desc1139" id="1139">
                <source></source>
                <target>gets the name(s) of the form(s) associated with the subform object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1140" id="1140">
                <source></source>
                <target>LISTBOX SET FOOTER CALCULATION ( {* ;} object ; calculation )</target>
            </trans-unit>
            <trans-unit resname="desc1140" id="1140">
                <source></source>
                <target>sets the automatic calculation associated with the footer of the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1141" id="1141">
                <source></source>
                <target>GET TEXT KEYWORDS ( text ; arrKeywords {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1141" id="1141">
                <source></source>
                <target>splits all the text into individual words and creates an item in the arrKeywords text array for each word</target>
            </trans-unit>
            <trans-unit resname="cmd1142" id="1142">
                <source></source>
                <target>GET PICTURE KEYWORDS ( picture ; arrKeywords {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1142" id="1142">
                <source></source>
                <target>returns, in the arrKeywords array, the list of keywords associated with the picture passed as parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1143" id="1143">
                <source></source>
                <target>LISTBOX SET HEADERS HEIGHT ( {* ;} object ; height {; unit} ) </target>
            </trans-unit>
            <trans-unit resname="desc1143" id="1143">
                <source></source>
                <target>modifies by programming the height of the header row in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1144" id="1144">
                <source></source>
                <target>LISTBOX Get headers height ( {* ;} object {; unit} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1144" id="1144">
                <source></source>
                <target>returns the height of the header row in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1145" id="1145">
                <source></source>
                <target>LISTBOX SET FOOTERS HEIGHT ( {* ;} object ; height {; unit} ) </target>
            </trans-unit>
            <trans-unit resname="desc1145" id="1145">
                <source></source>
                <target>modifies by programming the height of the footer row in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1146" id="1146">
                <source></source>
                <target>LISTBOX Get footers height ( {* ;} object {; unit} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1146" id="1146">
                <source></source>
                <target>returns the height of the footer row in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1147" id="1147">
                <source></source>
                <target>Generate digest ( param ; algorithm ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1147" id="1147">
                <source></source>
                <target>returns the digest key of a BLOB or text after application of an encryption algorithm</target>
            </trans-unit>
            <trans-unit resname="cmd1148" id="1148">
                <source></source>
                <target>OBJECT GET SUBFORM CONTAINER SIZE ( width ; height )</target>
            </trans-unit>
            <trans-unit resname="desc1148" id="1148">
                <source></source>
                <target>returns the width and height (in pixels) of a &quot;current&quot; subform object, displayed in the parent form</target>
            </trans-unit>
            <trans-unit resname="cmd1149" id="1149">
                <source></source>
                <target>TEXT TO ARRAY ( varText ; arrText ; width ; fontName ; fontSize {; fontStyle {; *}} )</target>
            </trans-unit>
            <trans-unit resname="desc1149" id="1149">
                <source></source>
                <target>transforms a text variable into a text array</target>
            </trans-unit>
            <trans-unit resname="cmd1150" id="1150">
                <source></source>
                <target>LISTBOX Get footer calculation ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1150" id="1150">
                <source></source>
                <target>returns the type of calculation associated with the footer area of the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1151" id="1151">
                <source></source>
                <target>LISTBOX SET LOCKED COLUMNS ( {* ;} object ; numColumns )</target>
            </trans-unit>
            <trans-unit resname="desc1151" id="1151">
                <source></source>
                <target>locks numColumns columns (starting from the first on the left) in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1152" id="1152">
                <source></source>
                <target>LISTBOX Get locked columns ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1152" id="1152">
                <source></source>
                <target>returns the number of locked columns in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1153" id="1153">
                <source></source>
                <target>LISTBOX SET STATIC COLUMNS ( {* ;} object ; numColumn )</target>
            </trans-unit>
            <trans-unit resname="desc1153" id="1153">
                <source></source>
                <target>sets numColumns columns as static (starting from the first on the left) in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1154" id="1154">
                <source></source>
                <target>LISTBOX Get static columns ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1154" id="1154">
                <source></source>
                <target>returns the number of static columns in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1155" id="1155">
                <source></source>
                <target>GET QUERY DESTINATION ( destinationType ; destinationObject ; destinationPtr )</target>
            </trans-unit>
            <trans-unit resname="desc1155" id="1155">
                <source></source>
                <target>returns the current destination of query results for the process underway</target>
            </trans-unit>
            <trans-unit resname="cmd1156" id="1156">
                <source></source>
                <target>Get query limit -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1156" id="1156">
                <source></source>
                <target>returns the limit for the number of records that a query may find in the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1157" id="1157">
                <source></source>
                <target>HTTP Get ( url ; response {; headerNames ; headerValues}{; *} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1157" id="1157">
                <source></source>
                <target>sends an HTTP GET request directly to a specific URL and processes the HTTP server response</target>
            </trans-unit>
            <trans-unit resname="cmd1158" id="1158">
                <source></source>
                <target>HTTP Request ( httpMethod ; url ; contents ; response {; headerNames ; headerValues}{; *} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1158" id="1158">
                <source></source>
                <target>enables all types of HTTP requests to be sent to a specific URL and processes the HTTP server response</target>
            </trans-unit>
            <trans-unit resname="cmd1159" id="1159">
                <source></source>
                <target>HTTP GET OPTION ( option ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1159" id="1159">
                <source></source>
                <target>returns the current value of the HTTP options (options used by client for next request triggered by the HTTP Get or HTTP Request commands)</target>
            </trans-unit>
            <trans-unit resname="cmd1160" id="1160">
                <source></source>
                <target>HTTP SET OPTION ( option ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1160" id="1160">
                <source></source>
                <target>sets different options that are used during the next HTTP request triggered by the HTTP Get or HTTP Request commands</target>
            </trans-unit>
            <trans-unit resname="cmd1161" id="1161">
                <source></source>
                <target>HTTP AUTHENTICATE ( name ; password {; authMethod} {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc1161" id="1161">
                <source></source>
                <target>enables HTTP requests to servers requiring authentication of the client application</target>
            </trans-unit>
            <trans-unit resname="cmd1162" id="1162">
                <source></source>
                <target>WEB Get Current Session ID  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1162" id="1162">
                <source></source>
                <target>returns the ID of the session open for the Web request</target>
            </trans-unit>
            <trans-unit resname="cmd1163" id="1163">
                <source></source>
                <target>METHOD GET PATHS ( {folderName ;} methodType ; arrPaths {; stamp}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1163" id="1163">
                <source></source>
                <target>fills the arrPaths array with the internal pathnames and names of methods in the application that are of the type specified by the methodType parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1164" id="1164">
                <source></source>
                <target>METHOD Get path ( methodType {; aTable}{; objectName{; formObjectName}}{; *} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1164" id="1164">
                <source></source>
                <target>returns the full internal pathname of a method</target>
            </trans-unit>
            <trans-unit resname="cmd1165" id="1165">
                <source></source>
                <target>METHOD RESOLVE PATH ( path ; methodType ; ptrTable ; objectName ; formObjectName {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1165" id="1165">
                <source></source>
                <target>parses the internal path name passed in the path parameter and returns its different components in the methodType, ptrTable, objectName, and formObjectName parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1166" id="1166">
                <source></source>
                <target>METHOD GET NAMES ( arrNames {; filter}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1166" id="1166">
                <source></source>
                <target>fills the arrNames array with the names of project methods created in the application</target>
            </trans-unit>
            <trans-unit resname="cmd1167" id="1167">
                <source></source>
                <target>FORM GET NAMES ( {aTable ;} arrNames {; filter {; marker}}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1167" id="1167">
                <source></source>
                <target>fills the arrNames array with the names of forms in the application</target>
            </trans-unit>
            <trans-unit resname="cmd1168" id="1168">
                <source></source>
                <target>METHOD GET PATHS FORM ( {aTable ;} arrPaths {; filter}{; stamp}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1168" id="1168">
                <source></source>
                <target>fills the arrPaths array with the internal pathnames and names of the methods for all form objects as well as form methods</target>
            </trans-unit>
            <trans-unit resname="cmd1169" id="1169">
                <source></source>
                <target>METHOD Get attribute ( path ; attribType {; *} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1169" id="1169">
                <source></source>
                <target>returns the value of the attribType attribute for the project method designated by the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1170" id="1170">
                <source></source>
                <target>METHOD GET MODIFICATION DATE ( path ; modDate ; modTime {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc1170" id="1170">
                <source></source>
                <target>returns, in the modDate and modTime parameters, the dates and times of the last modification of the method(s) designated by the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1171" id="1171">
                <source></source>
                <target>Get picture file name ( picture ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1171" id="1171">
                <source></source>
                <target>returns the current default name of the picture passed as parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1172" id="1172">
                <source></source>
                <target>SET PICTURE FILE NAME ( picture ; fileName )</target>
            </trans-unit>
            <trans-unit resname="desc1172" id="1172">
                <source></source>
                <target>sets or changes the default file name for the picture passed as parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1173" id="1173">
                <source></source>
                <target>OBJECT SET AUTO SPELLCHECK ( {* ;} object ; autoSpellcheck )</target>
            </trans-unit>
            <trans-unit resname="desc1173" id="1173">
                <source></source>
                <target>sets or dynamically modifies the status of the Auto spellcheck option for the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1174" id="1174">
                <source></source>
                <target>OBJECT Get auto spellcheck ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1174" id="1174">
                <source></source>
                <target>returns the status of the Auto spellcheck option for the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1175" id="1175">
                <source></source>
                <target>OBJECT SET RESIZING OPTIONS ( {* ;} object ; horizontal ; vertical )</target>
            </trans-unit>
            <trans-unit resname="desc1175" id="1175">
                <source></source>
                <target>sets or dynamically modifies the resizing options for the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1176" id="1176">
                <source></source>
                <target>OBJECT GET RESIZING OPTIONS ( {* ;} object ; horizontal ; vertical )</target>
            </trans-unit>
            <trans-unit resname="desc1176" id="1176">
                <source></source>
                <target>returns the current resizing options for the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1177" id="1177">
                <source></source>
                <target>OBJECT SET FOCUS RECTANGLE INVISIBLE ( {* ;} object ; invisible )</target>
            </trans-unit>
            <trans-unit resname="desc1177" id="1177">
                <source></source>
                <target>sets or dynamically modifies the visibility option for the focus rectangle of the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1178" id="1178">
                <source></source>
                <target>OBJECT Get focus rectangle invisible ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1178" id="1178">
                <source></source>
                <target>returns the status of the visibility option for the focus rectangle of the object(s) designated by the object and * parameters for the current process </target>
            </trans-unit>
            <trans-unit resname="cmd1179" id="1179">
                <source></source>
                <target>OBJECT SET KEYBOARD LAYOUT ( {* ;} object ; languageCode )</target>
            </trans-unit>
            <trans-unit resname="desc1179" id="1179">
                <source></source>
                <target>sets or dynamically modifies the keyboard layout associated with the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1180" id="1180">
                <source></source>
                <target>OBJECT Get keyboard layout ( {* ;} object ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1180" id="1180">
                <source></source>
                <target>returns the current keyboard layout associated with the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1181" id="1181">
                <source></source>
                <target>OBJECT SET HELP TIP ( {* ;} object ; helpTip )</target>
            </trans-unit>
            <trans-unit resname="desc1181" id="1181">
                <source></source>
                <target>sets or dynamically modifies the help tip associated with the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1182" id="1182">
                <source></source>
                <target>OBJECT Get help tip ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1182" id="1182">
                <source></source>
                <target>returns the help message associated with the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1183" id="1183">
                <source></source>
                <target>OBJECT SET DRAG AND DROP OPTIONS ( {* ;} object ; draggable ; automaticDrag ; droppable ; automaticDrop )</target>
            </trans-unit>
            <trans-unit resname="desc1183" id="1183">
                <source></source>
                <target>sets or dynamically modifies the drag and drop options for the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1184" id="1184">
                <source></source>
                <target>OBJECT GET DRAG AND DROP OPTIONS ( {* ;} object ; draggable ; automaticDrag ; droppable ; automaticDrop )</target>
            </trans-unit>
            <trans-unit resname="desc1184" id="1184">
                <source></source>
                <target>returns the drag and drop options for the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1185" id="1185">
                <source></source>
                <target>OBJECT SET SHORTCUT ( {* ;} object ; key {; modifiers} ) </target>
            </trans-unit>
            <trans-unit resname="desc1185" id="1185">
                <source></source>
                <target>sets or dynamically modifies the keyboard shortcut associated with the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1186" id="1186">
                <source></source>
                <target>OBJECT GET SHORTCUT ( {* ;} object ; key ; modifiers )</target>
            </trans-unit>
            <trans-unit resname="desc1186" id="1186">
                <source></source>
                <target>returns the keyboard shortcut associated with the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1187" id="1187">
                <source></source>
                <target>OBJECT SET VERTICAL ALIGNMENT ( {* ;} object ; alignment )</target>
            </trans-unit>
            <trans-unit resname="desc1187" id="1187">
                <source></source>
                <target>modifies the type of vertical alignment applied to the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1188" id="1188">
                <source></source>
                <target>OBJECT Get vertical alignment ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1188" id="1188">
                <source></source>
                <target>returns a value indicating the type of vertical alignment applied to the object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1189" id="1189">
                <source></source>
                <target>METHOD GET COMMENTS ( path ; comments {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1189" id="1189">
                <source></source>
                <target>returns, in the comments parameter, the documentation of the method(s) designated by the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1190" id="1190">
                <source></source>
                <target>METHOD GET CODE ( path ; code {; option} {; *} ) </target>
            </trans-unit>
            <trans-unit resname="desc1190" id="1190">
                <source></source>
                <target>returns, in the code parameter, the contents of the method(s) designated by the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1191" id="1191">
                <source></source>
                <target>METHOD SET ACCESS MODE ( mode )</target>
            </trans-unit>
            <trans-unit resname="desc1191" id="1191">
                <source></source>
                <target>sets the behavior for 4D when you attempt to write access an object already loaded for modification by another user or process</target>
            </trans-unit>
            <trans-unit resname="cmd1192" id="1192">
                <source></source>
                <target>METHOD SET ATTRIBUTE ( path ; attribType ; attribValue {; attribType2 ; attribValue2 ; ... ; attribTypeN ; attribValueN}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1192" id="1192">
                <source></source>
                <target>sets the value(s) of the attribType attribute(s) for the project method designated by the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1193" id="1193">
                <source></source>
                <target>METHOD SET COMMENTS ( path ; comments {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1193" id="1193">
                <source></source>
                <target>replaces the documentation of the method(s) designated by the path parameter by those specified in the comments parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1194" id="1194">
                <source></source>
                <target>METHOD SET CODE ( path ; code {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1194" id="1194">
                <source></source>
                <target>modifies the code of the method(s) designated by the path parameter with the contents passed in the code parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1195" id="1195">
                <source></source>
                <target>GET LIST ITEM PARAMETER ARRAYS ( {* ;} list ; itemRef | * ; arrSelection {; arrValues} )</target>
            </trans-unit>
            <trans-unit resname="desc1195" id="1195">
                <source></source>
                <target>lets you retrieve all the parameters in a single call (as well as, optionally, their values) that are associated with the itemRef item in the hierarchical list whose reference or object name is passed in the list parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1196" id="1196">
                <source></source>
                <target>Equal pictures ( picture1 ; picture2 ; mask ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1196" id="1196">
                <source></source>
                <target>precisely compares both the dimensions and the contents of two pictures</target>
            </trans-unit>
            <trans-unit resname="cmd1197" id="1197">
                <source></source>
                <target>Get print preview  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1197" id="1197">
                <source></source>
                <target>returns True if the SET PRINT PREVIEW command was called with the True value in the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1198" id="1198">
                <source></source>
                <target>Is in print preview  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1198" id="1198">
                <source></source>
                <target>returns True if the Preview on Screen option is checked in the printing dialog box and False otherwise</target>
            </trans-unit>
            <trans-unit resname="cmd1199" id="1199">
                <source></source>
                <target>LISTBOX GET GRID ( {* ;} object ; horizontal ; vertical )</target>
            </trans-unit>
            <trans-unit resname="desc1199" id="1199">
                <source></source>
                <target>returns the shown/hidden status of the horizontal and/or vertical lines making up the grid of the list box object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1200" id="1200">
                <source></source>
                <target>LISTBOX GET GRID COLORS ( {* ;} object ; hColor ; vColor )</target>
            </trans-unit>
            <trans-unit resname="desc1200" id="1200">
                <source></source>
                <target>returns the color of the horizontal and vertical lines making up the grid of the list box object designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1201" id="1201">
                <source></source>
                <target>Current method path  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1201" id="1201">
                <source></source>
                <target>returns the internal pathname of the database method, trigger, project method, form method or object method being executed</target>
            </trans-unit>
            <trans-unit resname="cmd1202" id="1202">
                <source></source>
                <target>LISTBOX Get column formula ( {* ;} object ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1202" id="1202">
                <source></source>
                <target>returns the formula associated with the list box column designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1203" id="1203">
                <source></source>
                <target>LISTBOX SET COLUMN FORMULA ( {* ;} object ; formula ; dataType )</target>
            </trans-unit>
            <trans-unit resname="desc1203" id="1203">
                <source></source>
                <target>modifies the formula associated with the column of the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1204" id="1204">
                <source></source>
                <target>SPELL GET DICTIONARY LIST ( langID ; langFiles ; langNames )</target>
            </trans-unit>
            <trans-unit resname="desc1204" id="1204">
                <source></source>
                <target>returns, in the langID, langFiles and langNames arrays, the IDs, file names and language names corresponding to the Hunspell dictionary files installed on the machine</target>
            </trans-unit>
            <trans-unit resname="cmd1205" id="1205">
                <source></source>
                <target>SPELL Get current dictionary  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1205" id="1205">
                <source></source>
                <target>returns the ID number of the dictionary being used</target>
            </trans-unit>
            <trans-unit resname="cmd1206" id="1206">
                <source></source>
                <target>METHOD GET FOLDERS ( arrNames {; filter}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1206" id="1206">
                <source></source>
                <target>returns, in the arrNames array, the names of folders created on the Home page of the 4D Explorer</target>
            </trans-unit>
            <trans-unit resname="cmd1207" id="1207">
                <source></source>
                <target>WEB GET SESSION EXPIRATION ( sessionID ; expDate ; expTime )</target>
            </trans-unit>
            <trans-unit resname="desc1207" id="1207">
                <source></source>
                <target>returns the expiration information for the cookie of the session whose UUID you passed in sessionID</target>
            </trans-unit>
            <trans-unit resname="cmd1208" id="1208">
                <source></source>
                <target>WEB CLOSE SESSION ( sessionID )</target>
            </trans-unit>
            <trans-unit resname="desc1208" id="1208">
                <source></source>
                <target>invalidates an existing session designated by the sessionID parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1209" id="1209">
                <source></source>
                <target>WEB GET OPTION ( selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1209" id="1209">
                <source></source>
                <target>gets the current value of an option for the 4D Web server operation</target>
            </trans-unit>
            <trans-unit resname="cmd1210" id="1210">
                <source></source>
                <target>WEB SET OPTION ( selector ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1210" id="1210">
                <source></source>
                <target>modifies the current value of various options concerning the functioning of the 4D Web server</target>
            </trans-unit>
            <trans-unit resname="cmd1211" id="1211">
                <source></source>
                <target>WEB Get body part count -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1211" id="1211">
                <source></source>
                <target>returns the number of parts making up the body received</target>
            </trans-unit>
            <trans-unit resname="cmd1212" id="1212">
                <source></source>
                <target>WEB GET BODY PART ( part ; contents ; name ; mimeType ; fileName )</target>
            </trans-unit>
            <trans-unit resname="desc1212" id="1212">
                <source></source>
                <target>when called in the context of a Web process, parses the &quot;body&quot; part of a multi-part request</target>
            </trans-unit>
            <trans-unit resname="cmd1213" id="1213">
                <source></source>
                <target>METHOD OPEN PATH ( path {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1213" id="1213">
                <source></source>
                <target>opens, in the 4D Method editor, the method whose internal pathname is passed in the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1214" id="1214">
                <source></source>
                <target>SPELL ADD TO USER DICTIONARY ( words )</target>
            </trans-unit>
            <trans-unit resname="desc1214" id="1214">
                <source></source>
                <target>adds one or more words to the current user dictionary</target>
            </trans-unit>
            <trans-unit resname="cmd1215" id="1215">
                <source></source>
                <target>SPELL CHECK TEXT ( text ; errPos ; errLength ; checkPos ; arrSuggest )</target>
            </trans-unit>
            <trans-unit resname="desc1215" id="1215">
                <source></source>
                <target>checks the contents of the text parameter beginning from the checkPos character and returns the position of the first unknown word it finds (if any)</target>
            </trans-unit>
            <trans-unit resname="cmd1216" id="1216">
                <source></source>
                <target>C_OBJECT ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc1216" id="1216">
                <source></source>
                <target>assigns the Object type to all the variables that are specified</target>
            </trans-unit>
            <trans-unit resname="cmd1217" id="1217">
                <source></source>
                <target>JSON Stringify ( value {; *} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1217" id="1217">
                <source></source>
                <target>converts the value parameter into a JSON string</target>
            </trans-unit>
            <trans-unit resname="cmd1218" id="1218">
                <source></source>
                <target>JSON Parse ( jsonString {; type}{; *} ) -&gt; Object, Mixed</target>
            </trans-unit>
            <trans-unit resname="desc1218" id="1218">
                <source></source>
                <target>parses the contents of a  JSON-formatted string and extracts values that you can store in a 4D field or variable</target>
            </trans-unit>
            <trans-unit resname="cmd1219" id="1219">
                <source></source>
                <target>JSON PARSE ARRAY ( jsonString ; array )</target>
            </trans-unit>
            <trans-unit resname="desc1219" id="1219">
                <source></source>
                <target>parses the contents of a JSON-formatted string and puts the data extracted into the array parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1220" id="1220">
                <source></source>
                <target>OB SET ( object ; property ; value {; property2 ; value2 ; ... ; propertyN ; valueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1220" id="1220">
                <source></source>
                <target>creates or modifies one or more property/value pairs in the language object designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1221" id="1221">
                <source></source>
                <target>ARRAY OBJECT ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc1221" id="1221">
                <source></source>
                <target>creates and/or resizes an array of language Object type elements in memory</target>
            </trans-unit>
            <trans-unit resname="cmd1222" id="1222">
                <source></source>
                <target>ARRAY BLOB ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc1222" id="1222">
                <source></source>
                <target>creates and/or resizes an array of Blob type elements in memory</target>
            </trans-unit>
            <trans-unit resname="cmd1223" id="1223">
                <source></source>
                <target>ARRAY TIME ( arrayName ; size {; size2} )</target>
            </trans-unit>
            <trans-unit resname="desc1223" id="1223">
                <source></source>
                <target>creates and/or resizes an array of Time type elements in memory</target>
            </trans-unit>
            <trans-unit resname="cmd1224" id="1224">
                <source></source>
                <target>OB Get ( object ; property {; type} ) -&gt; Expression</target>
            </trans-unit>
            <trans-unit resname="desc1224" id="1224">
                <source></source>
                <target>returns the current value of the property of the object, optionally converted into the type specified</target>
            </trans-unit>
            <trans-unit resname="cmd1225" id="1225">
                <source></source>
                <target>OB Copy ( object {; resolvePtrs | {; option {; groupWith}}} )  -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1225" id="1225">
                <source></source>
                <target>returns an object containing a complete (deep) copy of the properties, sub-objects and values for the object</target>
            </trans-unit>
            <trans-unit resname="cmd1226" id="1226">
                <source></source>
                <target>OB REMOVE ( object ; property )</target>
            </trans-unit>
            <trans-unit resname="desc1226" id="1226">
                <source></source>
                <target>removes the property of the language object designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1227" id="1227">
                <source></source>
                <target>OB SET ARRAY ( object ; property ; array )</target>
            </trans-unit>
            <trans-unit resname="desc1227" id="1227">
                <source></source>
                <target>defines the array to be associated with the property in the language object designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1228" id="1228">
                <source></source>
                <target>JSON Stringify array ( array {; *} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1228" id="1228">
                <source></source>
                <target>converts the 4D array array into a serialized JSON array</target>
            </trans-unit>
            <trans-unit resname="cmd1229" id="1229">
                <source></source>
                <target>OB GET ARRAY ( object ; property ; array )</target>
            </trans-unit>
            <trans-unit resname="desc1229" id="1229">
                <source></source>
                <target>retrieves, in array, the array of values stored in the property of the language object designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1230" id="1230">
                <source></source>
                <target>OB Get type ( object ; property ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1230" id="1230">
                <source></source>
                <target>returns the type of value associated with the property of the language object</target>
            </trans-unit>
            <trans-unit resname="cmd1231" id="1231">
                <source></source>
                <target>OB Is defined ( object {; property} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1231" id="1231">
                <source></source>
                <target>returns True if object or property is defined, and False otherwise</target>
            </trans-unit>
            <trans-unit resname="cmd1232" id="1232">
                <source></source>
                <target>OB GET PROPERTY NAMES ( object ; arrProperties {; arrTypes} )</target>
            </trans-unit>
            <trans-unit resname="desc1232" id="1232">
                <source></source>
                <target>returns, in arrProperties, the names of the properties contained in the language object designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1233" id="1233">
                <source></source>
                <target>OB SET NULL ( object ; property )</target>
            </trans-unit>
            <trans-unit resname="desc1233" id="1233">
                <source></source>
                <target>stores the null value in the language object designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1234" id="1234">
                <source></source>
                <target>Selection to JSON ( aTable {; aField}{; aField2 ; ... ; aFieldN}{; template})  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1234" id="1234">
                <source></source>
                <target>returns a string containing a JSON array with as many elements as there are records in the current selection of aTable</target>
            </trans-unit>
            <trans-unit resname="cmd1235" id="1235">
                <source></source>
                <target>JSON TO SELECTION ( aTable ; jsonArray )</target>
            </trans-unit>
            <trans-unit resname="desc1235" id="1235">
                <source></source>
                <target>copies the contents of an array of JSON objects jsonArray to the selection of records of aTable</target>
            </trans-unit>
            <trans-unit resname="cmd1236" id="1236">
                <source></source>
                <target>Document to text ( fileName {; charSet {; breakMode}} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1236" id="1236">
                <source></source>
                <target>lets you retrieve the contents of a file directly on disk in a 4D text variable or text field</target>
            </trans-unit>
            <trans-unit resname="cmd1237" id="1237">
                <source></source>
                <target>TEXT TO DOCUMENT ( fileName ; text {; charSet {; breakMode}} ) </target>
            </trans-unit>
            <trans-unit resname="desc1237" id="1237">
                <source></source>
                <target>lets you write the text directly to a disk file</target>
            </trans-unit>
            <trans-unit resname="cmd1238" id="1238">
                <source></source>
                <target>OBJECT GET EVENTS ( {* ;} object ; arrEvents )</target>
            </trans-unit>
            <trans-unit resname="desc1238" id="1238">
                <source></source>
                <target>gets the current configuration of the form events for the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1239" id="1239">
                <source></source>
                <target>OBJECT SET EVENTS ( {* ;} object ; arrEvents ; mode )</target>
            </trans-unit>
            <trans-unit resname="desc1239" id="1239">
                <source></source>
                <target>modifies, for the current process, the configuration of the form events of the form or object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1240" id="1240">
                <source></source>
                <target>OBJECT SET PRINT VARIABLE FRAME ( {* ;} object ; variableFrame {; fixedSubform} ) </target>
            </trans-unit>
            <trans-unit resname="desc1240" id="1240">
                <source></source>
                <target>modifies the Print Variable Frame property of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1241" id="1241">
                <source></source>
                <target>OBJECT GET PRINT VARIABLE FRAME ( {* ;} object ; variableFrame {; fixedSubform} ) </target>
            </trans-unit>
            <trans-unit resname="desc1241" id="1241">
                <source></source>
                <target>gets the current configuration of the variable frame print options for the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1242" id="1242">
                <source></source>
                <target>OBJECT SET MINIMUM VALUE ( {* ;} object ; minValue )</target>
            </trans-unit>
            <trans-unit resname="desc1242" id="1242">
                <source></source>
                <target>modifies the minimum value of the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1243" id="1243">
                <source></source>
                <target>OBJECT GET MINIMUM VALUE ( {* ;} object ; minValue )</target>
            </trans-unit>
            <trans-unit resname="desc1243" id="1243">
                <source></source>
                <target> returns, in the minValue variable, the current minimum value of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1244" id="1244">
                <source></source>
                <target>OBJECT SET MAXIMUM VALUE ( {* ;} object ; maxValue )</target>
            </trans-unit>
            <trans-unit resname="desc1244" id="1244">
                <source></source>
                <target>modifies the maximum value of the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1245" id="1245">
                <source></source>
                <target>OBJECT GET MAXIMUM VALUE ( {* ;} object ; maxValue )</target>
            </trans-unit>
            <trans-unit resname="desc1245" id="1245">
                <source></source>
                <target>returns, in the maxValue variable, the current maximum value of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1246" id="1246">
                <source></source>
                <target>OBJECT SET INDICATOR TYPE ( {* ;} object ; indicator )</target>
            </trans-unit>
            <trans-unit resname="desc1246" id="1246">
                <source></source>
                <target>modifies the type of progress indicator for the thermometer(s) designated by the object and * parameters in the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1247" id="1247">
                <source></source>
                <target>OBJECT Get indicator type ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1247" id="1247">
                <source></source>
                <target>returns the current indicator type assigned to the thermometer(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1248" id="1248">
                <source></source>
                <target>OBJECT SET COORDINATES ( {* ;} object ; left ; top {; right ; bottom} )</target>
            </trans-unit>
            <trans-unit resname="desc1248" id="1248">
                <source></source>
                <target>modifies the location and, optionally, the size of the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1249" id="1249">
                <source></source>
                <target>OBJECT SET THREE STATES CHECKBOX ( {* ;} object ; threeStates )</target>
            </trans-unit>
            <trans-unit resname="desc1249" id="1249">
                <source></source>
                <target>modifies, for the current process, the &quot;Three-States&quot; property of the checkbox(es) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1250" id="1250">
                <source></source>
                <target>OBJECT Get three states checkbox ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1250" id="1250">
                <source></source>
                <target>returns the current state of the &quot;Three-States&quot; property for the checkbox(es) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1251" id="1251">
                <source></source>
                <target>OBJECT SET CONTEXT MENU ( {* ;} object ; contextMenu )</target>
            </trans-unit>
            <trans-unit resname="desc1251" id="1251">
                <source></source>
                <target>enables or disables, for the  current process, the association of a context menu by default with the  object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1252" id="1252">
                <source></source>
                <target>OBJECT Get context menu ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1252" id="1252">
                <source></source>
                <target>returns the current state of the &quot;Context Menu&quot; option for the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1253" id="1253">
                <source></source>
                <target>OBJECT SET MULTILINE ( {* ;} object ; multiline )</target>
            </trans-unit>
            <trans-unit resname="desc1253" id="1253">
                <source></source>
                <target>modifies the &quot;Multiline&quot; property of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1254" id="1254">
                <source></source>
                <target>OBJECT Get multiline ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1254" id="1254">
                <source></source>
                <target>returns the current state of the &quot;Multiline&quot; option for the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1255" id="1255">
                <source></source>
                <target>LIST OF STYLE SHEETS ( arrStyleSheets )</target>
            </trans-unit>
            <trans-unit resname="desc1255" id="1255">
                <source></source>
                <target>returns the list of application style sheets in the arrStyleSheets array</target>
            </trans-unit>
            <trans-unit resname="cmd1256" id="1256">
                <source></source>
                <target>GET STYLE SHEET INFO ( styleSheetName ; font ; size ; styles )</target>
            </trans-unit>
            <trans-unit resname="desc1256" id="1256">
                <source></source>
                <target>returns the current configuration of the style sheet designated in the styleSheetName parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1257" id="1257">
                <source></source>
                <target>OBJECT SET STYLE SHEET ( {* ;} object ; styleSheetName )</target>
            </trans-unit>
            <trans-unit resname="desc1257" id="1257">
                <source></source>
                <target>modifies, for the current process, the style sheet associated with the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1258" id="1258">
                <source></source>
                <target>OBJECT Get style sheet ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1258" id="1258">
                <source></source>
                <target>returns the name of the style sheet associated with the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1259" id="1259">
                <source></source>
                <target>OBJECT SET ACTION ( {* ;} object ; action )</target>
            </trans-unit>
            <trans-unit resname="desc1259" id="1259">
                <source></source>
                <target>modifies the standard action associated with the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1260" id="1260">
                <source></source>
                <target>_o_OBJECT Get action ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1260" id="1260">
                <source></source>
                <target>(deprecated in v16 R3) returns the code of the standard action associated with the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1261" id="1261">
                <source></source>
                <target>OBJECT Is styled text ( {* ;} object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1261" id="1261">
                <source></source>
                <target>returns True when the &quot;Multi-style&quot; option is checked for the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1262" id="1262">
                <source></source>
                <target>OBJECT SET BORDER STYLE ( {* ;} object ; borderStyle )</target>
            </trans-unit>
            <trans-unit resname="desc1262" id="1262">
                <source></source>
                <target>modifies the border line style of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1263" id="1263">
                <source></source>
                <target>OBJECT Get border style ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1263" id="1263">
                <source></source>
                <target>returns the border line style of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1264" id="1264">
                <source></source>
                <target>OBJECT SET DATA SOURCE ( {* ;} object ; dataSource )</target>
            </trans-unit>
            <trans-unit resname="desc1264" id="1264">
                <source></source>
                <target>modifies the data source of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1265" id="1265">
                <source></source>
                <target>OBJECT Get data source ( {* ;} object ) -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc1265" id="1265">
                <source></source>
                <target>returns the current data source of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1266" id="1266">
                <source></source>
                <target>OBJECT SET LIST BY REFERENCE ( {* ;} object {; listType}; list )</target>
            </trans-unit>
            <trans-unit resname="desc1266" id="1266">
                <source></source>
                <target>defines or replaces the list associated with the object(s) designated by the object and * parameters, with the hierarchical list referenced in the list parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1267" id="1267">
                <source></source>
                <target>OBJECT Get list reference ( {* ;} object {; listType} ) -&gt; ListRef</target>
            </trans-unit>
            <trans-unit resname="desc1267" id="1267">
                <source></source>
                <target>returns the reference number  (ListRef) of the hierarchical list associated with the object or group  of objects designated by object and *</target>
            </trans-unit>
            <trans-unit resname="cmd1268" id="1268">
                <source></source>
                <target>LISTBOX SET ROW FONT STYLE ( {* ;} object ; row ; style )</target>
            </trans-unit>
            <trans-unit resname="desc1268" id="1268">
                <source></source>
                <target>sets a font style for a row or a cell in the array type list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1269" id="1269">
                <source></source>
                <target>LISTBOX Get row font style ( {* ;} object ; row ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1269" id="1269">
                <source></source>
                <target>returns the font style of a row or a cell in the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1270" id="1270">
                <source></source>
                <target>LISTBOX SET ROW COLOR ( {* ;} object ; row ; color {; colorType} )</target>
            </trans-unit>
            <trans-unit resname="desc1270" id="1270">
                <source></source>
                <target>sets the color for a row or a cell in the array list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1271" id="1271">
                <source></source>
                <target>LISTBOX Get row color as number ( {* ;} object ; row {; colorType} )  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1271" id="1271">
                <source></source>
                <target>returns the color of a row or a cell in the list box designated by the object and * parameters as a number in 0x00rrggbb format</target>
            </trans-unit>
            <trans-unit resname="cmd1272" id="1272">
                <source></source>
                <target>SET DRAG ICON ( icon {; horOffset {; vertOffset}} )</target>
            </trans-unit>
            <trans-unit resname="desc1272" id="1272">
                <source></source>
                <target>associates the icon picture  with the cursor during drag and drop operations that are managed by  programming</target>
            </trans-unit>
            <trans-unit resname="cmd1273" id="1273">
                <source></source>
                <target>LISTBOX DUPLICATE COLUMN ( {* ;} object ; colPosition ; colName ; colVariable ; headerName ; headerVar {; footerName ; footerVar} ) </target>
            </trans-unit>
            <trans-unit resname="desc1273" id="1273">
                <source></source>
                <target>duplicates the column designated by the object and * parameters by programming in the context of the form being executed (Application mode)</target>
            </trans-unit>
            <trans-unit resname="cmd1274" id="1274">
                <source></source>
                <target>LISTBOX MOVE COLUMN ( {* ;} object ; colPosition )</target>
            </trans-unit>
            <trans-unit resname="desc1274" id="1274">
                <source></source>
                <target>moves the column designated by the object and * parameters by programming in the context of the form being executed (Application mode)</target>
            </trans-unit>
            <trans-unit resname="cmd1277" id="1277">
                <source></source>
                <target>GET ACTIVITY SNAPSHOT ( arrActivities | arrUUID ; arrStart ; arrDuration ; arrInfo {; arrDetails}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1277" id="1277">
                <source></source>
                <target>returns a single or several arrays describing operations in progress on the 4D data</target>
            </trans-unit>
            <trans-unit resname="cmd1278" id="1278">
                <source></source>
                <target>LISTBOX Get array ( {* ;} object ; arrType ) -&gt; Pointer</target>
            </trans-unit>
            <trans-unit resname="desc1278" id="1278">
                <source></source>
                <target>returns a pointer to the arrType array of the list box or list box  column designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1279" id="1279">
                <source></source>
                <target>LISTBOX SET ARRAY ( {* ;} object ; arrType ; arrPtr )</target>
            </trans-unit>
            <trans-unit resname="desc1279" id="1279">
                <source></source>
                <target>associates an arrType array with the list box or list box column designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1280" id="1280">
                <source></source>
                <target>ST INSERT URL ( {* ;} object ; urlText ; urlAddress {; startSel {; endSel}} )</target>
            </trans-unit>
            <trans-unit resname="desc1280" id="1280">
                <source></source>
                <target>inserts a URL link in the styled text field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1281" id="1281">
                <source></source>
                <target>ST INSERT EXPRESSION ( {* ;} object ; expression {; startSel {; endSel}} )</target>
            </trans-unit>
            <trans-unit resname="desc1281" id="1281">
                <source></source>
                <target>inserts a reference to the expression in the styled text field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1282" id="1282">
                <source></source>
                <target>ST FREEZE EXPRESSIONS ( {* ;} object {; startSel {; endSel}}{; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1282" id="1282">
                <source></source>
                <target>&quot;freezes&quot; the contents of expressions found in the multi-style text or 4D Write Pro field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1283" id="1283">
                <source></source>
                <target>OBJECT Get text orientation ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1283" id="1283">
                <source></source>
                <target>returns the current orientation value applied to the text of the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1284" id="1284">
                <source></source>
                <target>OBJECT SET TEXT ORIENTATION ( {* ;} object ; orientation )</target>
            </trans-unit>
            <trans-unit resname="desc1284" id="1284">
                <source></source>
                <target>modifies the orientation of the object(s) designated by the object and * parameters for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1285" id="1285">
                <source></source>
                <target>ST COMPUTE EXPRESSIONS ( {* ;} object {; startSel {; endSel}} ) </target>
            </trans-unit>
            <trans-unit resname="desc1285" id="1285">
                <source></source>
                <target>updates the dynamic 4D expressions found in the multi-style or 4D Write Pro field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1286" id="1286">
                <source></source>
                <target>ST Get content type ( {* ;} object {; startSel {; endSel {; startBlock {; endBlock}}}} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1286" id="1286">
                <source></source>
                <target>returns the type of content found in the styled text field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1287" id="1287">
                <source></source>
                <target>ST Get expression ( {* ;} object {; startSel {; endSel}} )  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1287" id="1287">
                <source></source>
                <target>returns the first expression  found in the current selection of the styled text field or variable  designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1288" id="1288">
                <source></source>
                <target>ST GET URL ( {* ;} object ; urlText ; urlAddress {; startSel {; endSel}} )</target>
            </trans-unit>
            <trans-unit resname="desc1288" id="1288">
                <source></source>
                <target>returns the text label and  address of the first URL detected in the styled text field or variable  designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1289" id="1289">
                <source></source>
                <target>ST SET OPTIONS ( {* ;} object ; option ; value {; option2 ; value2 ; ... ; optionN ; valueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1289" id="1289">
                <source></source>
                <target>modifies one or more operating options for the styled text field or variable designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1290" id="1290">
                <source></source>
                <target>ST GET OPTIONS ( {* ;} object ; option ; value {; option2 ; value2 ; ... ; optionN ; valueN} )</target>
            </trans-unit>
            <trans-unit resname="desc1290" id="1290">
                <source></source>
                <target>gets the current value of  one or more operating options for the styled text field or variable  designated by the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1291" id="1291">
                <source></source>
                <target>SET UPDATE FOLDER ( folderPath {; silentErrors} )</target>
            </trans-unit>
            <trans-unit resname="desc1291" id="1291">
                <source></source>
                <target>specifies the folder containing the update of the current merged 4D application</target>
            </trans-unit>
            <trans-unit resname="cmd1292" id="1292">
                <source></source>
                <target>RESTART 4D {( time {; message} )}</target>
            </trans-unit>
            <trans-unit resname="desc1292" id="1292">
                <source></source>
                <target>restarts the current 4D application</target>
            </trans-unit>
            <trans-unit resname="cmd1293" id="1293">
                <source></source>
                <target>PAUSE INDEXES ( aTable )</target>
            </trans-unit>
            <trans-unit resname="desc1293" id="1293">
                <source></source>
                <target>temporarily disables all the indexes of aTable, except for the index of the primary key</target>
            </trans-unit>
            <trans-unit resname="cmd1294" id="1294">
                <source></source>
                <target>RESUME INDEXES ( aTable {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1294" id="1294">
                <source></source>
                <target>reactivates all the indexes of aTable when they have been paused previously using the PAUSE INDEXES command.</target>
            </trans-unit>
            <trans-unit resname="cmd1295" id="1295">
                <source></source>
                <target>OBJECT SET PLACEHOLDER ( {* ;} object ; placeholderText )</target>
            </trans-unit>
            <trans-unit resname="desc1295" id="1295">
                <source></source>
                <target>associates placeholder text with the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1296" id="1296">
                <source></source>
                <target>OBJECT Get placeholder ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1296" id="1296">
                <source></source>
                <target>returns the placeholder text associated with the object(s) designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1297" id="1297">
                <source></source>
                <target>OB Is empty ( object ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1297" id="1297">
                <source></source>
                <target>returns True if object is undefined or empty, and False if object is defined (initialized) and contains at least one property</target>
            </trans-unit>
            <trans-unit resname="cmd1298" id="1298">
                <source></source>
                <target>Current form name  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1298" id="1298">
                <source></source>
                <target>returns the name of the current form defined for the process</target>
            </trans-unit>
            <trans-unit resname="cmd1299" id="1299">
                <source></source>
                <target>FORM UNLOAD </target>
            </trans-unit>
            <trans-unit resname="desc1299" id="1299">
                <source></source>
                <target>releases from memory the current form designated using the OPEN PRINTING FORM command</target>
            </trans-unit>
            <trans-unit resname="cmd1300" id="1300">
                <source></source>
                <target>OBJECT Get type ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1300" id="1300">
                <source></source>
                <target>returns the type of the object designated by the object and * parameters in the current form</target>
            </trans-unit>
            <trans-unit resname="cmd1301" id="1301">
                <source></source>
                <target>Get last update log path -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1301" id="1301">
                <source></source>
                <target>returns the complete  pathname of the most recent update log file found on the machine where  it is called</target>
            </trans-unit>
            <trans-unit resname="cmd1302" id="1302">
                <source></source>
                <target>LISTBOX GET OBJECTS ( {* ;} object ; arrObjectNames )</target>
            </trans-unit>
            <trans-unit resname="desc1302" id="1302">
                <source></source>
                <target>returns an array containing the names of each object making up the list box designated by the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1303" id="1303">
                <source></source>
                <target>OPEN FONT PICKER </target>
            </trans-unit>
            <trans-unit resname="desc1303" id="1303">
                <source></source>
                <target>displays the system font picker dialog box</target>
            </trans-unit>
            <trans-unit resname="cmd1304" id="1304">
                <source></source>
                <target>OPEN COLOR PICKER {( textOrBackground )}</target>
            </trans-unit>
            <trans-unit resname="desc1304" id="1304">
                <source></source>
                <target>displays the system color picker dialog box</target>
            </trans-unit>
            <trans-unit resname="cmd1305" id="1305">
                <source></source>
                <target>SET RECENT FONTS ( fontsArray )</target>
            </trans-unit>
            <trans-unit resname="desc1305" id="1305">
                <source></source>
                <target>modifies the list of fonts displayed in the context menu of the &quot;recent fonts&quot;</target>
            </trans-unit>
            <trans-unit resname="cmd1306" id="1306">
                <source></source>
                <target>HTTP SET CERTIFICATES FOLDER ( certificatesFolder )</target>
            </trans-unit>
            <trans-unit resname="desc1306" id="1306">
                <source></source>
                <target>modifies the active client certificates folder for all processes of the current session</target>
            </trans-unit>
            <trans-unit resname="cmd1307" id="1307">
                <source></source>
                <target>HTTP Get certificates folder  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1307" id="1307">
                <source></source>
                <target>returns the complete pathname of the active client certificates folder</target>
            </trans-unit>
            <trans-unit resname="cmd1310" id="1310">
                <source></source>
                <target>IMPORT STRUCTURE ( xmlStructure )</target>
            </trans-unit>
            <trans-unit resname="desc1310" id="1310">
                <source></source>
                <target>imports, into the current database, the XML definition of the 4D database structure passed in the xmlStructure parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1311" id="1311">
                <source></source>
                <target>EXPORT STRUCTURE ( xmlStructure )</target>
            </trans-unit>
            <trans-unit resname="desc1311" id="1311">
                <source></source>
                <target>exports, in xmlStructure, the structure definition of the current 4D database in XML format</target>
            </trans-unit>
            <trans-unit resname="cmd1312" id="1312">
                <source></source>
                <target>INTEGRATE MIRROR LOG FILE ( pathName ; operationNum {; mode {; errObject}} ) </target>
            </trans-unit>
            <trans-unit resname="desc1312" id="1312">
                <source></source>
                <target>integrates the log file designated by pathName into a 4D Server database, after the operationNum operation</target>
            </trans-unit>
            <trans-unit resname="cmd1313" id="1313">
                <source></source>
                <target>WEB Is server running -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1313" id="1313">
                <source></source>
                <target>returns True if the 4D built-in Web server is running, and False if the Web server is off</target>
            </trans-unit>
            <trans-unit resname="cmd1314" id="1314">
                <source></source>
                <target>Get database measures {( options )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1314" id="1314">
                <source></source>
                <target>allows you to get detailed information about 4D database engine events</target>
            </trans-unit>
            <trans-unit resname="cmd1315" id="1315">
                <source></source>
                <target>_o_MOBILE Return selection ( aTable ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1315" id="1315">
                <source></source>
                <target>returns a JSON object that contains the current selection of aTable transformed into a Wakanda-compliant entity collection</target>
            </trans-unit>
            <trans-unit resname="cmd1316" id="1316">
                <source></source>
                <target>Get locked records info ( aTable ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1316" id="1316">
                <source></source>
                <target>returns an object containing different information about the currently locked record(s) in aTable</target>
            </trans-unit>
            <trans-unit resname="cmd1320" id="1320">
                <source></source>
                <target>QR NEW AREA ( ptr )</target>
            </trans-unit>
            <trans-unit resname="desc1320" id="1320">
                <source></source>
                <target>creates a new Quick Report area and stores its reference number in the longint variable referenced by the ptr pointer</target>
            </trans-unit>
            <trans-unit resname="cmd1321" id="1321">
                <source></source>
                <target>OPEN DATABASE ( filePath )</target>
            </trans-unit>
            <trans-unit resname="desc1321" id="1321">
                <source></source>
                <target>closes the current 4D database and opens on-the-fly the database defined by filePath</target>
            </trans-unit>
            <trans-unit resname="cmd1323" id="1323">
                <source></source>
                <target>OBJECT SET CORNER RADIUS ( {* ;} object ; radius )</target>
            </trans-unit>
            <trans-unit resname="desc1323" id="1323">
                <source></source>
                <target>modifies the radius of corners for the rounded rectangle object(s) whose name(s) you passed in the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1324" id="1324">
                <source></source>
                <target>OBJECT Get corner radius ( {* ;} object ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1324" id="1324">
                <source></source>
                <target>returns the current value of the corner radius for the rounded rectangle object whose name is passed in the object parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1325" id="1325">
                <source></source>
                <target>QR MOVE COLUMN ( area ; column ; newPos )</target>
            </trans-unit>
            <trans-unit resname="desc1325" id="1325">
                <source></source>
                <target>moves the column currently found at the column position to the newPos position</target>
            </trans-unit>
            <trans-unit resname="cmd1326" id="1326">
                <source></source>
                <target>LDAP LOGIN ( url ; login ; password {; digest} ) </target>
            </trans-unit>
            <trans-unit resname="desc1326" id="1326">
                <source></source>
                <target>opens a read-only connection to the LDAP server specified in the url parameter with the login and password identifiers provided</target>
            </trans-unit>
            <trans-unit resname="cmd1327" id="1327">
                <source></source>
                <target>LDAP LOGOUT</target>
            </trans-unit>
            <trans-unit resname="desc1327" id="1327">
                <source></source>
                <target>closes the connection with an LDAP server in the current process (if applicable)</target>
            </trans-unit>
            <trans-unit resname="cmd1328" id="1328">
                <source></source>
                <target>LDAP Search ( dnRootEntry ; filter {; scope {; attributes {; attributesAsArray}}} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1328" id="1328">
                <source></source>
                <target>searches in the target LDAP server for the first occurrence matching the criteria defined</target>
            </trans-unit>
            <trans-unit resname="cmd1329" id="1329">
                <source></source>
                <target>LDAP SEARCH ALL ( dnRootEntry ; arrResult ; filter {; scope {; attributes {; attributesAsArray}}} )</target>
            </trans-unit>
            <trans-unit resname="desc1329" id="1329">
                <source></source>
                <target>searches in the target LDAP server for all occurrences  matching the criteria defined</target>
            </trans-unit>
            <trans-unit resname="cmd1330" id="1330">
                <source></source>
                <target>LISTBOX GET CELL COORDINATES ( {* ;} object ; column ; row ; left ; top ; right ; bottom )</target>
            </trans-unit>
            <trans-unit resname="desc1330" id="1330">
                <source></source>
                <target>returns in variables or fields the left, top, right and bottom coordinates (in points) of the cell designated by the column and row parameters, in the list box defined by * and object</target>
            </trans-unit>
            <trans-unit resname="cmd1331" id="1331">
                <source></source>
                <target>QUERY BY ATTRIBUTE ( {aTable}{;}{conjOp ;} objectField ; attributePath ; queryOp ; value {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1331" id="1331">
                <source></source>
                <target>looks for records matching the query string defined using the objectField, attributePath, queryOp and value parameters, and returns a selection of records for aTable</target>
            </trans-unit>
            <trans-unit resname="cmd1332" id="1332">
                <source></source>
                <target>Clickcount  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1332" id="1332">
                <source></source>
                <target>returns, in the context of a  mouse click event, the number of times the user has clicked in rapid  succession with the same mouse button</target>
            </trans-unit>
            <trans-unit resname="cmd1333" id="1333">
                <source></source>
                <target>Find in sorted array ( array ; value ; &gt; or &lt; {; posFirst {; posLast}} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1333" id="1333">
                <source></source>
                <target>returns true if at least one element in the sorted array matches the value, and optionally returns position(s) of matched element(s)</target>
            </trans-unit>
            <trans-unit resname="cmd1334" id="1334">
                <source></source>
                <target>METHOD GET ATTRIBUTES ( path ; attributes {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1334" id="1334">
                <source></source>
                <target>returns, in attributes, the current value of all attributes for the method(s) specified in the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1335" id="1335">
                <source></source>
                <target>METHOD SET ATTRIBUTES ( path ; attributes {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1335" id="1335">
                <source></source>
                <target>allows you to set the attributes values for the method(s) specified in the path parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1336" id="1336">
                <source></source>
                <target>Refresh license -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1336" id="1336">
                <source></source>
                <target>updates the current 4D Server license.</target>
            </trans-unit>
            <trans-unit resname="cmd1350" id="1350">
                <source></source>
                <target>WEB Get session process count ( sessionID ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1350" id="1350">
                <source></source>
                <target>returns the number of running processes attached to the session whose UUID you passed in sessionID</target>
            </trans-unit>
            <trans-unit resname="cmd1352" id="1352">
                <source></source>
                <target>LOG FILE TO JSON ( destFolderPath {; maxSize {; logPath {; fieldAtt}}} ) </target>
            </trans-unit>
            <trans-unit resname="desc1352" id="1352">
                <source></source>
                <target>saves the current log file, or any specified log file, in JSON format</target>
            </trans-unit>
            <trans-unit resname="cmd1355" id="1355">
                <source></source>
                <target>Current client authentication {( domain ; protocol )} -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1355" id="1355">
                <source></source>
                <target>asks the Windows Active  Directory server to authenticate the current client and, if successful,  returns the Windows login name for this client (session identifier)</target>
            </trans-unit>
            <trans-unit resname="cmd1362" id="1362">
                <source></source>
                <target>FONT STYLE LIST ( fontFamily ; fontStyleList ; fontNameList )</target>
            </trans-unit>
            <trans-unit resname="desc1362" id="1362">
                <source></source>
                <target>returns the list of font styles and the list of complete font names supported by the font family defined in the fontFamily  parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1365" id="1365">
                <source></source>
                <target>CONVERT COORDINATES ( xCoord ; yCoord ; from ; to )</target>
            </trans-unit>
            <trans-unit resname="desc1365" id="1365">
                <source></source>
                <target>converts the (x;y) coordinates  of a point from one coordinate system to another</target>
            </trans-unit>
            <trans-unit resname="cmd1385" id="1385">
                <source></source>
                <target>SUSPEND TRANSACTION</target>
            </trans-unit>
            <trans-unit resname="desc1385" id="1385">
                <source></source>
                <target>pauses the current transaction in  the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1386" id="1386">
                <source></source>
                <target>RESUME TRANSACTION</target>
            </trans-unit>
            <trans-unit resname="desc1386" id="1386">
                <source></source>
                <target>resumes the transaction that was  paused using SUSPEND TRANSACTION at the corresponding level in the  current process</target>
            </trans-unit>
            <trans-unit resname="cmd1387" id="1387">
                <source></source>
                <target>Active transaction -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1387" id="1387">
                <source></source>
                <target>returns True if the current process is in transaction, and this transaction is not suspended</target>
            </trans-unit>
            <trans-unit resname="cmd1389" id="1389">
                <source></source>
                <target>CALL WORKER ( process ; method {; param}{; param2 ; ... ; paramN} )</target>
            </trans-unit>
            <trans-unit resname="desc1389" id="1389">
                <source></source>
                <target>creates or calls the worker process whose name or ID you passed in process, and requests the execution of the method in its context with the optional param parameter(s)</target>
            </trans-unit>
            <trans-unit resname="cmd1390" id="1390">
                <source></source>
                <target>KILL WORKER {( process )}</target>
            </trans-unit>
            <trans-unit resname="desc1390" id="1390">
                <source></source>
                <target>posts a  message to the worker process whose name or number you passed in process, asking it to ignore any pending messages  and to terminate its execution as soon as the current task ends</target>
            </trans-unit>
            <trans-unit resname="cmd1391" id="1391">
                <source></source>
                <target>CALL FORM ( window ; method {; param}{; param2 ; ... ; paramN} )</target>
            </trans-unit>
            <trans-unit resname="desc1391" id="1391">
                <source></source>
                <target>executes the project method whose name you passed in method with the optional param(s) in the context of a form displayed in a window, regardless of the process owning the window</target>
            </trans-unit>
            <trans-unit resname="cmd1392" id="1392">
                <source></source>
                <target>Current process name  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1392" id="1392">
                <source></source>
                <target>returns the name of the process within which this command is called</target>
            </trans-unit>
            <trans-unit resname="cmd1395" id="1395">
                <source></source>
                <target>DISTINCT ATTRIBUTE PATHS ( objectField ; pathArray )</target>
            </trans-unit>
            <trans-unit resname="desc1395" id="1395">
                <source></source>
                <target>returns the list of distinct paths found in the indexed object field you passed in objectField for the current selection of the table to which this field belongs</target>
            </trans-unit>
            <trans-unit resname="cmd1397" id="1397">
                <source></source>
                <target>DISTINCT ATTRIBUTE VALUES ( objectField ; path ; valuesArray )</target>
            </trans-unit>
            <trans-unit resname="desc1397" id="1397">
                <source></source>
                <target>crée et remplit le tableau tabValeurs avec les valeurs uniques présentes dans l&#39;attribut cheminAttribut du champ objet champObjet et ce, pour la sélection courante de la table à laquelle appartient le champ</target>
            </trans-unit>
            <trans-unit resname="cmd1399" id="1399">
                <source></source>
                <target>SET CACHE SIZE ( size {; minFreeSize} )</target>
            </trans-unit>
            <trans-unit resname="desc1399" id="1399">
                <source></source>
                <target>sets the database cache size dynamically and, optionally, sets the mininum byte size at which to start to free memory</target>
            </trans-unit>
            <trans-unit resname="cmd1400" id="1400">
                <source></source>
                <target>SET TABLE CACHE PRIORITY ( aTable ; priority )</target>
            </trans-unit>
            <trans-unit resname="desc1400" id="1400">
                <source></source>
                <target>sets a specific priority to the data related to aTable in cache for all processes in the current session</target>
            </trans-unit>
            <trans-unit resname="cmd1401" id="1401">
                <source></source>
                <target>SET INDEX CACHE PRIORITY ( aField ; priority )</target>
            </trans-unit>
            <trans-unit resname="desc1401" id="1401">
                <source></source>
                <target>sets a specific priority to the index(es) related to the aField in cache for all processes in the current session</target>
            </trans-unit>
            <trans-unit resname="cmd1402" id="1402">
                <source></source>
                <target>Cache info {( dbFilter )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1402" id="1402">
                <source></source>
                <target>returns an object that contains detailed information about the current cache contents (used memory, loaded tables and indexes, etc.)</target>
            </trans-unit>
            <trans-unit resname="cmd1406" id="1406">
                <source></source>
                <target>GET PICTURE FORMATS ( picture ; codecIDs )</target>
            </trans-unit>
            <trans-unit resname="desc1406" id="1406">
                <source></source>
                <target>returns an array of all the codec IDs (picture formats) contained in the picture passed as parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1407" id="1407">
                <source></source>
                <target>ORDER BY ATTRIBUTE ( {aTable ;} objectField ; attributePath ; &gt; or &lt; {; objectField2 ; attributePath2 ; &gt; or &lt;2 ; ... ; objectFieldN ; attributePathN ; &gt; or &lt;N} {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1407" id="1407">
                <source></source>
                <target>sorts (reorders) the records of the current selection of aTable for the current process based on the contents of the objectField&#39;s attributePath</target>
            </trans-unit>
            <trans-unit resname="cmd1408" id="1408">
                <source></source>
                <target>LISTBOX Get row height ( {* ;} object ; row ) -&gt; Integer</target>
            </trans-unit>
            <trans-unit resname="desc1408" id="1408">
                <source></source>
                <target>returns the current height of the specified row in the list box object designated using the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1409" id="1409">
                <source></source>
                <target>LISTBOX SET ROW HEIGHT ( {* ;} object ; row ; height )</target>
            </trans-unit>
            <trans-unit resname="desc1409" id="1409">
                <source></source>
                <target>allows you to modify the height of the specified row in the list box object designated using the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1418" id="1418">
                <source></source>
                <target>Get 4D file ( file {; *} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1418" id="1418">
                <source></source>
                <target>returns the pathname to the 4D environment file specified by the file parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1422" id="1422">
                <source></source>
                <target>Is waiting mouse up  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1422" id="1422">
                <source></source>
                <target>returns True if the current object has been clicked and the mouse button has not been released, while the parent window has the focus</target>
            </trans-unit>
            <trans-unit resname="cmd1424" id="1424">
                <source></source>
                <target>QUERY SELECTION BY ATTRIBUTE ( {aTable}{;}{conjOp ;} objectField ; attributePath ; queryOp ; value {; *} )</target>
            </trans-unit>
            <trans-unit resname="desc1424" id="1424">
                <source></source>
                <target>works and performs the same actions as QUERY BY ATTRIBUTE. The difference between these two commands is the scope of the query</target>
            </trans-unit>
            <trans-unit resname="cmd1425" id="1425">
                <source></source>
                <target>SET BLOBS CACHE PRIORITY ( aTable ; priority )</target>
            </trans-unit>
            <trans-unit resname="desc1425" id="1425">
                <source></source>
                <target>sets a specific priority to the &quot;blobs&quot; data related to aTable in cache for all processes in the current session</target>
            </trans-unit>
            <trans-unit resname="cmd1426" id="1426">
                <source></source>
                <target>Get adjusted table cache priority ( aTable ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1426" id="1426">
                <source></source>
                <target>returns the adjusted cache priority value applied in cache by the cache manager for the aTable scalar data</target>
            </trans-unit>
            <trans-unit resname="cmd1427" id="1427">
                <source></source>
                <target>Get adjusted index cache priority ( aField ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1427" id="1427">
                <source></source>
                <target>returns the current adjusted cache priority value applied by the cache manager for the aField index(es)</target>
            </trans-unit>
            <trans-unit resname="cmd1428" id="1428">
                <source></source>
                <target>Get adjusted blobs cache priority ( aTable ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1428" id="1428">
                <source></source>
                <target>returns the current adjusted cache priority value applied in cache by the cache manager for the aTable &quot;blobs&quot; data</target>
            </trans-unit>
            <trans-unit resname="cmd1429" id="1429">
                <source></source>
                <target>ADJUST TABLE CACHE PRIORITY ( aTable ; priority )</target>
            </trans-unit>
            <trans-unit resname="desc1429" id="1429">
                <source></source>
                <target>modifies the priority value of the data related to aTable in cache for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1430" id="1430">
                <source></source>
                <target>ADJUST INDEX CACHE PRIORITY ( aField ; priority )</target>
            </trans-unit>
            <trans-unit resname="desc1430" id="1430">
                <source></source>
                <target>modifies the priority value of the index(es) related to the aField in cache for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1431" id="1431">
                <source></source>
                <target>ADJUST BLOBS CACHE PRIORITY ( aTable ; priority )</target>
            </trans-unit>
            <trans-unit resname="desc1431" id="1431">
                <source></source>
                <target>modifies the priority of the &quot;blobs&quot; data related to aTable in cache for the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1432" id="1432">
                <source></source>
                <target>Get cache size  -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc1432" id="1432">
                <source></source>
                <target>returns the current database cache size in bytes</target>
            </trans-unit>
            <trans-unit resname="cmd1433" id="1433">
                <source></source>
                <target>Print settings to BLOB ( printSettings ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1433" id="1433">
                <source></source>
                <target>saves the current 4D print settings in the printSettings BLOB</target>
            </trans-unit>
            <trans-unit resname="cmd1434" id="1434">
                <source></source>
                <target>BLOB to print settings ( printSettings {; params} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1434" id="1434">
                <source></source>
                <target>replaces the current 4D print settings with the parameters stored in the printSettings BLOB</target>
            </trans-unit>
            <trans-unit resname="cmd1439" id="1439">
                <source></source>
                <target>INVOKE ACTION ( action {; target} )</target>
            </trans-unit>
            <trans-unit resname="desc1439" id="1439">
                <source></source>
                <target>triggers the standard action defined by the action parameter, optionally in the target context</target>
            </trans-unit>
            <trans-unit resname="cmd1440" id="1440">
                <source></source>
                <target>LISTBOX SET PROPERTY ( {* ;} object ; property ; value )</target>
            </trans-unit>
            <trans-unit resname="desc1440" id="1440">
                <source></source>
                <target>sets the value for the property of the list box or list box column specified using the object and * parameters.</target>
            </trans-unit>
            <trans-unit resname="cmd1442" id="1442">
                <source></source>
                <target>Get action info ( action {; target} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1442" id="1442">
                <source></source>
                <target>returns several information, including availability and status, about the defined action in the target, according to the current application context</target>
            </trans-unit>
            <trans-unit resname="cmd1445" id="1445">
                <source></source>
                <target>Timestamp -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1445" id="1445">
                <source></source>
                <target>returns the current UTC time in ISO format with milliseconds, i.e. yyyy-MM-ddTHH:mm:ss.SSSZ</target>
            </trans-unit>
            <trans-unit resname="cmd1452" id="1452">
                <source></source>
                <target>Open datastore ( connectionInfo ; localID ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1452" id="1452">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd1456" id="1456">
                <source></source>
                <target>JSON Validate ( vJson ; vSchema ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1456" id="1456">
                <source></source>
                <target>checks the compliance of the vJson JSON contents with the rules defined in the vSchema JSON schema</target>
            </trans-unit>
            <trans-unit resname="cmd1457" id="1457">
                <source></source>
                <target>OBJECT Get action ( {* ;} object ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1457" id="1457">
                <source></source>
                <target>returns the name and (if any) parameter of the standard action associated with the object(s) designated by the object and *  parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1466" id="1466">
                <source></source>
                <target>Form  -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1466" id="1466">
                <source></source>
                <target>returns the object associated with the current form, if any</target>
            </trans-unit>
            <trans-unit resname="cmd1468" id="1468">
                <source></source>
                <target>FORM SET ENTRY ORDER ( objectNames {; pageNumber} )</target>
            </trans-unit>
            <trans-unit resname="desc1468" id="1468">
                <source></source>
                <target>allows to set dynamically the entry order of the current form for the current process based upon the objectNames array</target>
            </trans-unit>
            <trans-unit resname="cmd1469" id="1469">
                <source></source>
                <target>FORM GET ENTRY ORDER ( objectNames {; pageNumber | *} )</target>
            </trans-unit>
            <trans-unit resname="desc1469" id="1469">
                <source></source>
                <target>returns in objectNames the sorted names of objects that define the form entry order</target>
            </trans-unit>
            <trans-unit resname="cmd1470" id="1470">
                <source></source>
                <target>This -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1470" id="1470">
                <source></source>
                <target>returns a reference to the currently processed object</target>
            </trans-unit>
            <trans-unit resname="cmd1471" id="1471">
                <source></source>
                <target>New object {( property ; value {; property2 ; value2 ; ... ; propertyN ; valueN} )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1471" id="1471">
                <source></source>
                <target>creates a new empty or prefilled object and returns its reference</target>
            </trans-unit>
            <trans-unit resname="cmd1472" id="1472">
                <source></source>
                <target>New collection {( value {; value2 ; ... ; valueN} )} -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1472" id="1472">
                <source></source>
                <target>creates a new empty or prefilled collection and returns its reference</target>
            </trans-unit>
            <trans-unit resname="cmd1478" id="1478">
                <source></source>
                <target>JSON Resolve pointers ( object {; options} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1478" id="1478">
                <source></source>
                <target>resolves all the JSON pointers found in the object, with regards to options settings (if any)</target>
            </trans-unit>
            <trans-unit resname="cmd1482" id="1482">
                <source></source>
                <target>ds {( localID )} -&gt; DataStore</target>
            </trans-unit>
            <trans-unit resname="desc1482" id="1482">
                <source></source>
                <target>returns a reference to the datastore matching the current 4D database or the database designated by localID</target>
            </trans-unit>
            <trans-unit resname="cmd1488" id="1488">
                <source></source>
                <target>C_COLLECTION ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc1488" id="1488">
                <source></source>
                <target>assigns the Collection type to all the variables that are specified</target>
            </trans-unit>
            <trans-unit resname="cmd1489" id="1489">
                <source></source>
                <target>Get license info -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1489" id="1489">
                <source></source>
                <target>returns an object providing detailed information about the active license</target>
            </trans-unit>
            <trans-unit resname="cmd1495" id="1495">
                <source></source>
                <target>Get process activity {( options )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1495" id="1495">
                <source></source>
                <target>returns a snapshot of connected user sessions and/or related running processes at a given time</target>
            </trans-unit>
            <trans-unit resname="cmd1501" id="1501">
                <source></source>
                <target>LISTBOX SET AUTO ROW HEIGHT ( {* ;} object ; selector ; value ; unit )</target>
            </trans-unit>
            <trans-unit resname="desc1501" id="1501">
                <source></source>
                <target>allows you to set the minimum or maximum row height value in the list box object designated using the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1502" id="1502">
                <source></source>
                <target>LISTBOX Get auto row height ( {* ;} object ; selector {; unit} )  -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1502" id="1502">
                <source></source>
                <target>returns the current minimum or maximum row height value set for the list box object designated using the object and * parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1509" id="1509">
                <source></source>
                <target>Value type ( expression ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc1509" id="1509">
                <source></source>
                <target>returns the type of the value resulting from the evaluation of the expression you passed as parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1512" id="1512">
                <source></source>
                <target>Create entity selection ( dsTable {; settings} ) -&gt; EntitySelection</target>
            </trans-unit>
            <trans-unit resname="desc1512" id="1512">
                <source></source>
                <target>builds and returns a new entity selection related to the dataclass matching the given dsTable, according to the current selection of this table</target>
            </trans-unit>
            <trans-unit resname="cmd1513" id="1513">
                <source></source>
                <target>USE ENTITY SELECTION ( entitySelection )</target>
            </trans-unit>
            <trans-unit resname="desc1513" id="1513">
                <source></source>
                <target>updates the current selection of the table matching the dataclass of the entitySelection parameter, according to the content of the entity selection</target>
            </trans-unit>
            <trans-unit resname="cmd1517" id="1517">
                <source></source>
                <target>Null  -&gt; Null</target>
            </trans-unit>
            <trans-unit resname="desc1517" id="1517">
                <source></source>
                <target>returns the Null type value null</target>
            </trans-unit>
            <trans-unit resname="cmd1525" id="1525">
                <source></source>
                <target>Storage  -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1525" id="1525">
                <source></source>
                <target>returns the catalog of shared objects or shared collections that you have registered in the &lt;em&gt;Storage&lt;/em&gt; object on the current machine or component</target>
            </trans-unit>
            <trans-unit resname="cmd1526" id="1526">
                <source></source>
                <target>New shared object {( property ; value {; property2 ; value2 ; ... ; propertyN ; valueN} )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1526" id="1526">
                <source></source>
                <target>creates a new empty or prefilled shared object and returns its reference</target>
            </trans-unit>
            <trans-unit resname="cmd1527" id="1527">
                <source></source>
                <target>New shared collection {( value {; value2 ; ... ; valueN} )} -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1527" id="1527">
                <source></source>
                <target>creates a new empty or prefilled shared collection and returns its reference</target>
            </trans-unit>
            <trans-unit resname="cmd1528" id="1528">
                <source></source>
                <target>Load 4D View document ( 4DViewDocument ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1528" id="1528">
                <source></source>
                <target>convert a 4D View document into a 4D object</target>
            </trans-unit>
            <trans-unit resname="cmd1531" id="1531">
                <source></source>
                <target>WEB Get server info {( withCache )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1531" id="1531">
                <source></source>
                <target>returns an object containing detailed runtine information on the 4D Web server current session</target>
            </trans-unit>
            <trans-unit resname="cmd1533" id="1533">
                <source></source>
                <target>Generate password hash ( password {; options} ) -&gt; String</target>
            </trans-unit>
            <trans-unit resname="desc1533" id="1533">
                <source></source>
                <target>returns a secure password hash generated by a cryptographic hash algorithm.</target>
            </trans-unit>
            <trans-unit resname="cmd1534" id="1534">
                <source></source>
                <target>Verify password hash ( password ; hash ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1534" id="1534">
                <source></source>
                <target>verifies that the given hash matches the given password</target>
            </trans-unit>
            <trans-unit resname="cmd1537" id="1537">
                <source></source>
                <target>Bool ( expression ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1537" id="1537">
                <source></source>
                <target>returns the boolean form of the expression you passed in expression</target>
            </trans-unit>
            <trans-unit resname="cmd1547" id="1547">
                <source></source>
                <target>Path to object ( path {; pathType} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1547" id="1547">
                <source></source>
                <target>returns an object containing the specific properties of the path you passed in parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1548" id="1548">
                <source></source>
                <target>Object to path ( pathObject ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1548" id="1548">
                <source></source>
                <target>returns a pathname (string) based upon path information you passed in the pathObject parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1554" id="1554">
                <source></source>
                <target>Split string ( stringToSplit ; separator {; options} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1554" id="1554">
                <source></source>
                <target>returns a collection of strings, created by splitting stringToSplit into substrings at the boundaries specified by the separator parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1562" id="1562">
                <source></source>
                <target>COLLECTION TO ARRAY ( collection ; array {; propertyName}{; array2 ; propertyName2 ; ... ; arrayN ; propertyNameN} )</target>
            </trans-unit>
            <trans-unit resname="desc1562" id="1562">
                <source></source>
                <target>fills one or more array(s) with elements or propertyName values from the collection into the array(s)</target>
            </trans-unit>
            <trans-unit resname="cmd1563" id="1563">
                <source></source>
                <target>ARRAY TO COLLECTION ( collection ; array {; propertyName}{; array2 ; propertyName2 ; ... ; arrayN ; propertyNameN} )</target>
            </trans-unit>
            <trans-unit resname="desc1563" id="1563">
                <source></source>
                <target>copies one or more array(s) into the elements or the propertyName values of collection</target>
            </trans-unit>
            <trans-unit resname="cmd1565" id="1565">
                <source></source>
                <target>Export structure file ( folderPath {; options} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1565" id="1565">
                <source></source>
                <target>breaks down the current 4D database structure into a set of text-based files or native picture files and stores them in the specified folderPath</target>
            </trans-unit>
            <trans-unit resname="cmd1566" id="1566">
                <source></source>
                <target>File ( path | 4Dfile {; pathType | *} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1566" id="1566">
                <source></source>
                <target>creates and returns a new object of the &lt;em&gt;File&lt;/em&gt; type</target>
            </trans-unit>
            <trans-unit resname="cmd1567" id="1567">
                <source></source>
                <target>Folder ( path | 4Dfolder {; pathType | *} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1567" id="1567">
                <source></source>
                <target>creates and returns a new object of the Folder type</target>
            </trans-unit>
            <trans-unit resname="cmd1570" id="1570">
                <source></source>
                <target>FORM Convert to dynamic ( {aTable ;} formName ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1570" id="1570">
                <source></source>
                <target>converts the formName (classic form) to a dynamic form and returns it in an object.</target>
            </trans-unit>
            <trans-unit resname="cmd1571" id="1571">
                <source></source>
                <target>Get system info  -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1571" id="1571">
                <source></source>
                <target>returns an object containg information about the operating system and the characteristics of the system hardware and software from the machine it&#39;s executed on</target>
            </trans-unit>
            <trans-unit resname="cmd1572" id="1572">
                <source></source>
                <target>Is macOS -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1572" id="1572">
                <source></source>
                <target>True if the current operating system is macOS</target>
            </trans-unit>
            <trans-unit resname="cmd1573" id="1573">
                <source></source>
                <target>Is Windows -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1573" id="1573">
                <source></source>
                <target>True if the current operating system is Windows</target>
            </trans-unit>
            <trans-unit resname="cmd1576" id="1576">
                <source></source>
                <target>Parse formula ( formula {; options}{; errorMessage} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1576" id="1576">
                <source></source>
                <target>analyzes the 4D formula, checks its syntax, and returns its normalized form</target>
            </trans-unit>
            <trans-unit resname="cmd1596" id="1596">
                <source></source>
                <target>MOBILE APP REFRESH SESSIONS</target>
            </trans-unit>
            <trans-unit resname="desc1596" id="1596">
                <source></source>
                <target>checks all mobile application session files located in the MobileApps folder of the server, and updates existing session contents in memory for any edited files</target>
            </trans-unit>
            <trans-unit resname="cmd1597" id="1597">
                <source></source>
                <target>Formula ( formulaExp ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1597" id="1597">
                <source></source>
                <target>creates a formula object based upon the formulaExp expression.</target>
            </trans-unit>
            <trans-unit resname="cmd1599" id="1599">
                <source></source>
                <target>Get application info -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1599" id="1599">
                <source></source>
                <target>returns an object providing detailed information about the active application&#39;s activity and network configuration</target>
            </trans-unit>
            <trans-unit resname="cmd1601" id="1601">
                <source></source>
                <target>Formula from string ( formulaString ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1601" id="1601">
                <source></source>
                <target>creates a formula object based upon the formulaString.</target>
            </trans-unit>
            <trans-unit resname="cmd1604" id="1604">
                <source></source>
                <target>MAIL Convert to MIME ( mail {; options} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1604" id="1604">
                <source></source>
                <target>converts an email object into MIME text</target>
            </trans-unit>
            <trans-unit resname="cmd1606" id="1606">
                <source></source>
                <target>FORM Event -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1606" id="1606">
                <source></source>
                <target>returns an object containing information about the form event that has just occurred</target>
            </trans-unit>
            <trans-unit resname="cmd1608" id="1608">
                <source></source>
                <target>SMTP New transporter ( server ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1608" id="1608">
                <source></source>
                <target>configures a new SMTP connection according to the server parameter and returns a new &lt;em&gt;transporter&lt;/em&gt; object</target>
            </trans-unit>
            <trans-unit resname="cmd1609" id="1609">
                <source></source>
                <target>Data file encryption status ( structurePath , dataPath ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1609" id="1609">
                <source></source>
                <target>returns an object providing the encryption status for the data file designated by the structurePath and dataPath parameters</target>
            </trans-unit>
            <trans-unit resname="cmd1610" id="1610">
                <source></source>
                <target>Encrypt data file ( structurePath ; dataPath {; newPassPhrase | newDataKey {; archiveFolder {; curPassPhrase | curDataKey {; methodName}}}} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1610" id="1610">
                <source></source>
                <target>encrypt or re-encrypt the data file designated by the dataPath parameter associated to the structurePath parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1611" id="1611">
                <source></source>
                <target>New data key ( passPhrase ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1611" id="1611">
                <source></source>
                <target>generates a binary data encryption key from the text passed in the passPhrase parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1632" id="1632">
                <source></source>
                <target>SEND MESSAGE TO REMOTE USER ( message {; userSession} )</target>
            </trans-unit>
            <trans-unit resname="desc1632" id="1632">
                <source></source>
                <target>sends a message to all remote users or to a specific remote user.</target>
            </trans-unit>
            <trans-unit resname="cmd1633" id="1633">
                <source></source>
                <target>DROP REMOTE USER ( userSession )</target>
            </trans-unit>
            <trans-unit resname="desc1633" id="1633">
                <source></source>
                <target>disconnects a specific user remotely connected to the 4D Server</target>
            </trans-unit>
            <trans-unit resname="cmd1634" id="1634">
                <source></source>
                <target>ABORT PROCESS BY ID ( uniqueID )</target>
            </trans-unit>
            <trans-unit resname="desc1634" id="1634">
                <source></source>
                <target>stops a specific process on the 4D Server</target>
            </trans-unit>
            <trans-unit resname="cmd1635" id="1635">
                <source></source>
                <target>REJECT NEW REMOTE CONNECTIONS ( rejectStatus )</target>
            </trans-unit>
            <trans-unit resname="desc1635" id="1635">
                <source></source>
                <target>specifies whether or not the application server accepts new remote user connections</target>
            </trans-unit>
            <trans-unit resname="cmd1636" id="1636">
                <source></source>
                <target>SOAP REJECT NEW REQUESTS ( rejectStatus )</target>
            </trans-unit>
            <trans-unit resname="desc1636" id="1636">
                <source></source>
                <target>specifies whether or not the Web Services server accepts new SOAP requests</target>
            </trans-unit>
            <trans-unit resname="cmd1637" id="1637">
                <source></source>
                <target>ZIP Read archive ( zipFile {; password} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1637" id="1637">
                <source></source>
                <target>retrieves the contents of zipFile and returns it as an object</target>
            </trans-unit>
            <trans-unit resname="cmd1638" id="1638">
                <source></source>
                <target>Register data key ( curPassPhrase | curDataKey ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1638" id="1638">
                <source></source>
                <target>adds the data encryption key passed in parameter to the 4D keychain</target>
            </trans-unit>
            <trans-unit resname="cmd1639" id="1639">
                <source></source>
                <target>Discover data key  -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc1639" id="1639">
                <source></source>
                <target>searches for a valid encryption key corresponding to the currently opened data file at the root level of all connected devices and returns True if successful</target>
            </trans-unit>
            <trans-unit resname="cmd1640" id="1640">
                <source></source>
                <target>ZIP Create archive ( fileOrFolder | zipStructure  ; destinationFile {; options} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1640" id="1640">
                <source></source>
                <target>creates a compressed ZIP archive object and returns the status of the operation</target>
            </trans-unit>
            <trans-unit resname="cmd1641" id="1641">
                <source></source>
                <target>New signal {( description )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1641" id="1641">
                <source></source>
                <target>creates a &lt;em&gt;signal&lt;/em&gt; object</target>
            </trans-unit>
            <trans-unit resname="cmd1644" id="1644">
                <source></source>
                <target>MAIL New attachment ( value {; name {; cid {; type {; disposition}}}} ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1644" id="1644">
                <source></source>
                <target>allows you to create an attachment object that you can add to an &lt;em&gt;Email&lt;/em&gt; object</target>
            </trans-unit>
            <trans-unit resname="cmd1658" id="1658">
                <source></source>
                <target>LISTBOX Get row color ( {* ;} object ; row {; colorType} )  -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc1658" id="1658">
                <source></source>
                <target>returns the color of a row or a cell in the list box designated by the object and * parameters as a CSS string</target>
            </trans-unit>
            <trans-unit resname="cmd1662" id="1662">
                <source></source>
                <target>Get call chain -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1662" id="1662">
                <source></source>
                <target>returns a collection of objects describing each step of the method call chain within the current process</target>
            </trans-unit>
            <trans-unit resname="cmd1666" id="1666">
                <source></source>
                <target>SET USER ALIAS ( alias )</target>
            </trans-unit>
            <trans-unit resname="desc1666" id="1666">
                <source></source>
                <target>defines an alternate, custom name to use in place of the current 4D user account name for the current session</target>
            </trans-unit>
            <trans-unit resname="cmd1674" id="1674">
                <source></source>
                <target>WEB Server {( option )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1674" id="1674">
                <source></source>
                <target>returns the database Web server object, or the Web server object defined through the option parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1681" id="1681">
                <source></source>
                <target>MAIL Convert from MIME ( mime ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1681" id="1681">
                <source></source>
                <target>converts a MIME document into a valid email object</target>
            </trans-unit>
            <trans-unit resname="cmd1683" id="1683">
                <source></source>
                <target>C_VARIANT ( {method ;} variable {; variable2 ; ... ; variableN} ) </target>
            </trans-unit>
            <trans-unit resname="desc1683" id="1683">
                <source></source>
                <target>casts each specified variable as a Variant variable</target>
            </trans-unit>
            <trans-unit resname="cmd1697" id="1697">
                <source></source>
                <target>POP3 New transporter ( server ) -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1697" id="1697">
                <source></source>
                <target>configures a new POP3 connection according to the server parameter and returns a new &lt;em&gt;transporter&lt;/em&gt; object</target>
            </trans-unit>
            <trans-unit resname="cmd1700" id="1700">
                <source></source>
                <target>Font file ( fontFamily {; fontStyle} ) -&gt; Object, Null</target>
            </trans-unit>
            <trans-unit resname="desc1700" id="1700">
                <source></source>
                <target>returns an object describing the font file in your OS corresponding to the fontFamily and, optionally, fontStyle you passed in parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1706" id="1706">
                <source></source>
                <target>Super {( param {; param2 ; ... ; paramN} )} -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1706" id="1706">
                <source></source>
                <target>makes calls to the superclass</target>
            </trans-unit>
            <trans-unit resname="cmd1709" id="1709">
                <source></source>
                <target>4D  -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1709" id="1709">
                <source></source>
                <target>returns a &lt;em&gt;Class Store&lt;/em&gt; object containing all available built-in classes in the 4D application</target>
            </trans-unit>
            <trans-unit resname="cmd1710" id="1710">
                <source></source>
                <target>cs -&gt; Object</target>
            </trans-unit>
            <trans-unit resname="desc1710" id="1710">
                <source></source>
                <target>returns a &lt;em&gt;Class Store&lt;/em&gt; object containing all user classes defined in the current database or component</target>
            </trans-unit>
            <trans-unit resname="cmd1712" id="1712">
                <source></source>
                <target>START MONITORING ACTIVITY ( duration {; source} )</target>
            </trans-unit>
            <trans-unit resname="desc1712" id="1712">
                <source></source>
                <target>records operations exceeding a specified duration in memory</target>
            </trans-unit>
            <trans-unit resname="cmd1713" id="1713">
                <source></source>
                <target>Get Monitored Activity  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1713" id="1713">
                <source></source>
                <target>returns a collection of objects describing operations recorded according to the specifications set by the START MONITORING ACTIVITY command</target>
            </trans-unit>
            <trans-unit resname="cmd1715" id="1715">
                <source></source>
                <target>LISTBOX SELECT ROWS ( {* ;} object ; selection {; action} ) </target>
            </trans-unit>
            <trans-unit resname="desc1715" id="1715">
                <source></source>
                <target>selects the rows of an entity selection or collection list box that correspond to the entities or objects in the selection parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1716" id="1716">
                <source></source>
                <target>WEB Server list  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1716" id="1716">
                <source></source>
                <target>returns a collection of all Web server objects available in the 4D application</target>
            </trans-unit>
            <trans-unit resname="cmd1718" id="1718">
                <source></source>
                <target>OB Values ( object ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1718" id="1718">
                <source></source>
                <target>returns a collection of variants containing all of the enumerable property values of the object</target>
            </trans-unit>
            <trans-unit resname="cmd1719" id="1719">
                <source></source>
                <target>OB Keys ( object ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1719" id="1719">
                <source></source>
                <target>returns a collection of strings containing all of the enumerable property names of the object</target>
            </trans-unit>
            <trans-unit resname="cmd1720" id="1720">
                <source></source>
                <target>OB Entries ( object ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc1720" id="1720">
                <source></source>
                <target>returns a collection of objects containing the contents of the object as key / value property pairs</target>
            </trans-unit>
            <trans-unit resname="cmd1721" id="1721">
                <source></source>
                <target>STOP MONITORING ACTIVITY</target>
            </trans-unit>
            <trans-unit resname="desc1721" id="1721">
                <source></source>
                <target>stops tracking activity started with the START MONITORING ACTIVITY command</target>
            </trans-unit>
            <trans-unit resname="cmd1727" id="1727">
                <source></source>
                <target>WA Run offscreen area ( parameters ) -&gt; Mixed</target>
            </trans-unit>
            <trans-unit resname="desc1727" id="1727">
                <source></source>
                <target>creates a web area in memory</target>
            </trans-unit>
            <trans-unit resname="cmd1730" id="1730">
                <source></source>
                <target>OB Class ( object ) -&gt; Object, Null</target>
            </trans-unit>
            <trans-unit resname="desc1730" id="1730">
                <source></source>
                <target>returns the class of the object passed in parameter</target>
            </trans-unit>
            <trans-unit resname="cmd1736" id="1736">
                <source></source>
                <target>WA OPEN WEB INSPECTOR ( {* ;} object )</target>
            </trans-unit>
            <trans-unit resname="desc1736" id="1736">
                <source></source>
                <target>opens a web inspector for the web area designated by the * and object parameters</target>
            </trans-unit>
            <trans-unit resname="cmd3367" id="3367">
                <source></source>
                <target>$1, $2, $3, $4 -&gt; On REST Authentication database method -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc3367" id="3367">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd9293" id="9293">
                <source></source>
                <target>collection.length -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc9293" id="9293">
                <source></source>
                <target>returns the number of elements in the collection</target>
            </trans-unit>
            <trans-unit resname="cmd16001" id="16001">
                <source></source>
                <target>$1, $2, $3 -&gt; On Server Open Connection database method -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc16001" id="16001">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd705242" id="705242">
                <source></source>
                <target>collection.remove ( index {; howMany} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc705242" id="705242">
                <source></source>
                <target>removes one or more element(s) from the specified index position in the collection and returns the edited collection</target>
            </trans-unit>
            <trans-unit resname="cmd705243" id="705243">
                <source></source>
                <target>collection.resize ( size {; defaultValue} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc705243" id="705243">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd705244" id="705244">
                <source></source>
                <target>collection.count ( {propertyPath} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc705244" id="705244">
                <source></source>
                <target>returns the number of non-null elements in the collection</target>
            </trans-unit>
            <trans-unit resname="cmd705245" id="705245">
                <source></source>
                <target>collection.some ( {startFrom ;} methodName {; param {; param2 ; ... ; paramN}} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc705245" id="705245">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd705246" id="705246">
                <source></source>
                <target>collection.every ( {startFrom ;} methodName {; param {; param2 ; ... ; paramN}} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc705246" id="705246">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd705247" id="705247">
                <source></source>
                <target>collection.lastIndexOf ( toSearch {; startFrom} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc705247" id="705247">
                <source></source>
                <target>searches the toSearch expression among collection elements and returns the index of the last occurrence, or -1 if it was not found</target>
            </trans-unit>
            <trans-unit resname="cmd705248" id="705248">
                <source></source>
                <target>collection.reduce ( methodName {; initValue}{; param}{; param2 ; ... ; paramN} ) -&gt; Text, Number, Object, Collection, Date, Boolean</target>
            </trans-unit>
            <trans-unit resname="desc705248" id="705248">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd705249" id="705249">
                <source></source>
                <target>collection.filter ( methodName {; param}{; param2 ; ... ; paramN} )  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc705249" id="705249">
                <source></source>
                <target>returns a new collection containing all elements of the original collection for which methodName method result is true</target>
            </trans-unit>
            <trans-unit resname="cmd705250" id="705250">
                <source></source>
                <target>collection.average ( {propertyPath} ) -&gt; Real, Undefined</target>
            </trans-unit>
            <trans-unit resname="desc705250" id="705250">
                <source></source>
                <target>returns the arithmetic mean (average) of defined values in the collection instance</target>
            </trans-unit>
            <trans-unit resname="cmd705251" id="705251">
                <source></source>
                <target>collection.concat ( value {; value2 ; ... ; valueN} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc705251" id="705251">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd705252" id="705252">
                <source></source>
                <target>collection.countValues ( value {; propertyPath} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc705252" id="705252">
                <source></source>
                <target>returns the number of times value is found in the collection</target>
            </trans-unit>
            <trans-unit resname="cmd705253" id="705253">
                <source></source>
                <target>collection.orderByMethod ( methodName {; extraParam}{; extraParam2 ; ... ; extraParamN} )  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc705253" id="705253">
                <source></source>
                <target>retourne une nouvelle  collection contenant tous les éléments de la collection d&#39;origine triés selon les critères définis par nomMéthode</target>
            </trans-unit>
            <trans-unit resname="cmd705254" id="705254">
                <source></source>
                <target>collection.min ( {propertyPath} ) -&gt; Boolean, Text, Number, Collection, Object, Date</target>
            </trans-unit>
            <trans-unit resname="desc705254" id="705254">
                <source></source>
                <target>returns the element with the smallest value in the collection</target>
            </trans-unit>
            <trans-unit resname="cmd705255" id="705255">
                <source></source>
                <target>collection.push ( element {; element2 ; ... ; elementN} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc705255" id="705255">
                <source></source>
                <target>appends one or more element(s) to the end of the collection instance and returns the edited collection</target>
            </trans-unit>
            <trans-unit resname="cmd705256" id="705256">
                <source></source>
                <target>collection.clear () -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc705256" id="705256">
                <source></source>
                <target>removes all elements from the collection instance and returns an empty collection</target>
            </trans-unit>
            <trans-unit resname="cmd805250" id="805250">
                <source></source>
                <target>collection.slice ( startFrom {; end} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805250" id="805250">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805251" id="805251">
                <source></source>
                <target>collection.extract ( propertyPath {; targetPath}{; propertyPath2 ; targetPath2 ; ... ; propertyPathN ; targetPathN}{; option})  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805251" id="805251">
                <source></source>
                <target>creates and returns a new collection containing propertyPath values extracted from the original collection of objects</target>
            </trans-unit>
            <trans-unit resname="cmd805252" id="805252">
                <source></source>
                <target>collection.map ( $1 ; $2 {; $1_2 ; $2_2 ; ... ; $1_N ; $2_N} )</target>
            </trans-unit>
            <trans-unit resname="desc805252" id="805252">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805253" id="805253">
                <source></source>
                <target>collection.pop () -&gt; Expression</target>
            </trans-unit>
            <trans-unit resname="desc805253" id="805253">
                <source></source>
                <target>removes the last element from the collection and returns it as the function result</target>
            </trans-unit>
            <trans-unit resname="cmd805254" id="805254">
                <source></source>
                <target>collection.combine ( col2 {; index} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805254" id="805254">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805255" id="805255">
                <source></source>
                <target>collection.indexOf ( toSearch {; startFrom} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc805255" id="805255">
                <source></source>
                <target>searches the toSearch expression among collection elements and returns the index of the first found occurrence, or -1 if it was not found</target>
            </trans-unit>
            <trans-unit resname="cmd805256" id="805256">
                <source></source>
                <target>collection.findIndex ( {startFrom ;} methodName {; param {; param2 ; ... ; paramN}} ) -&gt; Longint</target>
            </trans-unit>
            <trans-unit resname="desc805256" id="805256">
                <source></source>
                <target>returns the index, in the collection, of the first value for which methodName, applied on each element, returns true</target>
            </trans-unit>
            <trans-unit resname="cmd805257" id="805257">
                <source></source>
                <target>collection.shift () -&gt; Text, Number, Object, Collection, Date</target>
            </trans-unit>
            <trans-unit resname="desc805257" id="805257">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805258" id="805258">
                <source></source>
                <target>collection.find ( {startFrom ;} methodName {; param {; param2 ; ... ; paramN}} ) -&gt; </target>
            </trans-unit>
            <trans-unit resname="desc805258" id="805258">
                <source></source>
                <target>returns the first value in the collection for which methodName, applied on each element, returns true</target>
            </trans-unit>
            <trans-unit resname="cmd805259" id="805259">
                <source></source>
                <target>collection.sort ( {methodName {; extraParam}{; extraParam2 ; ... ; extraParamN}} )  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805259" id="805259">
                <source></source>
                <target>sorts the elements of the original collection and also returns the sorted collection</target>
            </trans-unit>
            <trans-unit resname="cmd805260" id="805260">
                <source></source>
                <target>collection.sum ( {propertyPath} ) -&gt; Real</target>
            </trans-unit>
            <trans-unit resname="desc805260" id="805260">
                <source></source>
                <target>returns the sum for all values in the collection instance</target>
            </trans-unit>
            <trans-unit resname="cmd805261" id="805261">
                <source></source>
                <target>collection.equal ( collection2 {; option} ) -&gt; Boolean</target>
            </trans-unit>
            <trans-unit resname="desc805261" id="805261">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805262" id="805262">
                <source></source>
                <target>collection.fill ( value {; startFrom {; end}} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805262" id="805262">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805263" id="805263">
                <source></source>
                <target>collection.distinct ( {propertyPath}{;}{option} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805263" id="805263">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805264" id="805264">
                <source></source>
                <target>collection.reverse () -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805264" id="805264">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805265" id="805265">
                <source></source>
                <target>collection.indices ( queryString {; value}{; value2 ; ... ; valueN} )  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805265" id="805265">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805266" id="805266">
                <source></source>
                <target>collection.join ( delimiter {; option} ) -&gt; Text</target>
            </trans-unit>
            <trans-unit resname="desc805266" id="805266">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd805267" id="805267">
                <source></source>
                <target>collection.query ( queryString {; value}{; value2 ; ... ; valueN}{; querySettings})  -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc805267" id="805267">
                <source></source>
                <target>returns all elements of a collection of objects that match the search conditions defined by queryString and (optionally) value and querySettings</target>
            </trans-unit>
            <trans-unit resname="cmd805288" id="805288">
                <source></source>
                <target>collection.max ( {propertyPath} ) -&gt; Boolean, Text, Number, Collection, Object, Date</target>
            </trans-unit>
            <trans-unit resname="desc805288" id="805288">
                <source></source>
                <target>returns the element with the highest value in the collection</target>
            </trans-unit>
            <trans-unit resname="cmd905251" id="905251">
                <source></source>
                <target>collection.orderBy ( {criteria} ) -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc905251" id="905251">
                <source></source>
                <target>returns a new collection containing all elements of the collection in the order specified by criteria</target>
            </trans-unit>
            <trans-unit resname="cmd905252" id="905252">
                <source></source>
                <target>On Exit database method </target>
            </trans-unit>
            <trans-unit resname="desc905252" id="905252">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd905254" id="905254">
                <source></source>
                <target>formula.apply ({ thisObj {; formulaParams}} ) -&gt; Mixed</target>
            </trans-unit>
            <trans-unit resname="desc905254" id="905254">
                <source></source>
                <target>executes the formula object to which it is applied and returns the resulting value</target>
            </trans-unit>
            <trans-unit resname="cmd905263" id="905263">
                <source></source>
                <target>On Startup database method </target>
            </trans-unit>
            <trans-unit resname="desc905263" id="905263">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            <trans-unit resname="cmd905264" id="905264">
                <source></source>
                <target>dataStore.getRequestLog () -&gt; Collection</target>
            </trans-unit>
            <trans-unit resname="desc905264" id="905264">
                <source></source>
                <target>to be done</target>
            </trans-unit>
            
        </group>
      </body>
    </file>
</xliff>